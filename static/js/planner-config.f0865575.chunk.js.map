{"version":3,"sources":["planner-config.ts"],"names":["rootUri","process","REACT_APP_ROUTABLE_TILES","replace","RoutableTileProviderLocalhost","coordinate","zoom","x","y","RoutableTileProviderDefault","container","unbind","TYPES","RoutableTileProvider","bind","to","inSingletonScope","whenTargetTagged","RoutingPhase","Base","Transit","Planner","FlexibleRoadPlanner"],"mappings":"2ZAYMA,GACJ,UAAAC,mHAAYC,gCAAZ,eAAsCC,QAAQ,MAAO,MACrD,wCAEIC,E,iLAEsBC,GACxB,MAAM,GAAN,OAAUL,EAAV,YAAqBK,EAAWC,KAAhC,YAAwCD,EAAWE,EAAnD,YAAwDF,EAAWG,O,GAH3BC,KAO5CC,IAAUC,OAAOC,IAAMC,sBACvBH,IACGI,KAA4BF,IAAMC,sBAClCE,GAAGX,GACHY,mBACAC,iBAAiB,QAASC,IAAaC,MAC1CT,IACGI,KAA4BF,IAAMC,sBAClCE,GAAGX,GACHY,mBACAC,iBAAiB,QAASC,IAAaE,SAGnC,IAAMC,EAAUC","file":"static/js/planner-config.f0865575.chunk.js","sourcesContent":["import \"reflect-metadata\";\n\nimport { FlexibleRoadPlanner } from \"plannerjs\";\n\nimport TileCoordinate from \"plannerjs/lib/entities/tiles/TileCoordinate\";\nimport TYPES from \"plannerjs/lib/types\";\nimport RoutableTileProviderDefault from \"plannerjs/lib/fetcher/tiles/RoutableTileProviderDefault\";\nimport IRoutableTileProvider from \"plannerjs/lib/fetcher/tiles/IRoutableTileProvider\";\nimport RoutingPhase from \"plannerjs/lib/enums/RoutingPhase\";\n\nimport container from \"plannerjs/lib/configs/road_planner\";\n\nconst rootUri =\n  process.env.REACT_APP_ROUTABLE_TILES?.replace(/\\/$/, \"\") ||\n  \"https://tile.olmap.org/routable-tiles\";\n\nclass RoutableTileProviderLocalhost extends RoutableTileProviderDefault {\n  // eslint-disable-next-line class-methods-use-this\n  public getIdForTileCoords(coordinate: TileCoordinate): string {\n    return `${rootUri}/${coordinate.zoom}/${coordinate.x}/${coordinate.y}`;\n  }\n}\n\ncontainer.unbind(TYPES.RoutableTileProvider);\ncontainer\n  .bind<IRoutableTileProvider>(TYPES.RoutableTileProvider)\n  .to(RoutableTileProviderLocalhost)\n  .inSingletonScope()\n  .whenTargetTagged(\"phase\", RoutingPhase.Base);\ncontainer\n  .bind<IRoutableTileProvider>(TYPES.RoutableTileProvider)\n  .to(RoutableTileProviderLocalhost)\n  .inSingletonScope()\n  .whenTargetTagged(\"phase\", RoutingPhase.Transit);\n\n// eslint-disable-next-line import/prefer-default-export\nexport const Planner = FlexibleRoadPlanner;\n"],"sourceRoot":""}