{"version":3,"sources":["map-style.ts","hooks/useWelcomeSeenFlag.ts","mapbox-style-typescript.ts","components/Pin.tsx","components/Triangle.tsx","olmap.ts","components/OLMapDialog.tsx","components/OLMapImages.tsx","components/UserPosition.tsx","components/GeolocateControl.tsx","components/Tunnel.svg","components/TunnelsControl.tsx","components/LocaleSelect.tsx","components/HelpControl.tsx","routable-tiles.ts","planner.ts","overpass.ts","mapbox-utils.ts","RoutableTilesToGeoJSON.js","minimal-xyz-viewer.js","projections.ts","util/hardcoded-data.ts","translations.ts","components/EntranceCard.tsx","components/HeightLimitSign.svg","components/VenueDialog.tsx","App.tsx"],"names":["houseLabelMaybeSpace","maybeSpace","hidden","notHidden","useWelcomeSeenFlag","useLocalStorageState","defaultValue","welcomeSeen","literal","val","has","key","get","getVar","toBoolean","expression","not","length","gt","expression1","expression2","any","expressions","all","coalesce","format","parts","flatMap","cond","cases","venueLayers","id","type","paint","layout","routeLayers","filter","beforeId","buildingHighlightLayer","parkingLayers","minzoom","tunnelLayers","tunnelMaskLayers","zoomDependentEntranceLabel","concat","labelName","midZoomLabel","caseEntranceLabel","missing","visible","ifEntranceLabelVisibleElse","invisible","allEntrancesLayers","maxzoom","anchors","angle","index","anglesToAnchors","SVG_VIEWBOX","SVG_PATH","pinAsSVG","size","style","Pin","height","fill","stroke","dataTestId","data-testid","viewBox","pointerEvents","d","cursor","gradientTransform","offset","stopColor","stopOpacity","TRIANGLE_PATH","dotPath","radius","triangleDotAsSVG","dotSize","dotStyle","triangleAsSVG","olmapNoteURL","noteId","olmapNoteToElement","note","lat","Number","lon","deliveryTypePriorities","main","yes","null","no","processOlmapData","data","workplace","workplace_entrances","sort","a","b","deliveries","fetchOlmapUrl","url","fetch","response","json","ok","state","code","status","detail","fetchOlmapWorkplace","olmapId","locale","undefined","fetchOlmapData","rawResponse","image_note","image_note_id","image","tags","osm_feature","as_osm_tags","name","street","delivery_instructions","map","entrance","entrance_data","delivery_types","description","description_language","description_translated","delivery_hours","delivery_instructions_language","delivery_instructions_translated","entrance_id","unloading_places","unloading_place","opening_hours","entrances","access_points","image_notes","venueDataToGeoJSON","venueData","osmData","features","forEach","push","geometry","coordinates","properties","romanize","venueDataToUnloadingPlaceData","workplaceEntrances","unloadingPlaceEntrances","workplaceEntrance","unloadingPlace","foundEntrances","newEntrance","venueDataToUnloadingPlaces","OLMapDialog","onClose","Dialog","open","fullWidth","PaperProps","overflow","DialogTitle","IconButton","position","top","right","onClick","borderTop","title","src","border","padding","margin","width","OLMapImages","onImageClick","olmapData","content","slice","href","target","rel","display","maxWidth","maxHeight","alt","textAlign","UserPosition","strokeWidth","cx","cy","r","GeolocateControl","onGeolocate","onGeolocateError","positionOptions","enableHighAccuracy","timeout","onEnable","onDisable","enableOnMount","useState","window","navigator","geolocation","isGeolocationSupported","permissions","isPermissionsSupported","permissionState","setPermissionState","watchID","setWatchId","hasBeenUsed","setHasBeenUsed","startWatching","isInitiatedByUser","watchPosition","stopWatching","clearWatch","showWarningOfDeniedGeolocation","console","log","useEffect","query","then","permissionStatus","onchange","this","catch","error","isClickingAllowed","isGeolocationOn","element","ariaLabel","buttonClassName","className","aria-label","aria-pressed","onContextMenu","event","preventDefault","assert","aria-hidden","_extends","Object","assign","i","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgTunnel","_ref","svgRef","titleId","props","xmlns","y","x","ref","ForwardRef","TunnelsControl","enabled","setEnabled","buttonColor","marginBottom","localesAvailable","split","entry","LocaleSelect","onLocaleSelected","NativeSelect","inputProps","onChange","selectedLocale","value","paddingTop","HelpControl","initiallyOpen","setWelcomeSeenFlag","lineHeight","fontSize","color","DialogContent","float","NAMESPACE_REGEX","triplesToTags","subject","defined","freeform","entries","property","object","startsWith","replace","toLowerCase","tag","splitIndex","substring","extractGeometry","path","obstacles","waysSeen","obstacleWays","Map","imaginaryWays","legs","getSteps","step","startLocation","stopLocation","node","wayId","through","wayContext","context","definedTags","freeformTags","maxheight","longitude","latitude","find","set","Array","from","values","geometryToGeoJSON","origin","targets","routeGeometries","originColor","targetColor","tunnel","obstacle","calculatePlan","queries","callback","Planner","profile","planner","setProfileID","process","to","take","on","completePath","geoJSON","OVERPASS_INTERPRETER","REACT_APP_OVERPASS_INTERPRETER","queryEntrances","URL","searchParams","append","toString","body","elements","buildMatchingStreetQuery","streetEscaped","queryMatchingStreet","way","buildQueryNodesById","ids","join","queryNodesById","validIds","buildQueryElementCentersById","queryElementCentersById","queryTunnels","bbox","geojson","osmtogeojson","feature","getMapSize","mapboxgl","getContainer","clientWidth","clientHeight","processBuildingEntrances","buildingEntrances","some","includes","processWay","nodes","isInnerRole","relation","nodeIds","isWayClockwise","wayEntrances","nodeId","turfBooleanClockwise","turfLineString","xy","xyPrev","xyNext","bearingPrev","turfBearing","bearingNext","entranceAngle","Math","abs","min","adaptedAngle","entranceLabel","houseLabel","label","entranceNodeToLabel","cos","PI","sin","house","unit","ways","relations","lngLat","relationEntrances","member","role","processRelations","processWays","TILE_SIZE","DIAMETER","WEBMERCATOR_R","getVisibleTiles","center","zoom","centerm","lonlat","sinlat","mercatorProject","centerpx","pow","floor","ceil","tiles","px","py","epsg3879","proj4","toEpsg3879","forward","fromEpsg3879","inverse","BLACKLIST","filterBlacklistedParking","messages","fi","underground","translate","message","deliveryLabel","deliveriesType","entranceKeywords","keywords","layer","door","EntranceCard","onEntranceSelected","onUnloadingPlaceSelected","onViewDetails","collapsed","setCollapsed","Card","variant","square","borderLeft","borderRight","borderBottom","CardHeader","avatar","Avatar","marginRight","background","textShadow","font","subheader","titleTypographyProps","fontWeight","subheaderTypographyProps","CardContent","minHeight","Typography","component","CardActions","Button","backgroundColor","SvgHeightLimitSign","transform","opacity","fillOpacity","fillRule","strokeLinecap","strokeLinejoin","strokeMiterlimit","strokeDasharray","strokeDashoffset","strokeOpacity","getHeightRestriction","translatedText","record","fieldName","textDecoration","VenueDialog","venue","venueOlmapData","restrictions","onCollapsingToggled","onRestrictionSelected","restrictionFeatureMap","restriction","restrictionFeatures","Drawer","anchor","elevation","left","max_vehicle_height","verticalAlign","alignItems","justifyContent","paddingBottom","clear","maxRoutingDistance","latLngToElement","latLng","elementToLatLng","geoJsonToElement","reverse","parseInt","emptyFeatureCollection","initialState","route","highlights","viewport","bearing","pitch","isOriginExplicit","isGeolocating","geolocationPosition","popupCoordinates","routableTiles","venueDialogOpen","venueDialogCollapsed","venueFeatures","showTunnels","metropolitanAreaCenter","transformRequest","originalURL","distance","turfDistance","units","parseLatLng","text","isNaN","fitBounds","viewportOptions","latLngs","occludedBottomProportion","WebMercatorViewport","inputs","minLng","maxLng","max","minLat","maxLat","markerSize","occludedTop","occludedBottom","circleRadius","result","bottom","maxZoom","App","useRef","geocoder","current","getMap","iconId","renderSVG","shape","svgData","imageId","ratio","devicePixelRatio","canvas","document","createElement","ctx","getContext","img","Image","svgDataUrl","encodeURIComponent","onload","Error","drawImage","addImage","getImageData","pixelRatio","addImageSVG","urlMatch","useRouteMatch","urlMatchSearch","urlMatchOsm","urlMatchOlmap","setState","welcomeSeenFlag","fitMap","mapWidth","mapHeight","zoomMultiplier","tilesetZoomLevel","visibleTiles","prevState","routableTilesToGeoJSON","newRoutableTiles","fetchGeoJSON","layername","ibbox","method","URLSearchParams","request","resolution","params","where","gproj","aproj","maxfeatures","skipfeatures","capfeatures","outputType","srs","bounds","getBounds","getWest","getSouth","getEast","getNorth","southWest","northEast","layernames","Promise","layers","filteredFeatures","projectedFeatures","ring","parkingData","tunnelData","viewportMaskFeature","turfBboxPolygon","destination","history","useHistory","snackbarFunctions","useSnackbar","enqueueSnackbar","closeSnackbar","location","pathname","openHelp","newLocation","exec","search","utmSource","newSearch","utm_source","entranceIds","osmEntrancesInOrder","osmEntrance","snackbar","venueUnloadingPlaces","aWorkplaceEntrance","preferredUnloadingPlace","venueUnloadingPlace","streetName","streetGeometry","point","turfNearestPointOnLine","persist","anchorOrigin","vertical","horizontal","action","venueOrigin","targetEntrance","access_point","extendedGeojson","tunnels","destinationLatLng","routingMarkers","entranceMarkers","venueMarker","unloadingPlaces","unloadingPlaceMarkers","accessPointMarkers","handleMapClick","queryRenderedFeatures","candidate","noHighlights","clickCoordinates","lng","editingNote","barrier","highway","toArray","sourceLayer","toJSON","getOlmapId","setEditingNote","selectLocale","useCallback","selectSuggestion","suggestion","setTimeout","blur","source_id","pointsToFit","update","autocomplete","focus","alert","address","workplaceResponse","sources","highlightFirstSuggestion","placeholder","onSuggestionSelected","mapStyle","dragRotate","onViewportChange","onHover","mapboxOverlaysElement","querySelector","onContextmenu","isFirstPosition","coords","updateBase","tile","before","draggable","onDragEnd","closeButton","closeOnClick","gridTemplateColumns","getOlmapUrl","marginTop","k","v","olmapNote","entranceId","entranceFeatures","endsWith","originIsExplicit"],"mappings":"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","file":"static/js/App.2ce875e0.chunk.js","sourcesContent":["import type { LayerProps } from \"react-map-gl\"; // eslint-disable-line import/no-extraneous-dependencies\nimport type { Expression } from \"mapbox-gl\";\nimport {\n  literal,\n  has,\n  get,\n  getVar,\n  toBoolean,\n  not,\n  length,\n  gt,\n  any,\n  all,\n  concat,\n  coalesce,\n  format,\n  cond,\n} from \"./mapbox-style-typescript\";\n\nconst anglesToAnchors = (): Array<string | number> => {\n  const offset = 0;\n  const angles = [22.5, 67.5, 112.5, 157.5, 202.5, 247.7, 292.5, 337.5];\n\n  const anchors = [\n    \"top\",\n    \"top-right\",\n    \"right\",\n    \"bottom-right\",\n    \"bottom\",\n    \"bottom-left\",\n    \"left\",\n    \"top-left\",\n  ];\n\n  const initialStep: Array<string | number> = [anchors[offset]];\n  const ret = initialStep.concat(\n    angles.flatMap((angle, index) => {\n      return [angle, anchors[(offset + index + 1) % anchors.length]] as Array<\n        string | number\n      >;\n    })\n  );\n\n  return ret;\n};\n\nconst venueSymbolLayer: LayerProps = {\n  id: \"venue-symbol\",\n  type: \"symbol\",\n  paint: {\n    \"text-halo-color\": \"#fff\",\n    \"text-color\": \"#af8dbc\",\n    \"text-halo-width\": 2,\n  },\n  layout: {\n    \"text-field\": [\"get\", \"@venue-label\"],\n    \"text-anchor\": \"center\",\n    \"text-font\": [\"Klokantech Noto Sans Regular\"],\n    \"text-size\": 20,\n    \"text-offset\": [0, -1.55],\n    \"text-allow-overlap\": true,\n    \"text-ignore-placement\": true,\n    \"icon-image\": \"icon-svg-pin-48-#af8dbc-#fff\",\n    \"icon-anchor\": \"bottom\",\n    \"icon-allow-overlap\": true,\n    \"icon-ignore-placement\": true,\n  },\n};\n\nexport const venueLayers = [venueSymbolLayer];\n\nconst routeLineLayer: LayerProps = {\n  id: \"route-line\",\n  type: \"line\",\n  layout: {\n    \"line-cap\": \"round\",\n    \"line-join\": \"round\",\n  },\n  paint: {\n    \"line-opacity\": [\"coalesce\", [\"get\", \"@opacity\"], 0.8],\n    \"line-width\": 2,\n    \"line-color\": [\"get\", \"@color\"],\n  },\n  filter: [\"!\", [\"coalesce\", [\"get\", \"@imaginary\"], [\"get\", \"@tunnel\"], false]],\n};\n\nconst routeTunnelLineLayer: LayerProps = {\n  id: \"route-tunnel-line\",\n  beforeId: \"tunnel-line\",\n  type: \"line\",\n  layout: {\n    \"line-cap\": \"butt\",\n    \"line-join\": \"round\",\n  },\n  paint: {\n    \"line-opacity\": [\"coalesce\", [\"get\", \"@opacity\"], 0.8],\n    \"line-width\": 1,\n    \"line-gap-width\": 6,\n    \"line-dasharray\": [10, 3],\n    \"line-color\": [\"get\", \"@color\"],\n  },\n  filter: [\"coalesce\", [\"get\", \"@tunnel\"]],\n};\n\nconst routeLineInteractiveLayer: LayerProps = {\n  id: \"route-line-interactive\",\n  type: \"line\",\n  paint: {\n    \"line-width\": 16,\n    \"line-opacity\": 0,\n  },\n  filter: [\"coalesce\", [\"get\", \"@interactive\"]],\n};\n\nexport const routeImaginaryLineLayer: LayerProps = {\n  id: \"route-imaginary-line\",\n  type: \"line\",\n  layout: {\n    \"line-cap\": \"round\",\n    \"line-join\": \"round\",\n  },\n  paint: {\n    \"line-opacity\": [\"coalesce\", [\"get\", \"@opacity\"], 0.5],\n    \"line-width\": 5,\n    \"line-color\": [\"get\", \"@color\"],\n    \"line-dasharray\": [0, 2],\n  },\n  filter: [\"coalesce\", [\"get\", \"@imaginary\"], false],\n};\n\nexport const routePointLayer: LayerProps = {\n  id: \"route-point\",\n  type: \"circle\",\n  paint: {\n    \"circle-opacity\": [\"coalesce\", [\"get\", \"@opacity\"], 1],\n    \"circle-radius\": 5,\n    \"circle-color\": [\"get\", \"@color\"],\n  },\n  filter: [\"==\", \"Point\", [\"geometry-type\"]],\n};\n\nexport const routePointInteractiveLayer: LayerProps = {\n  id: \"route-point-interactive\",\n  type: \"circle\",\n  paint: {\n    \"circle-opacity\": 0,\n    \"circle-radius\": 15,\n  },\n  filter: [\"==\", \"Point\", [\"geometry-type\"]],\n};\n\nexport const routePointSymbolLayer: LayerProps = {\n  id: \"route-point-symbol\",\n  type: \"symbol\",\n  paint: {\n    \"text-color\": \"#000\",\n    \"text-halo-color\": \"#fff\",\n    \"text-halo-width\": 3,\n  },\n  layout: {\n    \"text-field\": [\"get\", \"@label\"],\n    \"text-anchor\": \"center\",\n    \"text-font\": [\"Klokantech Noto Sans Regular\"],\n    \"text-size\": 24,\n    \"text-offset\": [0, -0.05],\n  },\n  filter: [\"==\", \"Point\", [\"geometry-type\"]],\n};\n\nexport const routeLayers: Array<LayerProps> = [\n  routeLineLayer,\n  routeLineInteractiveLayer,\n  routeTunnelLineLayer,\n  routeImaginaryLineLayer,\n  routePointLayer,\n  routePointSymbolLayer,\n  routePointInteractiveLayer,\n];\n\nexport const buildingHighlightLayer: LayerProps = {\n  id: \"building-highlight\",\n  type: \"fill\",\n  paint: {\n    \"fill-opacity\": 0.3,\n    \"fill-color\": \"#99ff99\",\n  },\n};\n\nconst parkingAreas: LayerProps = {\n  id: \"parking-area\",\n  type: \"fill\",\n  minzoom: 12,\n  paint: {\n    \"fill-opacity\": 0.5,\n    \"fill-color\": \"#00afff\",\n  },\n};\n\nexport const parkingPoints: LayerProps = {\n  id: \"parking-point\",\n  type: \"circle\",\n  minzoom: 12,\n  paint: {\n    \"circle-radius\": [\n      \"interpolate\",\n      [\"linear\"],\n      [\"zoom\"],\n      12, // At zoom 12 or less,\n      1, // circle radius is 1.\n      14, // At zoom 14,\n      2, // circle radius is 2.\n      15, // At zoom 15 or more,\n      5, // circle radius is 5.\n    ],\n    \"circle-opacity\": 0.8,\n    \"circle-color\": \"#00afff\",\n  },\n  filter: [\"==\", \"Point\", [\"geometry-type\"]],\n};\n\nexport const parkingLayers: Array<LayerProps> = [parkingAreas, parkingPoints];\n\nconst tunnelLines: LayerProps = {\n  id: \"tunnel-line\",\n  type: \"line\",\n  minzoom: 12,\n  layout: {\n    \"line-cap\": \"round\",\n    \"line-join\": \"round\",\n  },\n  paint: {\n    \"line-opacity\": 0.8,\n    \"line-width\": 3,\n    \"line-color\": [\n      \"step\",\n      [\"to-number\", [\"get\", \"layer\"]],\n      \"#000000\",\n      -4,\n      \"#770000\",\n      -3,\n      \"#ff0000\",\n      -2,\n      \"#ff7700\",\n      -1,\n      \"#ffff00\",\n    ],\n  },\n};\n\nconst tunnelPoints: LayerProps = {\n  id: \"tunnel-point\",\n  type: \"circle\",\n  minzoom: 12,\n  paint: {\n    \"circle-radius\": [\n      \"interpolate\",\n      [\"linear\"],\n      [\"zoom\"],\n      12, // At zoom 12 or less,\n      1, // circle radius is 1.\n      14, // At zoom 14,\n      2, // circle radius is 2.\n      15, // At zoom 15 or more,\n      5, // circle radius is 5.\n    ],\n    \"circle-opacity\": 0.8,\n    \"circle-color\": \"#000000\",\n  },\n  filter: [\"==\", \"Point\", [\"geometry-type\"]],\n};\n\nconst tunnelPointSymbols: LayerProps = {\n  id: \"tunnel-point-symbol\",\n  type: \"symbol\",\n  minzoom: 12,\n  paint: {\n    \"text-color\": \"#000\",\n    \"text-halo-color\": \"#fff\",\n    \"text-halo-width\": 1,\n  },\n  layout: {\n    \"text-field\": coalesce(get(\"name\"), get(\"ref\"), get(\"description\"), \"\"),\n    \"text-anchor\": \"right\",\n    \"text-font\": [\"Klokantech Noto Sans Regular\"],\n    \"text-size\": 12,\n    \"text-offset\": [-0.5, 0],\n  },\n  filter: [\"==\", \"Point\", [\"geometry-type\"]],\n};\n\nexport const tunnelLayers: Array<LayerProps> = [\n  tunnelPoints,\n  tunnelLines,\n  tunnelPointSymbols,\n];\n\nexport const tunnelMaskLayers: Array<LayerProps> = [\n  {\n    id: \"tunnel-mask\",\n    type: \"fill\",\n    paint: {\n      \"fill-opacity\": 0.4,\n      \"fill-color\": \"#ffffff\",\n    },\n  },\n];\n\nconst entrancePoints: LayerProps = {\n  id: \"entrance-point\",\n  type: \"circle\",\n  minzoom: 12,\n  maxzoom: 16,\n  paint: {\n    \"circle-radius\": [\n      \"interpolate\",\n      [\"linear\"],\n      [\"zoom\"],\n      12, // At zoom 12 or less,\n      1, // circle radius is 1.\n      14, // At zoom 14,\n      2, // circle radius is 2.\n      15, // At zoom 15 or more,\n      3, // circle radius is 3.\n    ],\n    \"circle-color\": \"#64be14\",\n  },\n};\n\nconst lowZoomLabel = (maybeSpace: Expression): Expression =>\n  format(\n    [\n      cond(\n        [not(toBoolean(get(\"@house-label\"))), \"\"], // No housenumber\n        [\n          any(\n            coalesce(get(\"@secondary\"), false),\n            gt(length(get(\"@house-label\")), 3)\n          ),\n          \"·\",\n        ], // Hide housenumber.\n        [get(\"@house-label\")] // Full housenumber\n      ),\n      {},\n    ],\n    [maybeSpace, {}],\n    // Last, the entrance letter, in bold font\n    [\n      cond(\n        [not(toBoolean(get(\"@entrance-label\"))), \"\"], // No housenumber\n        [all(coalesce(get(\"@secondary\"), false)), \"·\"], // Hide letter.\n        [get(\"@entrance-label\")] // Full entrance letter\n      ),\n      {\n        \"text-font\": [\"literal\", [\"Klokantech Noto Sans Bold\"]],\n      },\n    ]\n  );\n\nconst hasNoLabel = (labelName: string): Expression =>\n  not(toBoolean(get(labelName)));\n\nconst midZoomLabel = (maybeSpace: Expression): Expression =>\n  format(\n    [\n      cond(\n        [hasNoLabel(\"@house-label\"), \"\"], // No housenumber\n        [\n          any(\n            coalesce(get(\"@secondary\"), false),\n            gt(length(get(\"@house-label\")), 3)\n          ),\n          \"·\",\n        ], // Hide housenumber.\n        [get(\"@house-label\")] // Full housenumber\n      ),\n      {},\n    ],\n    [maybeSpace, {}],\n    // Last, the entrance letter, in bold font\n    [\n      cond(\n        [not(toBoolean(get(\"@entrance-label\"))), \"\"], // No housenumber\n        [\n          all(\n            coalesce(get(\"@secondary\"), false),\n            gt(length(get(\"@entrance-label\")), 1)\n          ),\n          \"·\",\n        ], // Hide letter.\n        [get(\"@entrance-label\")] // Full entrance letter\n      ),\n      {\n        \"text-font\": [\"literal\", [\"Klokantech Noto Sans Bold\"]],\n      },\n    ]\n  );\n\n// always show the housenumber followed by the bolded entrance letter\nconst highZoomLabel = (houseLabelMaybeSpace: Expression): Expression =>\n  format(\n    // First, the housenumber, without special formatting\n    [houseLabelMaybeSpace, {}],\n    // Last, the entrance letter, in bold font\n    [\n      get(\"@entrance-label\"),\n      {\n        \"text-font\": [\"literal\", [\"Klokantech Noto Sans Bold\"]],\n      },\n    ]\n  );\n\nconst zoomDependentEntranceLabel: Expression = [\n  \"let\",\n  \"maybe_space\",\n  cond(\n    // If we have both labels, then separate by a thin space.\n    [all(has(\"@house-label\"), has(\"@entrance-label\")), \"\\u2009\"],\n    [\"\"] // Otherwise, no separator.\n  ),\n  \"house_label_maybe_space\",\n  concat(\n    get(\"@house-label\"),\n    cond(\n      // If we have both labels, then separate by a thin space.\n      [all(has(\"@house-label\"), has(\"@entrance-label\")), \"\\u2009\"],\n      [\"\"] // Otherwise, no separator.\n    )\n  ),\n  [\n    \"step\",\n    [\"zoom\"],\n    lowZoomLabel(getVar(\"maybe_space\")),\n    17, // At zoom 17 or more,\n    midZoomLabel(getVar(\"maybe_space\")),\n    18, // At zoom 18 or more,\n    highZoomLabel(getVar(\"house_label_maybe_space\")),\n  ],\n];\n\nconst caseEntranceLabel = ({\n  missing,\n  visible,\n  hidden,\n}: {\n  missing: Expression;\n  visible: Expression;\n  hidden: Expression;\n}): Expression => [\n  \"step\",\n  [\"zoom\"],\n  // lowZoomLabel\n  cond(\n    [\n      not(\n        any(toBoolean(get(\"@house-label\")), toBoolean(get(\"@entrance-label\")))\n      ),\n      missing,\n    ],\n    [\n      all(\n        not(\n          // housenumber visible\n          all(\n            toBoolean(get(\"@house-label\")),\n            not(toBoolean(get(\"@secondary\"))),\n            not(gt(length(get(\"@house-label\")), 3))\n          )\n        ),\n        not(\n          // entrance label visible\n          all(\n            toBoolean(get(\"@entrance-label\")),\n            not(toBoolean(get(\"@secondary\")))\n          )\n        )\n      ),\n      hidden,\n    ],\n    [visible]\n  ),\n  17, // At zoom 17 or more,\n  // midZoomLabel\n  cond(\n    [\n      not(\n        any(toBoolean(get(\"@house-label\")), toBoolean(get(\"@entrance-label\")))\n      ),\n      missing,\n    ],\n    [\n      all(\n        not(\n          // housenumber visible\n          all(\n            toBoolean(get(\"@house-label\")),\n            not(toBoolean(get(\"@secondary\"))),\n            not(gt(length(get(\"@house-label\")), 3))\n          )\n        ),\n        not(\n          // entrance label visible\n          all(\n            toBoolean(get(\"@entrance-label\")),\n            any(\n              not(toBoolean(get(\"@secondary\"))),\n              not(gt(length(get(\"@entrance-label\")), 1))\n            )\n          )\n        )\n      ),\n      hidden,\n    ],\n    [visible]\n  ),\n  18, // At zoom 18 or more,\n  // highZoomLabel\n  cond(\n    [\n      not(\n        any(toBoolean(get(\"@house-label\")), toBoolean(get(\"@entrance-label\")))\n      ),\n      missing,\n    ],\n    [visible]\n  ),\n];\n\nconst ifEntranceLabelHiddenElse = (\n  hidden: Expression,\n  notHidden: Expression\n): Expression =>\n  caseEntranceLabel({\n    missing: notHidden,\n    visible: notHidden,\n    hidden,\n  });\n\nconst ifEntranceLabelVisibleElse = (\n  visible: Expression,\n  invisible: Expression\n): Expression =>\n  caseEntranceLabel({\n    missing: invisible,\n    visible,\n    hidden: invisible,\n  });\n\nconst entranceSymbols: LayerProps = {\n  id: \"entrance-symbol\",\n  type: \"symbol\",\n  minzoom: 16,\n  paint: {\n    \"text-halo-color\": \"#fff\",\n    \"text-color\": \"#64be14\",\n    \"text-halo-width\": 1,\n    \"icon-opacity\": ifEntranceLabelVisibleElse(literal(1), literal(0.5)),\n    \"text-opacity\": ifEntranceLabelVisibleElse(literal(1), literal(0)),\n  },\n  layout: {\n    \"text-field\": zoomDependentEntranceLabel,\n    \"text-font\": [\"Klokantech Noto Sans Regular\"],\n    \"text-size\": 16,\n    \"text-offset\": [\"get\", \"@offset\"],\n    \"text-anchor\": [\"step\", [\"%\", [\"get\", \"@rotate\"], 360]].concat(\n      anglesToAnchors()\n    ) as Expression,\n    \"text-rotation-alignment\": \"map\",\n    \"text-allow-overlap\": true,\n    \"text-ignore-placement\": true,\n    \"icon-image\": ifEntranceLabelHiddenElse(\n      literal(\"icon-svg-triangleDot-28-#64be14-#fff\"),\n      literal(\"icon-svg-triangle-28-#64be14-#fff\")\n    ),\n    \"icon-anchor\": \"center\",\n    \"icon-rotate\": [\"get\", \"@rotate\"],\n    \"icon-rotation-alignment\": \"map\",\n    \"icon-allow-overlap\": true,\n    \"icon-ignore-placement\": true,\n  },\n};\n\nexport const allEntrancesLayers: Array<LayerProps> = [\n  entrancePoints, // smaller zoom levels\n  entranceSymbols, // larger zoom levels\n];\n","import useLocalStorageState from \"use-local-storage-state\";\nimport type { LocalStorageState } from \"use-local-storage-state\";\n\ninterface WelcomeSeenFlag {\n  welcomeSeen: boolean;\n}\n\nconst useWelcomeSeenFlag = (): LocalStorageState<WelcomeSeenFlag> => {\n  return useLocalStorageState<WelcomeSeenFlag>(\"welcomeSeenFlag\", {\n    defaultValue: { welcomeSeen: false },\n  });\n};\n\nexport default useWelcomeSeenFlag;\n","import type { Expression } from \"mapbox-gl\";\n\nexport const literal = <T>(val: T): Expression => [\"literal\", val];\nexport const has = (key: string): Expression => [\"has\", key];\nexport const get = (key: string): Expression => [\"get\", key];\nexport const getVar = (key: string): Expression => [\"var\", key];\nexport const toBoolean = (expression: Expression): Expression => [\n  \"to-boolean\",\n  expression,\n];\nexport const not = (expression: Expression): Expression => [\"!\", expression];\nexport const length = (expression: Expression): Expression => [\n  \"length\",\n  expression,\n];\nexport const gt = (\n  expression1: Expression,\n  expression2: Expression | number\n): Expression => [\">\", expression1, expression2];\nexport const any = (...expressions: Array<Expression>): Expression => [\n  \"any\",\n  ...expressions,\n];\nexport const all = (...expressions: Array<Expression>): Expression => [\n  \"all\",\n  ...expressions,\n];\nexport const concat = (...expressions: Array<Expression>): Expression => [\n  \"concat\",\n  ...expressions,\n];\nexport const coalesce = <T>(\n  ...expressions: Array<Expression | T>\n): Expression => [\"coalesce\", ...expressions];\nexport const format = (\n  ...parts: Array<[Expression | string, Record<string, unknown>]>\n): Expression => [\n  \"format\",\n  ...parts.flatMap(([...textAndStyle]) => textAndStyle),\n];\n// Scheme-style conditional: cond([condition, value]..., [defaultValue])\nexport const cond = <T>(\n  ...cases: Array<[Expression, Expression | T] | [Expression | T]>\n): Expression => {\n  return [\"case\", ...cases.flatMap(([...testAndBody]) => testAndBody)];\n};\n","import React from \"react\";\n\nexport interface PinProps {\n  height?: string;\n  style?: React.CSSProperties;\n  dataTestId?: string;\n}\n\nconst SVG_VIEWBOX = \"-1 -1 17 17\";\nconst SVG_PATH =\n  \"M7.5 0C5.068 0 2.23 1.486 2.23 5.27c0 2.568 4.054 8.244 5.27 9.73c1.081-1.486 5.27-7.027 5.27-9.73C12.77 1.487 9.932 0 7.5 0z\";\n\nexport const pinAsSVG = (size: number, style: string): string => `\n<svg xmlns=\"http://www.w3.org/2000/svg\"\n  width=\"${size}px\"\n  height=\"${size}px\"\n  style=\"${style}\"\n  viewBox=\"${SVG_VIEWBOX}\"\n>\n  <path d=\"${SVG_PATH}\" />\n</svg>`;\n\nconst Pin: React.FC<PinProps> = ({\n  height = \"50\",\n  style = { fill: \"#444\", stroke: \"none\" },\n  dataTestId,\n}) => {\n  return (\n    <svg\n      data-testid={dataTestId}\n      height={height}\n      style={style}\n      viewBox={SVG_VIEWBOX}\n      pointerEvents=\"none\"\n    >\n      <path\n        fill={`url(#gradient-${style.fill})`}\n        d={SVG_PATH}\n        pointerEvents=\"visiblepainted\"\n        cursor=\"pointer\"\n      />\n      <defs>\n        <linearGradient\n          id={`gradient-${style.fill}`}\n          gradientTransform=\"rotate(90)\"\n        >\n          <stop offset=\"00%\" stopColor=\"#FFFFFF\" stopOpacity=\"0\" />\n          <stop offset=\"100%\" stopColor={style.fill} stopOpacity=\"1\" />\n        </linearGradient>\n      </defs>\n    </svg>\n  );\n};\n\nexport default Pin;\n","const SVG_VIEWBOX = \"-5 -1 25 50\";\nconst TRIANGLE_PATH = \"M 8 16 L 0 8 L 16 8 Z\";\nconst dotPath = (radius: number) => `\nM ${8 - radius} ${32 + radius}\na ${radius} ${radius}, 0, 0, 0, ${2 * radius} 0\na ${radius} ${radius}, 0, 0, 0, ${-2 * radius} 0\n`;\n\n// eslint-disable-next-line import/prefer-default-export\nexport const triangleDotAsSVG = (\n  size: number,\n  style: string,\n  dotSize = 3,\n  dotStyle = \"stroke-width: 1\"\n): string => `\n<svg xmlns=\"http://www.w3.org/2000/svg\"\n  width=\"${size}px\"\n  height=\"${size}px\"\n  style=\"${style}\"\n  viewBox=\"${SVG_VIEWBOX}\"\n>\n  <path d=\"${TRIANGLE_PATH}\" />\n  <path style=\"${dotStyle}\" d=\"${(dotSize && dotPath(dotSize)) || \"\"}\" />\n</svg>`;\n\nexport const triangleAsSVG = (size: number, style: string): string =>\n  triangleDotAsSVG(size, style, 0);\n","import type {\n  Feature,\n  FeatureCollection,\n  Geometry,\n  GeoJsonProperties,\n} from \"geojson\";\n\nimport { romanize } from \"romans\";\n\nimport type { ElementWithCoordinates } from \"./overpass\";\n\nexport type NetworkLoadingState = {\n  state: \"loading\";\n};\n\nexport type NetworkFailedState = {\n  state: \"failed\";\n  code: number;\n  detail: string;\n};\n\nexport type NetworkSuccessState<T> = {\n  state: \"success\";\n  response: T;\n};\n\nexport type NetworkState<T> =\n  | NetworkLoadingState\n  | NetworkFailedState\n  | NetworkSuccessState<T>;\n\nexport interface OlmapResponse {\n  id: number;\n  image_notes: Array<OlmapNote>;\n  workplace: OlmapWorkplace | null;\n}\n\nexport interface OlmapNote {\n  id: number;\n  image: string;\n  tags: Array<string>;\n  lat: string;\n  lon: string;\n}\n\nexport interface OlmapWorkplace {\n  id: number;\n  as_osm_tags: Record<string, string>;\n  osm_feature: number | null;\n  type?: number;\n  delivery_hours?: string;\n  delivery_instructions?: string;\n  delivery_instructions_language?: string;\n  delivery_instructions_translated?: string;\n  workplace_entrances: Array<OlmapWorkplaceEntrance>;\n  image_note: OlmapNote;\n  max_vehicle_height?: string;\n}\n\nexport interface OlmapWorkplaceEntrance {\n  id: number;\n  description: string;\n  description_language?: string;\n  description_translated?: string;\n  deliveries: \"main\" | \"yes\" | \"no\" | \"\" | null;\n  delivery_types: Array<string>;\n  image_note: OlmapNote;\n  entrance_data: OlmapEntranceData;\n  delivery_hours?: string;\n  delivery_instructions?: string;\n  delivery_instructions_language?: string;\n  delivery_instructions_translated?: string;\n  workplace: number;\n  entrance: number;\n  unloading_places: Array<OlmapUnloadingPlace>;\n}\n\nexport interface OlmapEntranceData {\n  osm_feature: number | null;\n  as_osm_tags: Record<string, string>;\n}\n\nexport interface OlmapUnloadingPlace {\n  id: number;\n  as_osm_tags: Record<string, string>;\n  osm_feature: number | null;\n  image_note: OlmapNote;\n  description?: string;\n  description_language?: string;\n  description_translated?: string;\n  opening_hours?: string;\n  entrances: Array<number>;\n  access_points: Array<{ lat: number; lon: number }>;\n}\n\n// Raw serialisations as returned by /rest/workplaces/\n\nexport interface OlmapWorkplaceRaw {\n  id: number;\n  name: string;\n  street: string;\n  housenumber: string;\n  unit: string;\n  lat: number;\n  lon: number;\n  osm_feature: number | null;\n  delivery_instructions: string;\n  workplace_entrances: Array<OlmapWorkplaceEntranceRaw>;\n  image_note_id: number;\n  image: string;\n  max_vehicle_height: string;\n}\n\nexport interface OlmapWorkplaceEntranceRaw {\n  id: number;\n  description: string;\n  deliveries: \"main\" | \"yes\" | \"no\" | \"\" | null;\n  image_note_id: number;\n  image: string;\n  lat: number;\n  lon: number;\n  osm_feature: number;\n  entrance_id: number;\n  unloading_places: Array<OlmapUnloadingPlaceRaw>;\n}\n\nexport interface OlmapUnloadingPlaceRaw {\n  id: number;\n  lat: number;\n  lon: number;\n  osm_feature: number | null;\n  image_note_id: number;\n  image: string;\n  description: string;\n  opening_hours: string;\n  entrances: Array<number>;\n  access_points: Array<{ lat: number; lon: number }>;\n}\n\nexport const olmapNoteURL = (noteId: number): string =>\n  `https://app.olmap.org/#/note/${noteId}`;\n\nexport const olmapNewNoteURL = (target: ElementWithCoordinates): string => {\n  if (target.id === -1) {\n    return `https://app.olmap.org/#/Notes/new/photo/@${target.lat},${target.lon}`;\n  }\n  return `https://app.olmap.org/#/Notes/new/${target.id}/photo/@${target.lat},${target.lon}`;\n};\n\nexport const olmapNoteToElement = (\n  note: OlmapNote\n): ElementWithCoordinates => ({\n  lat: Number(note.lat),\n  lon: Number(note.lon),\n  id: note.id,\n  type: \"olmap\",\n});\n\nconst deliveryTypePriorities = {\n  main: 2,\n  yes: 1,\n  null: 0,\n  \"\": 0,\n  no: -1,\n};\n\nconst processOlmapData = (data: OlmapResponse): OlmapResponse => {\n  if (data.workplace) {\n    data.workplace.workplace_entrances.sort(\n      (a, b) =>\n        deliveryTypePriorities[b.deliveries || \"null\"] -\n        deliveryTypePriorities[a.deliveries || \"null\"]\n    );\n  }\n  return data;\n};\n\nexport const fetchOlmapUrl = async (\n  url: string\n): Promise<NetworkState<unknown> | undefined> => {\n  try {\n    const response = await fetch(url);\n    try {\n      const data = await response.json();\n      if (!response.ok) {\n        return {\n          state: \"failed\",\n          code: response.status,\n          detail: data.detail,\n        };\n      }\n      return {\n        state: \"success\",\n        response: data,\n      };\n    } catch (error) {\n      return {\n        state: \"failed\",\n        code: response.status,\n        detail: error,\n      };\n    }\n  } catch (error) {\n    return {\n      state: \"failed\",\n      code: 0,\n      detail: error,\n    };\n  }\n};\n\nexport const fetchOlmapWorkplace = async (\n  olmapId: number,\n  locale: string\n): Promise<NetworkState<OlmapWorkplaceRaw> | undefined> => {\n  if (olmapId === -1) {\n    return undefined;\n  }\n  const response = await fetchOlmapUrl(\n    `https://api.olmap.org/rest/workplaces/${olmapId}/?language=${locale}`\n  );\n  return response as NetworkState<OlmapWorkplaceRaw>;\n};\n\nexport const fetchOlmapData = async (\n  type: string,\n  id: number,\n  locale: string\n): Promise<NetworkState<OlmapResponse> | undefined> => {\n  if (id === -1) {\n    return undefined;\n  }\n  if (type === \"workplace\") {\n    const rawResponse = await fetchOlmapWorkplace(id, locale);\n    if (rawResponse?.state === \"success\") {\n      // Convert from OlmapWorkplaceRaw to OlmapResponse\n      const workplace = rawResponse.response;\n      const response: NetworkState<OlmapResponse> = {\n        state: \"success\",\n        response: {\n          id,\n          workplace: {\n            id: workplace.id,\n            image_note: {\n              id: workplace.image_note_id,\n              image: workplace.image,\n              tags: [],\n              lat: `${workplace.lat}`,\n              lon: `${workplace.lon}`,\n            },\n            osm_feature: workplace.osm_feature,\n            as_osm_tags: {\n              name: workplace.name,\n              \"addr:street\": workplace.street,\n            },\n            type: undefined,\n            delivery_instructions: workplace.delivery_instructions,\n            workplace_entrances: workplace.workplace_entrances.map(\n              (entrance) => ({\n                id: entrance.id,\n                image_note: {\n                  id: entrance.image_note_id,\n                  image: entrance.image,\n                  tags: [],\n                  lat: `${entrance.lat}`,\n                  lon: `${entrance.lon}`,\n                },\n                entrance_data: {\n                  osm_feature: entrance.osm_feature,\n                  as_osm_tags: {\n                    entrance: \"yes\",\n                  },\n                },\n                deliveries: entrance.deliveries,\n                delivery_types: [],\n                description: entrance.description,\n                description_language: undefined,\n                description_translated: undefined,\n                delivery_hours: undefined,\n                delivery_instructions: undefined,\n                delivery_instructions_language: undefined,\n                delivery_instructions_translated: undefined,\n                workplace: workplace.id,\n                entrance: entrance.entrance_id,\n                unloading_places: entrance.unloading_places.map(\n                  (unloading_place) => ({\n                    id: unloading_place.id,\n                    image_note: {\n                      id: unloading_place.image_note_id,\n                      image: unloading_place.image,\n                      tags: [],\n                      lat: `${unloading_place.lat}`,\n                      lon: `${unloading_place.lon}`,\n                    },\n                    as_osm_tags: {},\n                    osm_feature: unloading_place.osm_feature,\n                    opening_hours: unloading_place.opening_hours,\n                    description: unloading_place.description,\n                    description_language: undefined,\n                    description_translated: undefined,\n                    entrances: unloading_place.entrances,\n                    access_points: unloading_place.access_points,\n                  })\n                ),\n              })\n            ),\n          },\n          image_notes: [],\n        },\n      };\n      response.response = processOlmapData(response.response);\n      return response;\n    }\n    return rawResponse as NetworkState<OlmapResponse>;\n  }\n  const response = (await fetchOlmapUrl(\n    `https://api.olmap.org/rest/osm_features/${id}/?language=${locale}`\n  )) as NetworkState<OlmapResponse>;\n  if (response.state === \"success\") {\n    response.response = processOlmapData(response.response);\n  }\n  return response;\n};\n\nexport const venueDataToGeoJSON = (\n  venueData: NetworkState<OlmapResponse>,\n  osmData: Array<ElementWithCoordinates>\n): FeatureCollection => {\n  if (venueData?.state !== \"success\" || !venueData.response.workplace) {\n    return {\n      type: \"FeatureCollection\",\n      features: [],\n    };\n  }\n  const features = [] as Array<Feature<Geometry, GeoJsonProperties>>;\n  osmData.forEach((entrance, index) => {\n    const id =\n      entrance.type === \"olmap\"\n        ? `olmap/${entrance.id}`\n        : `http://www.openstreetmap.org/${entrance.type}/${entrance.id}`;\n    features.push({\n      type: \"Feature\",\n      geometry: {\n        type: \"Point\",\n        coordinates: [entrance.lon, entrance.lat],\n      },\n      properties: {\n        \"@id\": id,\n        ...entrance.tags,\n        \"@venue-label\": romanize(index + 1),\n      },\n    });\n  });\n  return {\n    type: \"FeatureCollection\",\n    features,\n  };\n};\n\nconst venueDataToUnloadingPlaceData = (\n  venueData?: NetworkState<OlmapResponse>\n): [Array<OlmapUnloadingPlace>, Record<number, Array<number>>] => {\n  if (venueData?.state !== \"success\" || !venueData.response.workplace) {\n    return [[], {}];\n  }\n  const workplaceEntrances = venueData.response.workplace.workplace_entrances;\n  const unloadingPlaceEntrances = {} as Record<number, Array<number>>;\n  const unloadingPlaces = workplaceEntrances.flatMap((workplaceEntrance) =>\n    workplaceEntrance.unloading_places.flatMap((unloadingPlace) => {\n      const foundEntrances = unloadingPlaceEntrances[unloadingPlace.id];\n      const newEntrance =\n        workplaceEntrance.entrance_data.osm_feature ||\n        workplaceEntrance.image_note.id;\n      if (foundEntrances) {\n        if (newEntrance) foundEntrances.push(newEntrance);\n        return [];\n      }\n      if (newEntrance) {\n        unloadingPlaceEntrances[unloadingPlace.id] = [newEntrance];\n      } else {\n        unloadingPlaceEntrances[unloadingPlace.id] = [];\n      }\n      return [unloadingPlace];\n    })\n  );\n  return [unloadingPlaces, unloadingPlaceEntrances];\n};\n\nexport const venueDataToUnloadingPlaces = (\n  venueData?: NetworkState<OlmapResponse>\n): Array<OlmapUnloadingPlace> => venueDataToUnloadingPlaceData(venueData)[0];\n\nexport const venueDataToUnloadingPlaceEntrances = (\n  venueData?: NetworkState<OlmapResponse>\n): Record<number, Array<number>> => venueDataToUnloadingPlaceData(venueData)[1];\n","import React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport { olmapNoteURL } from \"../olmap\";\n\ninterface OLMapDialogProps {\n  noteId?: number;\n  onClose: () => void;\n}\n\nconst OLMapDialog: React.FC<OLMapDialogProps> = ({ noteId, onClose }) => (\n  <Dialog\n    open={!!noteId}\n    fullWidth\n    PaperProps={{ style: { height: \"100%\", overflow: \"hidden\" } }}\n  >\n    {noteId && (\n      <>\n        <DialogTitle>\n          Note on OLMap\n          <IconButton\n            style={{\n              position: \"absolute\",\n              top: \"8px\",\n              right: \"8px\",\n            }}\n            onClick={onClose}\n          >\n            <CloseIcon />\n          </IconButton>\n        </DialogTitle>\n        <div\n          style={{\n            height: \"100%\",\n            borderTop: \"1px solid rgba(0, 0, 0, 0.12)\",\n          }}\n        >\n          <iframe\n            title=\"OLMap note editor\"\n            src={olmapNoteURL(noteId)}\n            style={{\n              border: \"none\",\n              padding: 0,\n              margin: 0,\n              width: \"100%\",\n              height: \"100%\",\n            }}\n          />\n        </div>\n      </>\n    )}\n  </Dialog>\n);\nexport default OLMapDialog;\n","import React from \"react\";\n\nimport { olmapNoteURL, NetworkState, OlmapResponse } from \"../olmap\";\n\ninterface OLMapImagesProps {\n  onImageClick: (event: React.MouseEvent<HTMLElement>) => void;\n  olmapData?: NetworkState<OlmapResponse>;\n}\n\nconst OLMapImages: React.FC<OLMapImagesProps> = ({\n  onImageClick,\n  olmapData,\n}) => {\n  const content =\n    olmapData?.state === \"success\" &&\n    olmapData?.response?.image_notes\n      ?.filter((note) => note.image)\n      .slice(0, 1) // take 1\n      .map((note) => (\n        <a\n          key={note.id}\n          href={olmapNoteURL(note.id)}\n          onClick={onImageClick}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          style={{ display: \"inline-flex\" }}\n        >\n          {/* eslint-disable-next-line jsx-a11y/img-redundant-alt */}\n          <img\n            style={{ maxWidth: \"100%\", maxHeight: \"150px\" }}\n            src={note.image}\n            alt=\"A photo of the entrance\"\n          />\n        </a>\n      ));\n  return <div style={{ textAlign: \"center\" }}>{content}</div>;\n};\n\nexport default OLMapImages;\n","import React from \"react\";\n\nexport interface UserPositionProps {\n  dataTestId?: string;\n  width?: string;\n  height?: string;\n  stroke?: string;\n  strokeWidth?: string;\n}\n\nconst UserPosition: React.FC<UserPositionProps> = ({\n  dataTestId,\n  width = \"40\",\n  height = \"40\",\n  stroke = \"#00afff\",\n  strokeWidth = \"16\",\n}) => (\n  <svg\n    data-testid={dataTestId}\n    width={width}\n    height={height}\n    stroke={stroke}\n    strokeWidth={strokeWidth}\n    viewBox=\"-100 -100 200 200\"\n    fill=\"transparent\"\n    style={{ position: \"absolute\" }}\n  >\n    <circle cx=\"0\" cy=\"0\" r=\"24\" />\n    <circle cx=\"0\" cy=\"0\" r=\"46\" />\n    <circle cx=\"0\" cy=\"0\" r=\"68\" />\n  </svg>\n);\n\nexport default UserPosition;\n","import React, { useState, useEffect } from \"react\";\nimport type { MouseEventHandler } from \"react\";\n\nexport interface GeolocateControlProps {\n  dataTestId?: string;\n  onGeolocate: PositionCallback;\n  onGeolocateError?: PositionErrorCallback;\n  positionOptions?: PositionOptions;\n  onEnable?: (isInitiatedByUser: boolean) => void;\n  onDisable?: () => void;\n  enableOnMount?: boolean;\n}\n\nconst GeolocateControl: React.FC<GeolocateControlProps> = ({\n  dataTestId,\n  onGeolocate,\n  onGeolocateError,\n  positionOptions = { enableHighAccuracy: true, timeout: 6000 },\n  onEnable,\n  onDisable,\n  enableOnMount = true,\n}) => {\n  const [isGeolocationSupported] = useState(\n    window.navigator.geolocation != null\n  );\n  const [isPermissionsSupported] = useState(\n    window.navigator.permissions != null\n  );\n  const [permissionState, setPermissionState] = useState(\n    null as PermissionState | null\n  );\n  const [watchID, setWatchId] = useState(null as number | null);\n  const [hasBeenUsed, setHasBeenUsed] = useState(false);\n\n  const checkGeolocationPermission = (): void => {\n    if (isPermissionsSupported) {\n      window.navigator.permissions\n        .query({ name: \"geolocation\" })\n        .then((permissionStatus) => {\n          setPermissionState(permissionStatus.state);\n          function setPermissionStateOnChange(this: PermissionStatus): void {\n            setPermissionState(this.state);\n          }\n          // eslint-disable-next-line no-param-reassign\n          permissionStatus.onchange = setPermissionStateOnChange;\n        })\n        .catch((error) => {\n          // FIXME: Warn properly\n          // eslint-disable-next-line no-console\n          console.error(\"Permissions API exists but querying it fails:\", error);\n        });\n    }\n  };\n\n  const startWatching = (isInitiatedByUser: boolean): void => {\n    if (isGeolocationSupported && watchID == null) {\n      setWatchId(\n        window.navigator.geolocation.watchPosition(\n          onGeolocate,\n          onGeolocateError,\n          positionOptions\n        )\n      );\n      setHasBeenUsed(true);\n      if (onEnable != null) {\n        onEnable(isInitiatedByUser);\n      }\n    }\n  };\n\n  const stopWatching = (): void => {\n    if (isGeolocationSupported && watchID != null) {\n      /**\n       * Based on reading the Geolocation API spec (\n       * https://www.w3.org/TR/2016/REC-geolocation-API-20161108/#geolocation_interface\n       * ) and trying out in practice on Chromium, one can call clearWatch\n       * regardless of permissions.\n       */\n      window.navigator.geolocation.clearWatch(watchID);\n      setWatchId(null);\n      if (onDisable != null) {\n        onDisable();\n      }\n    }\n  };\n\n  const showWarningOfDeniedGeolocation = (): void => {\n    // FIXME: Inform the user that geolocation is denied.\n    // eslint-disable-next-line no-console\n    console.log(\"Geolocation is denied. Inform the user.\");\n  };\n\n  // Inform the user once if geolocation is not supported.\n  useEffect(() => {\n    if (!isGeolocationSupported) {\n      // FIXME: Warn the user\n      // eslint-disable-next-line no-console\n      console.log(\"Geolocation is not supported. Inform the user.\");\n    }\n  }, [isGeolocationSupported]);\n\n  // Figure out the permissionState.\n  useEffect(() => {\n    if (\n      isGeolocationSupported &&\n      isPermissionsSupported &&\n      permissionState == null\n    ) {\n      checkGeolocationPermission();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Warn the user about denied permission.\n  useEffect(() => {\n    if (permissionState === \"denied\") {\n      showWarningOfDeniedGeolocation();\n      stopWatching();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [permissionState]);\n\n  /**\n   * If Permissions API is supported, only allow clicking once the\n   * PermissionState is known.\n   */\n  const isClickingAllowed = !isPermissionsSupported || permissionState != null;\n  const isGeolocationOn = watchID != null;\n\n  // Start watching on mount if asked.\n  useEffect(() => {\n    if (\n      enableOnMount &&\n      !hasBeenUsed &&\n      isGeolocationSupported &&\n      !isGeolocationOn &&\n      (!isPermissionsSupported ||\n        (permissionState != null && permissionState !== \"denied\"))\n    ) {\n      startWatching(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    enableOnMount,\n    hasBeenUsed,\n    isGeolocationSupported,\n    isGeolocationOn,\n    isPermissionsSupported,\n    permissionState,\n  ]);\n\n  const onClick: MouseEventHandler = (event) => {\n    /**\n     * Assume that Geolocation API exists.\n     *\n     * Assume either permissionState is known or the Permissios API is not\n     * supported.\n     */\n    // FIXME: Maybe find a way so this does not need to be remembered.\n    // eslint-disable-next-line no-console\n    console.assert(isGeolocationSupported);\n    // FIXME: Maybe find a way so this does not need to be remembered.\n    // FIXME: Remove these debug asserts\n    // eslint-disable-next-line no-console\n    console.assert(isClickingAllowed);\n    event.preventDefault();\n\n    if (!isGeolocationOn) {\n      if (isPermissionsSupported && permissionState === \"denied\") {\n        // Warn the user again if they press the button.\n        showWarningOfDeniedGeolocation();\n      } else {\n        startWatching(true);\n      }\n    } else {\n      stopWatching();\n    }\n  };\n\n  let element = null;\n  if (isGeolocationSupported) {\n    const ariaLabel = isGeolocationOn\n      ? \"Stop using my location\"\n      : \"Find my location\";\n    const buttonClassName = isGeolocationOn\n      ? \"mapboxgl-ctrl-icon mapboxgl-ctrl-geolocate mapboxgl-ctrl-geolocate-active\"\n      : \"mapboxgl-ctrl-icon mapboxgl-ctrl-geolocate\";\n    element = (\n      <div className=\"mapboxgl-ctrl mapboxgl-ctrl-group mapboxgl-ctrl-bottom-left\">\n        <button\n          type=\"button\"\n          className={buttonClassName}\n          data-testid={dataTestId}\n          aria-label={ariaLabel}\n          aria-pressed={isGeolocationOn}\n          onContextMenu={(event): void => event.preventDefault()}\n          onClick={isClickingAllowed ? onClick : undefined}\n        >\n          <span className=\"mapboxgl-ctrl-icon\" aria-hidden=\"true\" />\n        </button>\n      </div>\n    );\n  }\n  return element;\n};\n\nexport default GeolocateControl;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  id: \"path862\",\n  d: \"m -14.2,148 v -19.3 c 0,-7.8 6.4,-14.2 14.2,-14.2 7.8,0 14.2,6.4 14.2,14.2 V 148 Z M 1,83.8 c 20.6,0 37.4,16.7 37.4,37.4 v 48.2 H 49 v -48.2 c 0,-26.5 -21.5,-48 -48,-48 -26.5,0 -48,21.5 -48,48 v 48.2 h 10.6 v -48.2 c 0,-20.7 16.8,-37.4 37.4,-37.4\"\n});\n\nfunction SvgTunnel(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"-63 65 128 128\",\n    y: \"0px\",\n    x: \"0px\",\n    id: \"Layer_1\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTunnel);\nexport default __webpack_public_path__ + \"static/media/Tunnel.b51d5dac.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport type { MouseEventHandler } from \"react\";\n\nimport { ReactComponent as TunnelIcon } from \"./Tunnel.svg\";\n\nexport interface TunnelsControlProps {\n  dataTestId?: string;\n  enabled: boolean;\n  setEnabled: (enabled: boolean) => void;\n}\n\nconst TunnelsControl: React.FC<TunnelsControlProps> = ({\n  dataTestId,\n  enabled,\n  setEnabled,\n}) => {\n  const onClick: MouseEventHandler = (event) => {\n    event.preventDefault();\n    setEnabled(!enabled);\n  };\n\n  const ariaLabel = enabled ? \"Hide tunnels\" : \"Show tunnels\";\n  const buttonClassName = enabled ? \"mapboxgl-ctrl-icon\" : \"mapboxgl-ctrl-icon\";\n  const buttonColor = enabled ? \"#33b5e5\" : \"#333\";\n  return (\n    <div\n      className=\"mapboxgl-ctrl mapboxgl-ctrl-group mapboxgl-ctrl-bottom-left\"\n      style={{ marginBottom: 53 }}\n    >\n      <button\n        type=\"button\"\n        className={buttonClassName}\n        data-testid={dataTestId}\n        aria-label={ariaLabel}\n        aria-pressed={enabled}\n        onContextMenu={(event): void => event.preventDefault()}\n        onClick={onClick}\n      >\n        <span className=\"mapboxgl-ctrl-icon\" aria-hidden=\"true\">\n          <TunnelIcon fill={buttonColor} />\n        </span>\n      </button>\n    </div>\n  );\n};\n\nexport default TunnelsControl;\n","import React from \"react\";\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\n\nconst localesAvailable =\n  \"English|en,Finnish|fi,Swedish|sv,Afrikaans|af,Albanian|sq,Amharic|am,Arabic|ar,Armenian|hy,Azerbaijani|az,Basque|eu,Belarusian|be,Bengali|bn,Bosnian|bs,Bulgarian|bg,Catalan|ca,Cebuano|ceb,Chinese (Simplified)|zh-CN,Chinese (Traditional)|zh-TW,Corsican|co,Croatian|hr,Czech|cs,Danish|da,Dutch|nl,Esperanto|eo,Estonian|et,French|fr,Frisian|fy,Galician|gl,Georgian|ka,German|de,Greek|el,Gujarati|gu,Haitian Creole|ht,Hausa|ha,Hawaiian|haw,Hebrew|he,Hindi|hi,Hmong|hmn,Hungarian|hu,Icelandic|is,Igbo|ig,Indonesian|id,Irish|ga,Italian|it,Japanese|ja,Javanese|jv,Kannada|kn,Kazakh|kk,Khmer|km,Kinyarwanda|rw,Korean|ko,Kurdish|ku,Kyrgyz|ky,Lao|lo,Latvian|lv,Lithuanian|lt,Luxembourgish|lb,Macedonian|mk,Malagasy|mg,Malay|ms,Malayalam|ml,Maltese|mt,Maori|mi,Marathi|mr,Mongolian|mn,Myanmar (Burmese)|my,Nepali|ne,Norwegian|no,Nyanja (Chichewa)|ny,Odia (Oriya)|or,Pashto|ps,Persian|fa,Polish|pl,Portuguese (Portugal&Brazil)|pt,Punjabi|pa,Romanian|ro,Russian|ru,Samoan|sm,Scots Gaelic|gd,Serbian|sr,Sesotho|st,Shona|sn,Sindhi|sd,Sinhala (Sinhalese)|si,Slovak|sk,Slovenian|sl,Somali|so,Spanish|es,Sundanese|su,Swahili|sw,Tagalog (Filipino)|tl,Tajik|tg,Tamil|ta,Tatar|tt,Telugu|te,Thai|th,Turkish|tr,Turkmen|tk,Ukrainian|uk,Urdu|ur,Uyghur|ug,Uzbek|uz,Vietnamese|vi,Welsh|cy,Xhosa|xh,Yiddish|yi,Yoruba|yo,Zulu|zu\"\n    .split(\",\")\n    .map((entry) => entry.split(\"|\"));\n\ninterface LocaleSelectProps {\n  locale: string;\n  onLocaleSelected: (locale: string) => void;\n}\n\nconst LocaleSelect: React.FC<LocaleSelectProps> = ({\n  locale,\n  onLocaleSelected,\n}) => {\n  return (\n    <NativeSelect\n      inputProps={{\n        id: \"locale\",\n        name: \"locale\",\n      }}\n      onChange={(event) => {\n        const selectedLocale = event.target.value;\n        if (selectedLocale !== locale) {\n          onLocaleSelected(selectedLocale);\n        }\n      }}\n      style={{ paddingTop: 0, maxWidth: 90 }}\n      value={locale}\n    >\n      <option key=\"\" value=\"\">\n        {locale === \"\" ? \"Translate\" : \"Original\"}\n      </option>\n      {localesAvailable.map(([name, code]) => (\n        <option key={code} value={code}>\n          {name}\n        </option>\n      ))}\n    </NativeSelect>\n  );\n};\nexport default LocaleSelect;\n","import React, { useState } from \"react\";\nimport type { MouseEventHandler } from \"react\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport LocaleSelect from \"./LocaleSelect\";\n\nimport useWelcomeSeenFlag from \"../hooks/useWelcomeSeenFlag\";\n\nexport interface HelpControlProps {\n  dataTestId?: string;\n  initiallyOpen: boolean;\n  locale: string;\n  onLocaleSelected: (locale: string) => void;\n}\n\nconst HelpControl: React.FC<HelpControlProps> = ({\n  dataTestId,\n  initiallyOpen,\n  locale,\n  onLocaleSelected,\n}) => {\n  const [enabled, setEnabled] = useState(initiallyOpen);\n\n  const [, setWelcomeSeenFlag] = useWelcomeSeenFlag();\n\n  const onClick: MouseEventHandler = (event) => {\n    event.preventDefault();\n    setEnabled(true);\n  };\n\n  const ariaLabel =\n    locale === \"fi\" ? \"Tietoja palvelusta\" : \"About the service\";\n  const buttonClassName = \"mapboxgl-ctrl-icon\";\n  const buttonColor = \"#000000\";\n  return (\n    <div\n      className=\"mapboxgl-ctrl mapboxgl-ctrl-group mapboxgl-ctrl-bottom-left\"\n      style={{ marginBottom: 94 }}\n    >\n      <button\n        type=\"button\"\n        className={buttonClassName}\n        data-testid={dataTestId}\n        aria-label={ariaLabel}\n        onContextMenu={(event): void => event.preventDefault()}\n        onClick={onClick}\n      >\n        <span\n          className=\"mapboxgl-ctrl-icon\"\n          aria-hidden=\"true\"\n          style={{ lineHeight: \"29px\", fontSize: \"24px\", color: buttonColor }}\n        >\n          ?\n        </span>\n      </button>\n      <Dialog\n        open={enabled}\n        fullWidth\n        PaperProps={{ style: { height: \"100%\", overflow: \"hidden\" } }}\n      >\n        {enabled && (\n          <>\n            <DialogTitle>\n              {(locale === \"fi\" && \"Tietoja palvelusta\") ||\n                \"About this service\"}\n              <IconButton\n                style={{\n                  position: \"absolute\",\n                  top: \"8px\",\n                  right: \"8px\",\n                }}\n                onClick={() => {\n                  setEnabled(false);\n                  setWelcomeSeenFlag({ welcomeSeen: true });\n                }}\n              >\n                <CloseIcon />\n              </IconButton>\n            </DialogTitle>\n            <DialogContent\n              style={{\n                borderTop: \"1px solid rgba(0, 0, 0, 0.12)\",\n                paddingTop: 0,\n              }}\n            >\n              <div style={{ float: \"right\" }}>\n                <LocaleSelect\n                  locale={locale}\n                  onLocaleSelected={onLocaleSelected}\n                />\n              </div>\n              {locale === \"fi\" && (\n                <>\n                  <h3>Tervetuloa käyttämään Gatesolvea!</h3>\n                  <p>\n                    Gatesolve on opas tavaratoimitusten viimeisille metreille,\n                    eli oikean oven löytymistä varten.\n                  </p>\n                  <p>\n                    Kartalla näkyy{\" \"}\n                    <span style={{ color: \"#64be14\" }}>vihreällä</span>{\" \"}\n                    määränpäät, eli tiedossa olevat ovet ja niiden talonumero-\n                    ja rappukirjaintiedot.\n                  </p>\n                  <p>\n                    Kartalla näkyy{\" \"}\n                    <span style={{ color: \"#00afff\" }}>sinisellä</span>{\" \"}\n                    purkupaikat, esimerkiksi lastausalueita ja\n                    pysäköintikieltoalueita.\n                  </p>\n                  <p>\n                    Oranssit painikkeet vievät{\" \"}\n                    <a\n                      href=\"https://app.olmap.org/\"\n                      style={{ color: \"#ff5000\" }}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      OLMap-palvelun\n                    </a>{\" \"}\n                    toimintoihin, joilla voit lisätä, korjata ja kommentoida\n                    tietoja.\n                  </p>\n                  <p>\n                    Palvelun näyttämät tiedot ovat vain ehdotuksia, eikä niiden\n                    luotettavuudesta ja turvallisuudesta voida ottaa vastuuta.\n                    Noudata liikennesääntöjä ja varovaisuutta.\n                  </p>\n                  <h3>Palaute</h3>\n                  <p>\n                    Voit lähettää palautetta palvelusta sähköpostitse\n                    osoitteeseen{\" \"}\n                    <a href=\"mailto:gatesolve@sproutverse.com\">\n                      gatesolve@sproutverse.com\n                    </a>\n                    .\n                  </p>\n                  <h3>Lisenssit</h3>\n                  <p>\n                    Toimipistetietojen ja kuvien lähde on{\" \"}\n                    <a\n                      href=\"https://olmap.org/fi/\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      OLMap\n                    </a>\n                    , jonka tiedot on lisensoitu avoimesti{\" \"}\n                    <a\n                      href=\"https://creativecommons.org/publicdomain/zero/1.0/deed.fi\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      Creative Commons CC0\n                    </a>{\" \"}\n                    -lausumalla.\n                  </p>\n                  <p>\n                    Taustakartan ja osoitehaun lähde on{\" \"}\n                    <a\n                      href=\"https://digitransit.fi/\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      Digitransit\n                    </a>\n                    . Aineistojen avoin lisenssi on{\" \"}\n                    <a\n                      href=\"https://www.openstreetmap.org/copyright\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      ODbL &copy; OpenStreetMapin tekijät\n                    </a>\n                    .\n                  </p>\n                  <p>\n                    Palvelu ja sen toteutuksessa käytetyt ohjelmistokirjastot\n                    ovat avointa lähdekoodia:{\" \"}\n                    <a\n                      href=\"https://github.com/gatesolve/gatesolve-ui\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      palvelun lähdekoodi Githubissa\n                    </a>{\" \"}\n                    &copy; Sproutverse Oy ja Mistmap Oy.\n                  </p>\n                </>\n              )}\n              {locale !== \"fi\" && (\n                <>\n                  <h3>Welcome to use Gatesolve!</h3>\n                  <p>\n                    Gatesolve is your guide to the last meters of goods\n                    deliveries, for finding the right door.\n                  </p>\n                  <p>\n                    The map shows in{\" \"}\n                    <span style={{ color: \"#64be14\" }}>green</span> the\n                    destinations such as any doors and their housenumber and\n                    unit information.\n                  </p>\n                  <p>\n                    The map shows in{\" \"}\n                    <span style={{ color: \"#00afff\" }}>blue</span> the places\n                    for unloading including loading zones and no-parking zones.\n                  </p>\n                  <p>\n                    Orange buttons take you to{\" \"}\n                    <a\n                      href=\"https://app.olmap.org/\"\n                      style={{ color: \"#ff5000\" }}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      the OLMap service\n                    </a>{\" \"}\n                    including functionalities to add, update and comment on the\n                    information.\n                  </p>\n                  <p>\n                    All information in the service is provided as suggestions\n                    without guarantees of reliability and safety and its use is\n                    at your own risk. Observe traffic regulations and caution.\n                  </p>\n                  <h3>Feedback</h3>\n                  <p>\n                    Please send any feedback regarding this service via email to{\" \"}\n                    <a href=\"mailto:gatesolve@sproutverse.com\">\n                      gatesolve@sproutverse.com\n                    </a>\n                    .\n                  </p>\n                  <h3>Licenses</h3>\n                  <p>\n                    The source of venue information and photos is{\" \"}\n                    <a\n                      href=\"https://olmap.org/\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      OLMap\n                    </a>\n                    , which licenses its data openly with the{\" \"}\n                    <a\n                      href=\"https://creativecommons.org/publicdomain/zero/1.0/deed\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      Creative Commons CC0\n                    </a>{\" \"}\n                    dedication.\n                  </p>\n                  <p>\n                    The source of the background map and the address search is{\" \"}\n                    <a\n                      href=\"https://digitransit.fi/en/\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      Digitransit\n                    </a>\n                    . The license of this open data is{\" \"}\n                    <a\n                      href=\"https://www.openstreetmap.org/copyright\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      ODbL &copy; OpenStreetMap contributors\n                    </a>\n                    .\n                  </p>\n                  <p>\n                    The service and software libraries used in its\n                    implementation are open source:{\" \"}\n                    <a\n                      href=\"https://github.com/gatesolve/gatesolve-ui\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      the source code of the service in Github\n                    </a>{\" \"}\n                    &copy; Sproutverse Ltd and Mistmap Ltd.\n                  </p>\n                </>\n              )}\n            </DialogContent>\n          </>\n        )}\n      </Dialog>\n    </div>\n  );\n};\n\nexport default HelpControl;\n","export const NAMESPACE_URI = \"https://w3id.org/openstreetmap/terms#\";\nconst NAMESPACE_REGEX = /^(https:\\/\\/w3id.org\\/openstreetmap\\/terms#|osm:)/;\n\nexport const triplesToTags = (\n  subject: string,\n  defined?: Record<string, string>,\n  freeform?: Array<string>\n): Record<string, string> => {\n  const tags = { \"@id\": subject } as Record<string, string>;\n\n  // Undo the mapping by openplannerteam/routable-tiles-ontology\n  Object.entries(defined || {}).forEach(([property, object]) => {\n    if (!property.startsWith(NAMESPACE_URI) && !property.startsWith(\"osm:\"))\n      return;\n    if (\n      property === \"https://w3id.org/openstreetmap/terms#hasTag\" ||\n      property === \"osm:hasTag\"\n    )\n      return;\n    const key = property.replace(NAMESPACE_REGEX, \"\");\n    const value = object.replace(NAMESPACE_REGEX, \"\");\n    // Special-case mappings: (XXX: should handle smoothness, oneway, osm:Dirt, some highway values ...)\n    if (value === \"NoAccess\") {\n      tags[key] = \"no\";\n    } else if (value === \"FreeAccess\") {\n      tags[key] = \"yes\";\n    } else if (value === \"OfficialAccess\") {\n      tags[key] = \"official\";\n    } else if (key === \"highway\" && value === \"UnderConstruction\") {\n      tags[key] = \"construction\";\n    } else if (key === \"construction\" && value === \"UnderConstruction\") {\n      tags[key] = \"yes\";\n    } else {\n      // Convert from Routable Tiles's CamelCase to OSM's lower_case\n      tags[key] = value.replace(/([a-z])([A-Z])/g, \"$1_$2\").toLowerCase();\n    }\n  });\n\n  // Split osm:hasTag \"key=value\" into key => value\n  freeform?.forEach((tag) => {\n    const splitIndex = tag.indexOf(\"=\");\n    const key = tag.substring(0, splitIndex);\n    const value = tag.substring(splitIndex + 1);\n    tags[key] = value;\n  });\n  return tags;\n};\n","import type {\n  Feature,\n  FeatureCollection,\n  Geometry,\n  GeoJsonProperties,\n} from \"geojson\"; // eslint-disable-line import/no-extraneous-dependencies\n\nimport { triplesToTags } from \"./routable-tiles\";\n\n// \"./planner-config\" (and PlannerJS) is imported dynamically by calculatePlan\n\nimport { ElementWithCoordinates, Tags } from \"./overpass\";\n\ninterface RouteGeometries {\n  coordinates: Array<[number, number]>;\n  obstacles: Array<ElementWithCoordinates>;\n  obstacleWays: Array<[Tags, Array<[number, number]>]>;\n  imaginaryWays: Array<Array<[number, number]>>;\n}\n\nfunction extractGeometry(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  path: any\n): RouteGeometries {\n  const coordinates = [] as Array<[number, number]>;\n  const obstacles = [] as Array<ElementWithCoordinates>;\n  const waysSeen = {} as { [id: string]: boolean };\n  const obstacleWays = new Map<string, [Tags, Array<[number, number]>]>();\n  const imaginaryWays = [] as Array<Array<[number, number]>>;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  path.legs[0].getSteps().forEach((step: any, index: number) => {\n    /* XXX: Would be nice to get a null step.through from PlannerJS here.\n       Heuristic below: PlannerJS connects the origin and destination to\n       the nearest OSM ways through a node which does not have an id,\n       so the steps whose geometry is not based on an OSM way have\n       nodes without ids at both ends. Additionally, the second step is a\n       false positive if origin and destination connect to same OSM edge.\n     */\n    if (!step.startLocation.id && !step.stopLocation.id && index !== 1) {\n      imaginaryWays.push([\n        [\n          step.startLocation.longitude as number,\n          step.startLocation.latitude as number,\n        ],\n        [\n          step.stopLocation.longitude as number,\n          step.stopLocation.latitude as number,\n        ],\n      ]);\n      return; // guessed segment\n    }\n    const node = step.stopLocation;\n    const wayId = step.through;\n\n    // For each way seen, create an obstacle node if there's a height restriction\n    if (!waysSeen[wayId]) {\n      const wayContext = path.context[wayId];\n      const tags = triplesToTags(\n        wayId,\n        wayContext.definedTags,\n        wayContext.freeformTags\n      );\n      if (tags.height || tags.maxheight || tags[\"maxheight:physical\"]) {\n        obstacles.push({\n          type: wayId,\n          id: wayId,\n          lon: step.startLocation.longitude as number,\n          lat: step.startLocation.latitude as number,\n          tags,\n        });\n      }\n    }\n    waysSeen[wayId] = true;\n\n    if (\n      path.context[wayId]?.definedTags[\n        \"https://w3id.org/openstreetmap/terms#highway\"\n      ] === \"https://w3id.org/openstreetmap/terms#Steps\" ||\n      path.context[wayId]?.freeformTags.find((tag: string) =>\n        tag.startsWith(\"tunnel=\")\n      )\n    ) {\n      if (!obstacleWays.has(wayId)) {\n        const wayContext = path.context[wayId];\n        const tags = triplesToTags(\n          wayId,\n          wayContext.definedTags,\n          wayContext.freeformTags\n        );\n        obstacleWays.set(wayId, [tags, []]);\n      }\n      obstacleWays\n        .get(wayId)?.[1]\n        .push(\n          [\n            step.startLocation.longitude as number,\n            step.startLocation.latitude as number,\n          ],\n          [\n            step.stopLocation.longitude as number,\n            step.stopLocation.latitude as number,\n          ]\n        );\n    }\n    if (node.definedTags?.[\"https://w3id.org/openstreetmap/terms#barrier\"]) {\n      const tags = triplesToTags(node.id, node.definedTags, node.freeformTags);\n      obstacles.push({\n        type: node.id,\n        id: node.id,\n        lon: node.longitude as number,\n        lat: node.latitude as number,\n        tags,\n      });\n    }\n    coordinates.push([\n      step.startLocation.longitude as number,\n      step.startLocation.latitude as number,\n    ]);\n    coordinates.push([\n      step.stopLocation.longitude as number,\n      step.stopLocation.latitude as number,\n    ]);\n  });\n  return {\n    coordinates,\n    obstacles,\n    obstacleWays: Array.from(obstacleWays.values()),\n    imaginaryWays,\n  };\n}\n\nexport function geometryToGeoJSON(\n  origin?: ElementWithCoordinates,\n  targets?: Array<ElementWithCoordinates>,\n  entrances?: Array<ElementWithCoordinates>,\n  routeGeometries?: RouteGeometries,\n  originColor?: string,\n  targetColor?: string\n): FeatureCollection {\n  const features = [] as Array<Feature<Geometry, GeoJsonProperties>>;\n  if (origin) {\n    features.push({\n      type: \"Feature\",\n      geometry: {\n        type: \"Point\",\n        coordinates: [origin.lon, origin.lat],\n      },\n      properties: {\n        ...origin.tags,\n        \"@id\": `${origin.type}/${origin.id}`, // XXX should be full url\n        \"@color\": originColor,\n      },\n    });\n  }\n  if (targets) {\n    targets.forEach((target) => {\n      features.push({\n        type: \"Feature\",\n        geometry: {\n          type: \"Point\",\n          coordinates: [target.lon, target.lat], // XXX should be full url\n        },\n        properties: {\n          ...target.tags,\n          \"@id\": `${target.type}/${target.id}`,\n          \"@color\": targetColor,\n        },\n      });\n    });\n  }\n  if (entrances) {\n    entrances.forEach((entrance) => {\n      features.push({\n        type: \"Feature\",\n        geometry: {\n          type: \"Point\",\n          coordinates: [entrance.lon, entrance.lat],\n        },\n        properties: {\n          \"@color\": \"#00ffff\",\n          \"@label\": entrance.tags?.[\"ref\"] || entrance.tags?.[\"addr:unit\"],\n          \"@opacity\": 0,\n        },\n      });\n    });\n  }\n  if (routeGeometries?.coordinates) {\n    features.push({\n      type: \"Feature\",\n      geometry: {\n        type: \"LineString\",\n        coordinates: routeGeometries.coordinates,\n      },\n      properties: {\n        \"@color\": \"#000\",\n      },\n    });\n  }\n  routeGeometries?.obstacleWays.forEach(([tags, geometry]) => {\n    const properties = tags.tunnel\n      ? {\n          ...tags,\n          \"@color\": \"#000000\",\n          \"@opacity\": 1,\n          \"@tunnel\": true,\n        }\n      : {\n          ...tags,\n          \"@color\": \"#dc0451\",\n          \"@opacity\": 1,\n          \"@obstacle\": true,\n          \"@interactive\": true,\n        };\n    features.push({\n      type: \"Feature\",\n      geometry: {\n        type: \"LineString\",\n        coordinates: geometry,\n      },\n      properties,\n    });\n  });\n  if (routeGeometries?.imaginaryWays) {\n    features.push({\n      type: \"Feature\",\n      geometry: {\n        type: \"MultiLineString\",\n        coordinates: routeGeometries.imaginaryWays,\n      },\n      properties: {\n        \"@color\": \"#000\",\n        \"@imaginary\": true,\n      },\n    });\n  }\n  routeGeometries?.obstacles.forEach((obstacle) => {\n    features.push({\n      type: \"Feature\",\n      geometry: {\n        type: \"Point\",\n        coordinates: [obstacle.lon, obstacle.lat],\n      },\n      properties: {\n        ...obstacle.tags,\n        \"@color\": \"#dc0451\",\n        \"@label\": \"!\",\n        \"@obstacle\": true,\n      },\n    });\n  });\n  return {\n    type: \"FeatureCollection\",\n    features,\n  };\n}\n\nexport default async function calculatePlan(\n  queries: Array<[ElementWithCoordinates, ElementWithCoordinates, string?]>,\n  callback: (f: FeatureCollection) => void\n): Promise<void> {\n  const { Planner } = await import(\n    /* webpackChunkName: \"planner-config\" */\n    /* webpackPrefetch: true */\n    \"./planner-config\"\n  );\n  queries.forEach(([origin, target, profile = \"delivery-walking\"]) => {\n    const planner = new Planner();\n    // XXX setProfileID requires URL to start with scheme, so guess\n    const protocol = process.env.NODE_ENV === \"production\" ? \"https\" : \"http\";\n    planner\n      .setProfileID(`${protocol}://${process.env.PUBLIC_URL}/${profile}.json`)\n      .query({\n        from: { latitude: origin.lat, longitude: origin.lon },\n        to: { latitude: target.lat, longitude: target.lon },\n      })\n      .take(1)\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      .on(\"data\", async (path: any) => {\n        const completePath = await planner.completePath(path);\n        // eslint-disable-next-line no-console\n        console.log(\"Plan\", completePath, \"from\", origin, \"to\", target);\n        const routeGeometries = extractGeometry(completePath);\n        const originColor = profile === \"delivery-car\" ? \"#000000\" : \"#00afff\";\n        const targetColor = profile === \"delivery-car\" ? \"#00afff\" : \"#64be14\";\n        const geoJSON = geometryToGeoJSON(\n          origin,\n          [target],\n          undefined,\n          routeGeometries,\n          originColor,\n          targetColor\n        );\n        callback(geoJSON);\n      });\n  });\n}\n","import type { FeatureCollection, MultiLineString } from \"geojson\";\n\nimport osmtogeojson from \"osmtogeojson\";\n\nconst OVERPASS_INTERPRETER =\n  process.env.REACT_APP_OVERPASS_INTERPRETER?.replace(/\\?$/, \"\") ||\n  \"https://overpass.fvh.io/api/interpreter\";\n\nexport interface OverpassResponse {\n  version: number;\n  generator: string;\n  osm3s: Osm3S;\n  elements: Element[];\n}\n\nexport interface Osm3S {\n  timestamp_osm_base: Date;\n  copyright: string;\n}\n\nexport type Element =\n  | ElementWithCoordinates\n  | ElementWithGeometry\n  | ElementWithCenter\n  | (ElementCore & Partial<Coordinates>);\n\nexport type ElementWithCoordinates = ElementCore & Coordinates;\n\nexport type ElementWithGeometry = ElementCore & {\n  geometry: Array<Coordinates>;\n};\n\nexport type ElementWithCenter = ElementCore & {\n  center: Coordinates;\n};\n\ninterface ElementCore {\n  type: string;\n  id: number;\n  tags?: Tags;\n}\n\nexport interface Coordinates {\n  lat: number;\n  lon: number;\n}\n\nexport interface Tags {\n  entrance?: string;\n  operator?: string;\n  ref?: string;\n  \"addr:unit\"?: string;\n  \"addr:housenumber\"?: string;\n  \"addr:street\"?: string;\n  name?: string;\n  tunnel?: string;\n}\n\nconst buildEntranceQuery = (lat: number, lon: number): string => `\n  [out:json][timeout:25];\n  (\n    relation(around:10, ${lat}, ${lon})[building];\n    way(r);\n    way(around:10, ${lat}, ${lon})[building];\n  )->.b;\n  (\n    relation(around.b:10)[\"building:part\"];\n    way(r);\n    way(around.b:10)[\"building:part\"];\n  )->.p;\n  // gather results\n  (\n    node(w.b)[entrance];\n    node(w.p)[entrance];\n  );\n  // print results\n  out body;\n  >;\n  out skel qt;\n`;\n\nexport const queryEntrances = (\n  target: ElementWithCoordinates\n): Promise<ElementWithCoordinates[]> => {\n  const url = new URL(OVERPASS_INTERPRETER);\n  url.searchParams.append(\"data\", buildEntranceQuery(target.lat, target.lon));\n  return fetch(url.toString()).then((response) =>\n    response.json().then((body: OverpassResponse) => {\n      const targets = body.elements.filter(\n        (element) =>\n          element.type === \"node\" &&\n          \"lat\" in element &&\n          element.lat != null &&\n          \"lon\" in element &&\n          element.lon != null &&\n          element.tags &&\n          element.tags.entrance\n      );\n      // FIXME: How to make the compiler deduce this by itself from above?\n      // For example, see https://github.com/Microsoft/TypeScript/issues/16069\n      return targets as ElementWithCoordinates[];\n    })\n  );\n};\n\nconst buildMatchingStreetQuery = (\n  lat: number,\n  lon: number,\n  street: string\n): string => {\n  const streetEscaped = street\n    .replace(/\\\\/g, \"\\\\\\\\\")\n    .replace(/\"/g, '\\\\\"')\n    .replace(/\\n/g, \"\\\\n\");\n  return `\n  [out:json][timeout:25];\n  (\n    way(around:100, ${lat}, ${lon})[\"highway\"][name=\"${streetEscaped}\"];\n  );\n  // print results as id and geometry for each way in qt (non-sorted) order\n  out ids geom qt;`;\n};\n\nexport const queryMatchingStreet = async (\n  target: ElementWithCoordinates,\n  street: string\n): Promise<MultiLineString> => {\n  const url = new URL(OVERPASS_INTERPRETER);\n  url.searchParams.append(\n    \"data\",\n    buildMatchingStreetQuery(target.lat, target.lon, street)\n  );\n  const response = await fetch(url.toString());\n  const body = await response.json();\n  const coordinates = body.elements.map((way: ElementWithGeometry) =>\n    way.geometry.map(({ lat, lon }) => [lon, lat])\n  );\n  return {\n    type: \"MultiLineString\",\n    coordinates,\n  };\n};\n\nconst buildQueryNodesById = (ids: Array<number>): string => `\n  [out:json][timeout:25];\n  node(id:${ids.join(\",\")});\n  out;\n`;\n\nexport const queryNodesById = async (\n  ids: Array<number>\n): Promise<Array<ElementWithCoordinates>> => {\n  const url = new URL(OVERPASS_INTERPRETER);\n  const validIds = ids.filter((id) => id > 0);\n  if (!validIds.length) return [];\n  url.searchParams.append(\"data\", buildQueryNodesById(validIds));\n  const response = await fetch(url.toString());\n  const body = (await response.json()) as OverpassResponse;\n  return body.elements as Array<ElementWithCoordinates>;\n};\n\nconst buildQueryElementCentersById = (\n  type: string,\n  ids: Array<number>\n): string => `\n  [out:json][timeout:25];\n  ${type}(id:${ids.join(\",\")});\n  out center;\n`;\n\nexport const queryElementCentersById = async (\n  type: \"way\" | \"relation\",\n  ids: Array<number>\n): Promise<Array<ElementWithCenter>> => {\n  const url = new URL(OVERPASS_INTERPRETER);\n  const validIds = ids.filter((id) => id > 0);\n  if (!validIds.length) return [];\n  url.searchParams.append(\"data\", buildQueryElementCentersById(type, validIds));\n  const response = await fetch(url.toString());\n  const body = (await response.json()) as OverpassResponse;\n  return body.elements as Array<ElementWithCenter>;\n};\n\nconst buildTunnelsQuery = () => `\n[out:json][timeout:25][bbox];\n(\n  way[layer~\"^-[123456789]\"][highway!~\"^(footway|steps|corridor|cycleway)\"][highway][tunnel];\n  node[layer~\"^-[123456789]\"][barrier=gate];\n  node[layer~\"^-[123456789]\"][entrance];\n  node[layer~\"^-[123456789]\"][\"parking:condition\"=loading];\n);\nout body;\n>;\nout skel qt;\n`;\n\nexport const queryTunnels = async (\n  bbox: string\n): Promise<FeatureCollection> => {\n  const url = new URL(OVERPASS_INTERPRETER);\n  url.searchParams.append(\"data\", buildTunnelsQuery());\n  url.searchParams.append(\"bbox\", bbox);\n  const response = await fetch(url.toString());\n  const body = (await response.json()) as OverpassResponse;\n  const geojson = osmtogeojson(body) as FeatureCollection;\n  return {\n    ...geojson,\n    features: geojson.features.map((feature) => {\n      const properties = { ...feature.properties };\n      properties[\"@id\"] = properties.id;\n      delete properties.id;\n      return {\n        ...feature,\n        properties,\n      };\n    }),\n  };\n};\n","import { Map } from \"mapbox-gl\";\n\n// eslint-disable-next-line import/prefer-default-export\nexport const addImageSVG = (\n  mapboxgl: Map,\n  imageId: string,\n  svgData: string,\n  size: number\n): void => {\n  const ratio = window.devicePixelRatio;\n\n  const canvas = document.createElement(\"canvas\");\n  canvas.width = ratio * size;\n  canvas.height = ratio * size;\n\n  const ctx = canvas.getContext(\"2d\");\n  const img = new Image(size, size);\n\n  const svgDataUrl = `data:image/svg+xml,${encodeURIComponent(svgData)}`;\n\n  img.onload = (): void => {\n    if (!ctx) {\n      throw Error(\"canvas.getContext failed\");\n    }\n\n    ctx.drawImage(img, 0, 0, ratio * size, ratio * size);\n    mapboxgl.addImage(\n      imageId,\n      ctx.getImageData(0, 0, ratio * size, ratio * size),\n      { pixelRatio: ratio }\n    );\n  };\n\n  img.src = svgDataUrl;\n};\n\nexport const getMapSize = (\n  mapboxgl: Map\n): { width: number; height: number } => ({\n  width: mapboxgl?.getContainer()?.clientWidth,\n  height: mapboxgl?.getContainer()?.clientHeight,\n});\n","// Original source: https://github.com/openplannerteam/leaflet-routable-tiles/blob/master/lib/RoutableTilesToGeoJSON.js\n\nimport turfBearing from \"@turf/bearing\";\nimport { lineString as turfLineString } from \"@turf/helpers\";\nimport turfBooleanClockwise from \"@turf/boolean-clockwise\";\n\nimport { triplesToTags } from \"./routable-tiles\";\n\nconst offset = 0.2;\n\nvar processRelations = function (relations, ways, nodes, entrances) {\n  Object.values(relations)\n    .filter((relation) => {\n      return relation[\"osm:hasTag\"]?.find(\n        (tag) => tag.startsWith(\"building=\") || tag.startsWith(\"building:part=\")\n      );\n    })\n    .forEach((relation) => {\n      const relationEntrances = relation[\"osm:hasMembers\"].flatMap((member) => {\n        // Process the member way if it's included in the tile\n        const way = ways[member[\"@id\"]];\n        if (way) {\n          return processWay(\n            way,\n            nodes,\n            entrances,\n            member.role === \"inner\",\n            relation\n          );\n        }\n        return [];\n      });\n      processBuildingEntrances(relationEntrances);\n    });\n};\n\nvar processWays = function (ways, nodes, entrances) {\n  Object.values(ways)\n    .filter((way) => {\n      return way[\"osm:hasTag\"]?.find(\n        (tag) => tag.startsWith(\"building=\") || tag.startsWith(\"building:part=\")\n      );\n    })\n    .forEach((way) => {\n      processBuildingEntrances(processWay(way, nodes, entrances));\n    });\n};\n\nvar processBuildingEntrances = function (buildingEntrances) {\n  // If the building has a staircase or a main entrance,\n  // mark other entrances as secondary\n  if (\n    buildingEntrances.some((entrance) =>\n      [\"staircase\", \"main\"].includes(entrance.properties[\"entrance\"])\n    )\n  ) {\n    buildingEntrances.forEach((entrance) => {\n      if (![\"staircase\", \"main\"].includes(entrance.properties[\"entrance\"])) {\n        entrance.properties[\"@secondary\"] = true;\n      }\n    });\n  }\n};\n\nvar processWay = function (way, nodes, entrances, isInnerRole, relation) {\n  if (!way[\"osm:hasNodes\"]) {\n    return []; // no nodes to process\n  } else if (typeof way[\"osm:hasNodes\"] === \"string\") {\n    return []; // a single node cannot be processed as a way\n  }\n\n  const nodeIds = way[\"osm:hasNodes\"];\n  if (nodeIds.length < 4) {\n    console.log(\"not an area\", way[\"@id\"]);\n    return [];\n  }\n  if (nodeIds[0] !== nodeIds[nodeIds.length - 1]) {\n    console.log(\"unclosed\", way[\"@id\"]);\n  }\n  let isWayClockwise = null;\n  let wayEntrances = [];\n  nodeIds.forEach((nodeId, index, nodeIds) => {\n    const entrance = entrances[nodeId];\n    if (entrance) {\n      // Calculate clockwiseness only when first entrance is hit\n      if (isWayClockwise === null) {\n        isWayClockwise = turfBooleanClockwise(\n          turfLineString(nodeIds.map((id) => nodes[id]))\n        );\n      }\n      const xy = nodes[nodeId];\n      const xyPrev =\n        index === 0\n          ? nodes[nodeIds[nodeIds.length - 2]]\n          : nodes[nodeIds[index - 1]];\n      const xyNext =\n        index === nodeIds.length - 1\n          ? nodes[nodeIds[1]]\n          : nodes[nodeIds[index + 1]];\n\n      const bearingPrev = turfBearing(xy, xyPrev);\n      const bearingNext = turfBearing(xy, xyNext);\n      const entranceAngle =\n        Math.abs(bearingPrev - bearingNext) / 2 +\n        Math.min(bearingPrev, bearingNext);\n      const adaptedAngle =\n        bearingPrev > bearingNext ? entranceAngle + 270 : entranceAngle + 90;\n      const angle =\n        isWayClockwise !== !!isInnerRole ? adaptedAngle : adaptedAngle + 180;\n\n      let entranceLabel = entrance.properties[\"@entrance-label\"];\n      let houseLabel = entrance.properties[\"@house-label\"];\n      // Inherit information from the building, but only\n      // if there is no building information at the entrance\n      // XXX: Inherit from building as well if this way is a building part\n      if (!entrance.properties[\"addr:housenumber\"]) {\n        if (!entrance.properties[\"ref\"] && !entrance.properties[\"addr:unit\"]) {\n          const label = entranceNodeToLabel(relation || way); // XXX: merge?\n          entranceLabel = entranceLabel || label.entrance;\n          // XXX: Inherit street and housenumber only if they are not ambiguous\n          // houseLabel = label.house;\n        }\n      }\n\n      entrance.properties = {\n        ...entrance.properties,\n        \"@offset\": [\n          Math.cos((angle / 180) * Math.PI) * offset,\n          Math.sin((angle / 180) * Math.PI) * offset,\n        ],\n        \"@rotate\": (((angle - 90) % 360) + 360) % 360,\n        \"@entrance-label\": entranceLabel,\n        \"@house-label\": houseLabel,\n      };\n      wayEntrances.push(entrance);\n    }\n  });\n  return wayEntrances;\n};\n\nconst entranceNodeToLabel = function (node) {\n  const house =\n    node[\"osm:hasTag\"]\n      ?.find((tag) => tag.startsWith(\"addr:housenumber=\"))\n      ?.substring(17) || \"\";\n  const ref = node[\"osm:hasTag\"]\n    ?.find((tag) => tag.startsWith(\"ref=\"))\n    ?.substring(4);\n  const unit = node[\"osm:hasTag\"]\n    ?.find((tag) => tag.startsWith(\"addr:unit=\"))\n    ?.substring(10);\n  const entrance = ref || unit || \"\";\n  return {\n    house: house.replace(/ /g, \"\\u2009\"),\n    entrance: entrance.replace(/ /g, \"\\u2009\"),\n  };\n};\n\nexport default function (json) {\n  var entrances = {};\n  var nodes = {};\n  var ways = {};\n  var relations = {};\n  for (var i = 0; i < json[\"@graph\"].length; i++) {\n    let element = json[\"@graph\"][i];\n    if (element[\"@type\"] === \"osm:Relation\") {\n      relations[element[\"@id\"]] = element;\n    } else if (element[\"@type\"] === \"osm:Way\") {\n      ways[element[\"@id\"]] = element;\n    } else if (element[\"geo:lat\"] && element[\"geo:long\"]) {\n      // Store the coordinates of every node for later reference\n      const lngLat = [element[\"geo:long\"], element[\"geo:lat\"]];\n      nodes[element[\"@id\"]] = lngLat;\n\n      if (element[\"osm:hasTag\"]?.find((tag) => tag.startsWith(\"entrance=\"))) {\n        // Create a GeoJSON feature for each entrance\n\n        const id = element[\"@id\"];\n        // XXX: Could be computed later on demand\n        const tags = triplesToTags(id, element, element[\"osm:hasTag\"]);\n\n        const entranceLabel = entranceNodeToLabel(element);\n        const entrance = {\n          type: \"Feature\",\n          geometry: {\n            type: \"Point\",\n            coordinates: lngLat,\n          },\n          properties: {\n            ...tags,\n            \"@entrance-label\": entranceLabel.entrance,\n            \"@house-label\": entranceLabel.house,\n          },\n        };\n\n        entrances[id] = entrance;\n      }\n    }\n  }\n  processRelations(relations, ways, nodes, entrances);\n  processWays(ways, nodes, entrances);\n  return {\n    type: \"FeatureCollection\",\n    features: Object.values(entrances),\n  };\n}\n","// Source: https://gist.github.com/jsanz/e8549c7bffd442235a942695ffdaf77d\n\nconst TILE_SIZE = 256;\nconst WEBMERCATOR_R = 6378137.0;\nconst DIAMETER = WEBMERCATOR_R * 2 * Math.PI;\n\nexport function mercatorProject(lonlat) {\n  var x = (DIAMETER * lonlat[0]) / 360.0;\n  var sinlat = Math.sin((lonlat[1] * Math.PI) / 180.0);\n  var y = (DIAMETER * Math.log((1 + sinlat) / (1 - sinlat))) / (4 * Math.PI);\n  return [DIAMETER / 2 + x, DIAMETER - (DIAMETER / 2 + y)];\n}\n// console.log(Mercator.project([-3,41]))\n\nexport function getVisibleTiles(clientWidth, clientHeight, center, zoom) {\n  var centerm = mercatorProject(center);\n  // zoom + centerm -> centerpx\n  var centerpx = [\n    (centerm[0] * TILE_SIZE * Math.pow(2, zoom)) / DIAMETER,\n    (centerm[1] * TILE_SIZE * Math.pow(2, zoom)) / DIAMETER,\n  ];\n\n  // xmin, ymin, xmax, ymax\n  var bbox = [\n    Math.floor((centerpx[0] - clientWidth / 2) / TILE_SIZE),\n    Math.floor((centerpx[1] - clientHeight / 2) / TILE_SIZE),\n    Math.ceil((centerpx[0] + clientWidth / 2) / TILE_SIZE),\n    Math.ceil((centerpx[1] + clientHeight / 2) / TILE_SIZE),\n  ];\n  var tiles = [];\n  //xmin, ymin, xmax, ymax\n  for (let x = bbox[0]; x < bbox[2]; ++x) {\n    for (let y = bbox[1]; y < bbox[3]; ++y) {\n      var [px, py] = [\n        x * TILE_SIZE - centerpx[0] + clientWidth / 2,\n        y * TILE_SIZE - centerpx[1] + clientHeight / 2,\n      ];\n      tiles.push({ x, y, zoom, px, py });\n    }\n  }\n  return tiles;\n}\n","import type { Position } from \"geojson\";\n\nimport proj4 from \"proj4\";\n\nconst epsg3879 = proj4(\n  \"+proj=tmerc +lat_0=0 +lon_0=25 +k=1 +x_0=25500000 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\"\n);\n\nexport const toEpsg3879 = (position: Position): Position => {\n  return epsg3879.forward(position);\n};\n\nexport const fromEpsg3879 = (position: Position): Position => {\n  return epsg3879.inverse(position);\n};\n","import type { Feature } from \"geojson\";\n\nconst BLACKLIST = [\n  16, 17, 20, 22, 23, 24, 25, 27, 29, 39, 40, 41, 42, 45, 46, 47, 49, 50, 51,\n  52, 53, 54, 55, 61, 67, 98, 103, 104, 105, 126, 142, 144, 145, 146, 147, 148,\n  166, 189, 190, 191, 192, 193, 194, 195, 196, 207, 208, 280, 327, 328, 335,\n  342, 346, 349, 351, 352, 353, 354, 355, 356, 357, 359, 361, 362, 1298, 2295,\n  2842, 4437, 7167, 7168, 7216, 7354, 7419, 7459, 7460, 7461, 7462, 7463, 7464,\n  7465, 7467, 7468, 7497, 7505, 7542, 7543, 7544, 7545, 7614, 7640, 7667, 7690,\n  7691, 7692, 7693, 7694, 7795, 7834,\n];\n\n// eslint-disable-next-line import/prefer-default-export\nexport const filterBlacklistedParking = (features: Feature[]): Feature[] => {\n  return features.filter(\n    (feature) => !BLACKLIST.find((id) => id === feature.properties?.[\"hel:id\"])\n  );\n};\n","const messages = {\n  fi: {\n    \"Delivery entrance\": \"Toimitussisäänkäynti\",\n    \"Not for deliveries\": \"Ei toimituksille\",\n    underground: \"maan alla\",\n    \"loading dock\": \"lastauslaituri\",\n    \"main entrance\": \"pääsisäänkäynti\",\n  },\n} as { [locale: string]: { [message: string]: string } | undefined };\n\n// eslint-disable-next-line import/prefer-default-export\nexport const translate = (message: string, locale: string): string => {\n  return messages[locale]?.[message] || message;\n};\n","import React, { useState } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Typography from \"@material-ui/core/Typography\";\nimport \"@fontsource/noto-sans/400.css\";\n\nimport {\n  OlmapNote,\n  OlmapUnloadingPlace,\n  OlmapWorkplaceEntrance,\n  OlmapWorkplace,\n} from \"../olmap\";\n\nimport { translate } from \"../translations\";\n\ninterface EntranceCardProps {\n  workplaceEntrance: OlmapWorkplaceEntrance;\n  workplace: OlmapWorkplace;\n  label: string;\n  locale: string;\n  onEntranceSelected: (entranceId: number) => void;\n  onUnloadingPlaceSelected: (unloadingPlace: OlmapUnloadingPlace) => void;\n  onViewDetails: (note: OlmapNote) => void;\n}\n\nconst deliveryLabel = (\n  deliveriesType: OlmapWorkplaceEntrance[\"deliveries\"],\n  locale: string\n) => {\n  if (deliveriesType === \"main\" || deliveriesType === \"yes\") {\n    return translate(\"Delivery entrance\", locale);\n  }\n  if (deliveriesType === \"no\") {\n    return translate(\"Not for deliveries\", locale);\n  }\n  return deliveriesType;\n};\n\nconst entranceKeywords = (\n  entrance: OlmapWorkplaceEntrance,\n  locale: string\n): string => {\n  const tags = entrance.entrance_data.as_osm_tags;\n  const keywords = [];\n  if (Number(tags.layer) < 0) {\n    keywords.push(translate(\"underground\", locale));\n  }\n  if (tags.door === \"loadingdock\") {\n    keywords.push(translate(\"loading dock\", locale));\n  }\n  if (tags.entrance === \"main\" && !entrance.description) {\n    keywords.push(translate(\"main entrance\", locale));\n  }\n  // XXX if the street, housenumber or unit varies between entrances\n  if (tags[\"addr:street\"] && tags[\"addr:housenumber\"] && tags[\"addr:unit\"]) {\n    keywords.push(\n      `${tags[\"addr:street\"]} ${tags[\"addr:housenumber\"]} ${tags[\"addr:unit\"]}`\n    );\n  }\n  return keywords.join(\", \");\n};\n\nconst EntranceCard: React.FC<EntranceCardProps> = ({\n  workplaceEntrance,\n  workplace,\n  label,\n  locale,\n  onEntranceSelected,\n  onUnloadingPlaceSelected,\n  onViewDetails,\n}) => {\n  const [collapsed, setCollapsed] = useState(true);\n  return (\n    <Card\n      variant=\"outlined\"\n      square\n      style={{\n        padding: \"8px\",\n        borderLeft: \"none\",\n        borderRight: \"none\",\n        borderBottom: \"none\",\n      }}\n    >\n      <CardHeader\n        style={{ padding: 0 }}\n        avatar={\n          <Avatar\n            style={{\n              marginRight: 0,\n              background: \"#af8dbc\",\n              color: \"#af8dbc\",\n              textShadow: `\n0      -1px 0.5px white,\n1px    -1px 0.5px white,\n1px    0    0.5px white,\n1px    1px  0.5px white,\n0      1px  0.5px white,\n-1px   1px  0.5px white,\n-1px   0    0.5px white,\n-1px   -1px 0.5px white,\n2px    -0.5px 0.5px white,\n2px    0.5px  0.5px white,\n-2px   -0.5px 0.5px white,\n-2px   0.5px  0.5px white,\n-0.5px 2px 0.5px white,\n0.5px  2px 0.5px white,\n-0.5px -2px 0.5px white,\n0.5px  -2px 0.5px white,\n-1.5px    1.5px  0.5px white,\n1.5px    -1.5px  0.5px white,\n-1.5px -1.5px 0.5px white,\n1.5px    1.5px  0.5px white,\n2px    0px 0.5px white,\n0px    2px  0.5px white,\n-2px   0px 0.5px white,\n0px    -2px  0.5px white`,\n              font: '30px \"Noto Sans\"',\n            }}\n          >\n            <span>{label}</span>\n          </Avatar>\n        }\n        title={[\n          !workplaceEntrance.delivery_types?.length &&\n            deliveryLabel(workplaceEntrance.deliveries, locale),\n          workplaceEntrance.description_translated ||\n            workplaceEntrance.description,\n          workplaceEntrance.delivery_types.join(\", \"),\n        ]\n          .filter((x) => x)\n          .join(\" - \")}\n        subheader={[\n          workplaceEntrance.delivery_hours || workplace.delivery_hours,\n          entranceKeywords(workplaceEntrance, locale),\n        ]\n          .filter((x) => x)\n          .join(\" - \")}\n        // The following backgrounds are in case a long word overlaps the floated photo\n        titleTypographyProps={{\n          style: {\n            background: \"rgba(255,255,255,0.5)\",\n            fontWeight:\n              workplaceEntrance.deliveries === \"main\" ? \"bold\" : undefined,\n          },\n        }}\n        subheaderTypographyProps={{\n          style: { background: \"rgba(255,255,255,0.5)\" },\n        }}\n      />\n      <CardContent style={{ padding: 0, minHeight: \"4px\" }}>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {workplaceEntrance.delivery_instructions_translated ||\n            workplaceEntrance.delivery_instructions}\n        </Typography>\n      </CardContent>\n      <CardActions style={{ padding: 0 }}>\n        <Button\n          variant=\"contained\"\n          size=\"small\"\n          style={{ backgroundColor: \"#64be14\", color: \"#fff\" }}\n          type=\"button\"\n          aria-label=\"Set destination\"\n          onClick={(): void => {\n            const id =\n              workplaceEntrance.entrance_data.osm_feature ||\n              workplaceEntrance.image_note.id;\n            if (id) onEntranceSelected(id);\n          }}\n        >\n          Destination\n        </Button>\n        <Button\n          variant=\"contained\"\n          size=\"small\"\n          style={{ backgroundColor: \"#ff5000\", color: \"#fff\" }}\n          type=\"button\"\n          aria-label=\"View details\"\n          onClick={(): void => onViewDetails(workplaceEntrance.image_note)}\n        >\n          View details\n        </Button>\n        <Button\n          variant=\"text\"\n          size=\"small\"\n          style={{ color: \"#00afff\" }}\n          type=\"button\"\n          aria-label={\n            collapsed ? \"Show unloading places\" : \"Hide unloading places\"\n          }\n          onClick={(): void => setCollapsed(!collapsed)}\n        >\n          {collapsed ? \"Show parking\" : \"Hide parking\"}\n        </Button>\n      </CardActions>\n      {!collapsed &&\n        workplaceEntrance.unloading_places.map((unloadingPlace) => (\n          <Card\n            key={unloadingPlace.id}\n            variant=\"outlined\"\n            style={{ margin: \"8px\", padding: \"4px\" }}\n          >\n            <CardContent style={{ padding: 0 }}>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {unloadingPlace.description_translated ||\n                  unloadingPlace.description}\n              </Typography>\n            </CardContent>\n            <CardActions style={{ padding: 0 }}>\n              <Button\n                variant=\"contained\"\n                size=\"small\"\n                style={{ backgroundColor: \"#00afff\", color: \"#fff\" }}\n                type=\"button\"\n                aria-label=\"Set origin\"\n                onClick={(): void => onUnloadingPlaceSelected(unloadingPlace)}\n              >\n                Origin\n              </Button>\n              <Button\n                variant=\"contained\"\n                size=\"small\"\n                style={{ backgroundColor: \"#ff5000\", color: \"#fff\" }}\n                type=\"button\"\n                aria-label=\"View details\"\n                onClick={(): void => onViewDetails(unloadingPlace.image_note)}\n              >\n                View details\n              </Button>\n            </CardActions>\n          </Card>\n        ))}\n    </Card>\n  );\n};\nexport default EntranceCard;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"defs\", {\n  id: \"defs2\"\n});\n\nfunction SvgHeightLimitSign(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"642mm\",\n    height: \"642mm\",\n    viewBox: \"0 0 642 642\",\n    id: \"svg8\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"layer1\",\n    transform: \"translate(0,345)\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    style: {\n      opacity: 1,\n      fill: \"#ffcd00\",\n      fillOpacity: 1,\n      fillRule: \"nonzero\",\n      stroke: \"none\",\n      strokeWidth: 25.76569176,\n      strokeLinecap: \"square\",\n      strokeLinejoin: \"round\",\n      strokeMiterlimit: 4,\n      strokeDasharray: \"none\",\n      strokeDashoffset: 0,\n      strokeOpacity: 1\n    },\n    id: \"path10\",\n    cx: 321,\n    cy: -24,\n    r: 320\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      opacity: 1,\n      fill: \"#000000\",\n      fillOpacity: 1,\n      fillRule: \"nonzero\",\n      stroke: \"none\",\n      strokeWidth: 50,\n      strokeLinecap: \"square\",\n      strokeLinejoin: \"round\",\n      strokeMiterlimit: 4,\n      strokeDasharray: \"none\",\n      strokeDashoffset: 0,\n      strokeOpacity: 1\n    },\n    d: \"m 440.99997,-294.00003 -120,120 -120.00001,-120 z\",\n    id: \"rect888\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"path902\",\n    d: \"m 200.99996,245.99997 120.00001,-120 120,120 z\",\n    style: {\n      opacity: 1,\n      fill: \"#000000\",\n      fillOpacity: 1,\n      fillRule: \"nonzero\",\n      stroke: \"none\",\n      strokeWidth: 50,\n      strokeLinecap: \"square\",\n      strokeLinejoin: \"round\",\n      strokeMiterlimit: 4,\n      strokeDasharray: \"none\",\n      strokeDashoffset: 0,\n      strokeOpacity: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"path913\",\n    d: \"M 321.00008,-273.9998 A 250,250 0 0 0 70.999862,-24.000087 250,250 0 0 0 321.00008,226.00016 250,250 0 0 0 570.99981,-24.000087 250,250 0 0 0 321.00008,-273.9998 Z m 0,9.9999 A 240,240 0 0 1 560.99991,-24.000087 240,240 0 0 1 321.00008,215.99976 240,240 0 0 1 80.999772,-24.000087 240,240 0 0 1 321.00008,-263.9999 Z\",\n    style: {\n      opacity: 1,\n      fill: \"#ffcd00\",\n      fillOpacity: 1,\n      fillRule: \"nonzero\",\n      stroke: \"none\",\n      strokeWidth: 20.12944603,\n      strokeLinecap: \"square\",\n      strokeLinejoin: \"round\",\n      strokeMiterlimit: 4,\n      strokeDasharray: \"none\",\n      strokeDashoffset: 0,\n      strokeOpacity: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      opacity: 1,\n      fill: \"#e4002b\",\n      fillOpacity: 1,\n      fillRule: \"nonzero\",\n      stroke: \"none\",\n      strokeWidth: 24.96051407,\n      strokeLinecap: \"square\",\n      strokeLinejoin: \"round\",\n      strokeMiterlimit: 4,\n      strokeDasharray: \"none\",\n      strokeDashoffset: 0,\n      strokeOpacity: 1\n    },\n    d: \"M 321.00008,-334.00028 A 309.99998,309.99998 0 0 0 10.999875,-24.000087 309.99998,309.99998 0 0 0 321.00008,286.00012 309.99998,309.99998 0 0 0 630.99977,-24.000087 309.99998,309.99998 0 0 0 321.00008,-334.00028 Z m 0,65.00018 A 245,245 0 0 1 566.00011,-24.000087 245,245 0 0 1 321.00008,220.99996 245,245 0 0 1 76.000072,-24.000087 245,245 0 0 1 321.00008,-269.0001 Z\",\n    id: \"path915\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgHeightLimitSign);\nexport default __webpack_public_path__ + \"static/media/HeightLimitSign.26c2e4cd.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport \"@fontsource/noto-sans/400.css\";\n\nimport AddCommentIcon from \"@material-ui/icons/AddComment\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport ExpandIcon from \"@material-ui/icons/ExpandLess\"; // https://material.io/components/sheets-bottom\nimport CollapseIcon from \"@material-ui/icons/ExpandMore\";\n\nimport { romanize } from \"romans\";\n\nimport type {\n  Feature,\n  FeatureCollection,\n  GeoJsonProperties,\n  Point,\n} from \"geojson\";\n\nimport {\n  NetworkState,\n  OlmapNote,\n  OlmapResponse,\n  OlmapUnloadingPlace,\n} from \"../olmap\";\n\nimport type { ElementWithCoordinates } from \"../overpass\";\n\nimport EntranceCard from \"./EntranceCard\";\nimport LocaleSelect from \"./LocaleSelect\";\n\nimport { ReactComponent as HeightLimitSign } from \"./HeightLimitSign.svg\";\n\ninterface VenueDialogProps {\n  open: boolean;\n  collapsed: boolean;\n  venue?: ElementWithCoordinates;\n  venueOlmapData?: NetworkState<OlmapResponse>;\n  restrictions?: FeatureCollection;\n  locale: string;\n  onClose: () => void;\n  onEntranceSelected: (entranceId: number) => void;\n  onUnloadingPlaceSelected: (unloadingPlace: OlmapUnloadingPlace) => void;\n  onCollapsingToggled: () => void;\n  onViewDetails: (note: OlmapNote) => void;\n  onRestrictionSelected: (element: Feature<Point>) => void;\n  onLocaleSelected: (locale: string) => void;\n}\n\nconst getHeightRestriction = (\n  tags: GeoJsonProperties\n): number | string | undefined => {\n  const restriction =\n    tags && (tags[\"maxheight\"] || tags[\"maxheight:physical\"] || tags[\"height\"]);\n  return restriction as number | string | undefined;\n};\n\nconst translatedText = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  record: any,\n  fieldName: string,\n  onLocaleSelected: (locale: string) => void\n) => {\n  return (\n    <>\n      {record[`${fieldName}_translated`] || record[fieldName]}\n      {record[`${fieldName}_translated`] &&\n        record[`${fieldName}_translated`] !== record[fieldName] && (\n          <span>\n            {\" \"}\n            {\n              // eslint-disable-next-line jsx-a11y/anchor-is-valid\n              <a\n                href=\"#\"\n                style={{\n                  display: \"inline\",\n                  color: \"#aaa\",\n                  background: \"none\",\n                  border: \"none\",\n                  textDecoration: \"none\",\n                }}\n                onClick={(event): void => {\n                  event.preventDefault();\n                  onLocaleSelected(\"\");\n                }}\n              >\n                Translated by Google. View original.\n              </a>\n            }\n          </span>\n        )}\n    </>\n  );\n};\n\nconst VenueDialog: React.FC<VenueDialogProps> = ({\n  open,\n  collapsed,\n  venue,\n  venueOlmapData,\n  restrictions,\n  locale,\n  onClose,\n  onEntranceSelected,\n  onUnloadingPlaceSelected,\n  onCollapsingToggled,\n  onViewDetails,\n  onRestrictionSelected,\n  onLocaleSelected,\n}) => {\n  if (!venue || !open) {\n    return null;\n  }\n\n  const workplace =\n    (venueOlmapData?.state === \"success\" &&\n      venueOlmapData.response.workplace) ||\n    undefined;\n  const workplaceEntrances = workplace?.workplace_entrances;\n\n  const restrictionFeatureMap = new Map<string, Feature>();\n  restrictions?.features\n    .filter((feature) => getHeightRestriction(feature.properties))\n    .forEach((restriction) => {\n      restrictionFeatureMap.set(restriction.properties?.[\"@id\"], restriction);\n    });\n  const restrictionFeatures = Array.from(restrictionFeatureMap.values());\n\n  return (\n    <Drawer\n      open={open}\n      anchor=\"bottom\"\n      variant=\"persistent\"\n      elevation={8}\n      PaperProps={{\n        style: {\n          maxHeight: \"45%\", // 50% of the height under the app bar\n          width: \"100%\",\n          maxWidth: \"600px\",\n          left: \"50%\",\n          transform: \"translateX(-50%)\",\n        },\n        elevation: 8, // Need to repeat Drawer's elevation here\n      }}\n    >\n      <DialogTitle>\n        {workplace && (\n          <IconButton\n            style={{\n              position: \"absolute\",\n              top: \"8px\",\n              left: \"8px\",\n            }}\n            onClick={() => onCollapsingToggled()}\n          >\n            {collapsed ? <ExpandIcon /> : <CollapseIcon />}\n          </IconButton>\n        )}\n        {venue && (\n          <IconButton\n            aria-label=\"Comment\"\n            href={`https://app.olmap.org/#/ww/osm/${venue.type}/${venue.id}`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            style={{\n              position: \"absolute\",\n              top: \"8px\",\n              left: \"48px\",\n            }}\n          >\n            <AddCommentIcon\n              style={{\n                color: \"#ff5000\",\n              }}\n            />\n          </IconButton>\n        )}\n        {workplace?.max_vehicle_height && (\n          <div\n            style={{\n              display: \"inline-block\",\n              position: \"relative\",\n              width: \"2em\",\n              height: \"2em\",\n              verticalAlign: \"middle\",\n              marginRight: \"0.5em\",\n            }}\n          >\n            <HeightLimitSign style={{ width: \"100%\", height: \"100%\" }} />\n            <div\n              style={{\n                position: \"absolute\",\n                top: 0,\n                left: 0,\n                width: \"100%\",\n                height: \"100%\",\n                fontSize: \"0.7em\",\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              {workplace.max_vehicle_height}\n            </div>\n          </div>\n        )}\n        {workplace?.as_osm_tags.name || venue.tags?.name || \"\"}\n        <IconButton\n          style={{\n            position: \"absolute\",\n            top: \"8px\",\n            right: \"8px\",\n          }}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      {workplace && (\n        <DialogContent\n          style={{\n            display: collapsed ? \"none\" : \"block\",\n            overflow: \"auto\",\n            textAlign: \"left\",\n            paddingTop: 0,\n          }}\n        >\n          <div style={{ float: \"right\" }}>\n            <LocaleSelect locale={locale} onLocaleSelected={onLocaleSelected} />\n          </div>\n          {restrictionFeatures.map((feature) => (\n            <button\n              key={feature.properties?.[\"@id\"]}\n              type=\"button\"\n              style={{\n                float: \"left\",\n                position: \"relative\",\n                width: \"2em\",\n                height: \"2em\",\n                border: \"none\",\n                background: \"none\",\n                padding: 0,\n              }}\n              onClick={() =>\n                feature.geometry.type === \"Point\" &&\n                onRestrictionSelected(feature as Feature<Point>)\n              }\n            >\n              <HeightLimitSign style={{ width: \"100%\", height: \"100%\" }} />\n              <div\n                style={{\n                  position: \"absolute\",\n                  top: 0,\n                  left: 0,\n                  width: \"100%\",\n                  height: \"100%\",\n                  fontSize: \"0.7em\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                }}\n              >\n                {getHeightRestriction(feature.properties)}\n              </div>\n            </button>\n          ))}\n          <Typography\n            variant=\"body2\"\n            color=\"textSecondary\"\n            component=\"p\"\n            style={{ paddingBottom: \"4px\" }}\n          >\n            {translatedText(\n              workplace,\n              \"delivery_instructions\",\n              onLocaleSelected\n            )}\n          </Typography>\n          <div style={{ clear: \"both\" }} />\n          {workplaceEntrances?.map((workplaceEntrance, index) => (\n            <EntranceCard\n              key={workplaceEntrance.id}\n              workplaceEntrance={workplaceEntrance}\n              workplace={workplace}\n              onEntranceSelected={onEntranceSelected}\n              onUnloadingPlaceSelected={onUnloadingPlaceSelected}\n              onViewDetails={onViewDetails}\n              label={romanize(index + 1)}\n              locale={locale}\n            />\n          ))}\n        </DialogContent>\n      )}\n    </Drawer>\n  );\n};\nexport default VenueDialog;\n","import React, {\n  useState,\n  useEffect,\n  useRef,\n  useCallback,\n  ReactText,\n} from \"react\";\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport type { match } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport AddCommentIcon from \"@material-ui/icons/AddComment\";\nimport { useSnackbar } from \"notistack\";\nimport MapGL, { Popup, Source, Layer, Marker } from \"@urbica/react-map-gl\";\nimport { WebMercatorViewport } from \"@math.gl/web-mercator\";\nimport turfDistance from \"@turf/distance\";\nimport turfBboxPolygon from \"@turf/bbox-polygon\";\nimport turfNearestPointOnLine from \"@turf/nearest-point-on-line\";\nimport { MapboxGeoJSONFeature } from \"mapbox-gl\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { Feature, FeatureCollection, Point, Position } from \"geojson\";\nimport { ReactAutosuggestGeocoder } from \"react-autosuggest-geocoder\";\n\nimport useWelcomeSeenFlag from \"./hooks/useWelcomeSeenFlag\";\n\nimport {\n  routeLayers,\n  buildingHighlightLayer,\n  allEntrancesLayers,\n  venueLayers,\n  parkingLayers,\n  tunnelLayers,\n  tunnelMaskLayers,\n} from \"./map-style\";\nimport Pin, { pinAsSVG } from \"./components/Pin\";\nimport { triangleAsSVG, triangleDotAsSVG } from \"./components/Triangle\";\nimport OLMapDialog from \"./components/OLMapDialog\";\nimport OLMapImages from \"./components/OLMapImages\";\nimport UserPosition from \"./components/UserPosition\";\nimport GeolocateControl from \"./components/GeolocateControl\";\nimport TunnelsControl from \"./components/TunnelsControl\";\nimport HelpControl from \"./components/HelpControl\";\nimport calculatePlan, { geometryToGeoJSON } from \"./planner\";\nimport {\n  queryNodesById,\n  queryElementCentersById,\n  queryEntrances,\n  queryMatchingStreet,\n  queryTunnels,\n  ElementWithCoordinates,\n  Tags,\n} from \"./overpass\";\nimport { addImageSVG, getMapSize } from \"./mapbox-utils\";\nimport routableTilesToGeoJSON from \"./RoutableTilesToGeoJSON\";\nimport { getVisibleTiles } from \"./minimal-xyz-viewer\";\nimport {\n  fetchOlmapData,\n  olmapNewNoteURL,\n  olmapNoteURL,\n  OlmapResponse,\n  NetworkState,\n  venueDataToGeoJSON,\n  OlmapUnloadingPlace,\n  venueDataToUnloadingPlaces,\n  venueDataToUnloadingPlaceEntrances,\n  olmapNoteToElement,\n} from \"./olmap\";\nimport { fromEpsg3879, toEpsg3879 } from \"./projections\";\nimport { filterBlacklistedParking } from \"./util/hardcoded-data\";\n\nimport \"./App.css\";\nimport \"./components/PinMarker.css\";\nimport VenueDialog from \"./components/VenueDialog\";\n\nconst maxRoutingDistance = 500; // in meters\n\n// XXX: WebMercatorViewportOptions only indirectly exported by @math.gl/web-mercator\n// XXX: TypeScript 4.3.5 confused if re-using an out-of-scope type name\ntype WebMercatorViewportOptions2 = NonNullable<\n  ConstructorParameters<typeof WebMercatorViewport>[0]\n>;\n\ntype LatLng = [number, number];\n\ntype ViewportState = Omit<WebMercatorViewportOptions2, \"width\" | \"height\">;\n\n// State is filled in phases: destination -> venue -> entrances\n// destination | venue -> entrances, venueOlmapData, venueFeatures\n// origin | entrances | unloadingPlace -> route\ninterface State {\n  viewport: ViewportState;\n  isOriginExplicit: boolean;\n  origin?: LatLng;\n  destination?: ElementWithCoordinates;\n  venue?: ElementWithCoordinates;\n  entrances?: Array<ElementWithCoordinates>;\n  route: FeatureCollection;\n  highlights?: MapboxGeoJSONFeature | FeatureCollection;\n  isGeolocating: boolean;\n  geolocationPosition: LatLng | null;\n  popupCoordinates: ElementWithCoordinates | null;\n  snackbar?: ReactText;\n  routableTiles: Map<string, FeatureCollection | null>;\n  olmapData?: NetworkState<OlmapResponse>;\n  editingNote?: number;\n  venueOlmapData?: NetworkState<OlmapResponse>;\n  venueDialogOpen: boolean;\n  venueDialogCollapsed: boolean;\n  venueFeatures: FeatureCollection;\n  unloadingPlace?: OlmapUnloadingPlace;\n  parkingData?: FeatureCollection;\n  tunnelData?: FeatureCollection;\n  viewportMaskFeature?: Feature;\n  showTunnels: boolean;\n  restrictions?: Array<ElementWithCoordinates>;\n  locale: string;\n  openHelp?: boolean;\n}\n\nconst latLngToElement = (latLng: LatLng): ElementWithCoordinates => ({\n  id: -1,\n  type: \"node\",\n  lat: latLng[0],\n  lon: latLng[1],\n});\n\nconst elementToLatLng = (element: ElementWithCoordinates): LatLng => [\n  element.lat,\n  element.lon,\n];\n\nconst geoJsonToElement = (feature: Feature<Point>): ElementWithCoordinates => {\n  const [id, type] = feature.properties?.[\"@id\"].split(\"/\").reverse();\n  const element = {\n    id: parseInt(id, 10),\n    type,\n    lat: feature.geometry.coordinates[1],\n    lon: feature.geometry.coordinates[0],\n    tags: feature.properties || undefined,\n  };\n  return element;\n};\n\nconst emptyFeatureCollection: FeatureCollection = {\n  type: \"FeatureCollection\",\n  features: [],\n};\n\nconst initialState: State = {\n  entrances: [],\n  route: geometryToGeoJSON(),\n  highlights: emptyFeatureCollection,\n  viewport: {\n    latitude: 60.17,\n    longitude: 24.941,\n    zoom: 15,\n    bearing: 0,\n    pitch: 0,\n  },\n  isOriginExplicit: false,\n  isGeolocating: false,\n  geolocationPosition: null,\n  popupCoordinates: null,\n  routableTiles: new Map(),\n  venueDialogOpen: false,\n  venueDialogCollapsed: false,\n  venueFeatures: emptyFeatureCollection,\n  showTunnels: false,\n  locale: \"\", // Original texts untranslated\n};\n\nconst metropolitanAreaCenter = [60.17066815612902, 24.941510260105133];\n\nconst transformRequest = (originalURL: string): { url: string } => {\n  const url = originalURL.replace(\n    \"https://static.hsldev.com/mapfonts/Klokantech Noto Sans\",\n    \"https://fonts.openmaptiles.org/Klokantech Noto Sans\"\n  );\n  return { url };\n};\n\nconst distance = (from: LatLng, to: LatLng): number =>\n  turfDistance([from[1], from[0]], [to[1], to[0]], { units: \"meters\" });\n\nconst parseLatLng = (text: string | undefined): LatLng | undefined => {\n  if (text) {\n    const parts = text.split(\",\");\n    if (parts.length === 2 && parts[0].length && parts[1].length) {\n      const [lat, lon] = parts.map(Number);\n      if (!Number.isNaN(lat) && lon > -90 && lon < 90) {\n        return [lat, lon];\n      }\n    }\n  }\n  return undefined;\n};\n\nconst fitBounds = (\n  viewportOptions: WebMercatorViewportOptions2,\n  latLngs: Array<LatLng | undefined>,\n  occludedBottomProportion = 0\n): WebMercatorViewportOptions2 => {\n  const viewport = new WebMercatorViewport(viewportOptions);\n  const inputs = latLngs.filter((x) => x) as Array<LatLng>;\n  if (!inputs.length) return viewportOptions; // Nothing to do\n  const minLng = Math.min(...inputs.map((x) => x[1]));\n  const maxLng = Math.max(...inputs.map((x) => x[1]));\n  const minLat = Math.min(...inputs.map((x) => x[0]));\n  const maxLat = Math.max(...inputs.map((x) => x[0]));\n  const padding = 20;\n  const markerSize = 50;\n  const occludedTop = 40;\n  const occludedBottom = occludedBottomProportion * viewportOptions.height;\n  const circleRadius = 5;\n  const result = viewport.fitBounds(\n    [\n      [minLng, minLat],\n      [maxLng, maxLat],\n    ],\n    {\n      padding: {\n        top: padding + occludedTop + markerSize,\n        bottom: padding + occludedBottom + circleRadius,\n        left: padding + markerSize / 2,\n        right: padding + markerSize / 2,\n      },\n      // Math in viewport.fitBounds breaks if both padding and maxZoom are set\n      maxZoom: occludedBottomProportion ? undefined : 17,\n    }\n  );\n  return result;\n};\n\nconst App: React.FC = () => {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const map = useRef<any>(null);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const geocoder = useRef<any>(null);\n\n  // Install a callback to dynamically create pin icons that our map styles use\n  useEffect(() => {\n    if (!map.current) {\n      return; // No map yet, so nothing to do\n    }\n    const mapboxgl = map.current.getMap();\n    // FIXME: Unclear why this passed type checking before.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    mapboxgl?.on(\"styleimagemissing\", ({ id: iconId }: any) => {\n      if (!iconId?.startsWith(\"icon-svg-\")) {\n        return; // We only know how to generate certain svg icons\n      }\n      const [, , shape, size, fill, stroke] = iconId.split(\"-\"); // e.g. icon-pin-48-green-#fff\n      let renderSVG;\n      if (shape === \"pin\") {\n        renderSVG = pinAsSVG;\n      } else if (shape === \"triangle\") {\n        renderSVG = triangleAsSVG;\n      } else if (shape === \"triangleDot\") {\n        renderSVG = triangleDotAsSVG;\n      } else {\n        return; // Unknown shape\n      }\n      const svgData = renderSVG(size, `fill: ${fill}; stroke: ${stroke}`);\n      addImageSVG(mapboxgl, iconId, svgData, size);\n    });\n  }, [map]);\n\n  const urlMatch = useRouteMatch({\n    path: \"/route/:from?/:to?\",\n  }) as match<{ from: string; to: string }>;\n\n  const urlMatchSearch = useRouteMatch({\n    path: \"/search/:query?\",\n  }) as match<{ query: string }>;\n\n  const urlMatchOsm = useRouteMatch({\n    path: \"/osm/:type?/:id?\",\n  }) as match<{ type: string; id: string }>;\n\n  const urlMatchOlmap = useRouteMatch({\n    path: \"/olmap/workplace/:id?\",\n  }) as match<{ id: string }>;\n\n  const [state, setState] = useState(initialState);\n\n  const [welcomeSeenFlag] = useWelcomeSeenFlag();\n\n  const fitMap = (\n    viewportOptions: ViewportState,\n    latLngs: Array<LatLng | undefined>,\n    occludedBottomProportion?: number\n  ): WebMercatorViewportOptions2 => {\n    return fitBounds(\n      { ...viewportOptions, ...getMapSize(map.current?.getMap()) },\n      latLngs,\n      occludedBottomProportion\n    );\n  };\n\n  useEffect(() => {\n    if (!map.current || !state.viewport.zoom) {\n      return; // Nothing to do yet\n    }\n    if (state.viewport.zoom < 12) return; // minzoom\n\n    const { width: mapWidth, height: mapHeight } = getMapSize(\n      map.current.getMap()\n    );\n\n    // Calculate multiplier for under- or over-zoom\n    const tilesetZoomLevel = 14;\n    const zoomOffset = 1; // tiles are 512px (double the standard size)\n    const zoomMultiplier =\n      2 ** (tilesetZoomLevel - zoomOffset - state.viewport.zoom);\n\n    const visibleTiles = getVisibleTiles(\n      zoomMultiplier * mapWidth,\n      zoomMultiplier * mapHeight,\n      [state.viewport.longitude, state.viewport.latitude],\n      tilesetZoomLevel\n    );\n\n    // Initialise the new Map with nulls and available tiles from previous\n    const routableTiles = new Map();\n    visibleTiles.forEach(({ zoom, x, y }) => {\n      const key = `${zoom}/${x}/${y}`;\n      routableTiles.set(key, state.routableTiles.get(key) || null);\n    });\n\n    setState((prevState: State): State => {\n      return {\n        ...prevState,\n        routableTiles,\n      };\n    });\n\n    visibleTiles.map(async ({ zoom, x, y }) => {\n      const key = `${zoom}/${x}/${y}`;\n      if (routableTiles.get(key) !== null) return; // We already have the tile\n      // Fetch the tile\n      const response = await fetch(\n        `https://tile.olmap.org/building-tiles/${zoom}/${x}/${y}`\n      );\n      const body = await response.json();\n      // Convert the tile to GeoJSON\n      const geoJSON = routableTilesToGeoJSON(body) as FeatureCollection;\n      // Add the tile if still needed based on latest state\n      setState((prevState: State): State => {\n        if (prevState.routableTiles.get(key) !== null) {\n          return prevState; // This tile is not needed anymore\n        }\n        const newRoutableTiles = new Map(prevState.routableTiles);\n        newRoutableTiles.set(key, geoJSON);\n        return {\n          ...prevState,\n          routableTiles: newRoutableTiles,\n        };\n      });\n    });\n  }, [map.current, state.viewport]); // eslint-disable-line react-hooks/exhaustive-deps\n  // XXX: state.routableTiles is missing above as we only use it as a cache here\n\n  // Fetch new data for the parking layer when viewport changes\n  useEffect(() => {\n    (async () => {\n      if (!map.current || !state.viewport.zoom) {\n        return; // Nothing to do yet\n      }\n      if (state.viewport.zoom < 12) return; // minzoom\n\n      const fetchGeoJSON = async (\n        layername: string,\n        bbox: string,\n        ibbox: string\n      ): Promise<FeatureCollection> => {\n        const response = await fetch(\n          \"https://api.olmap.org/kartta.hel.fi/maps/featureloader.ashx\",\n          {\n            method: \"POST\",\n            body: new URLSearchParams({\n              request: \"select\",\n              id: layername,\n              resolution: \"1\",\n              params: \"{}\",\n              where: `BBOX 'ENVELOPE(${ibbox})'`,\n              sort: \"\",\n              gproj: \"\",\n              aproj: \"\",\n              maxfeatures: \"50000\",\n              skipfeatures: \"\",\n              ibbox,\n              capfeatures: \"1\",\n              outputType: \"geojson\",\n              srs: \"EPSG:3879\",\n            }),\n          }\n        );\n        const data = (await response.json()) as FeatureCollection;\n        return data;\n      };\n\n      const bounds = map.current.getMap().getBounds();\n      const bbox = `${bounds.getWest()},${bounds.getSouth()},${bounds.getEast()},${bounds.getNorth()}`;\n      const southWest = toEpsg3879([bounds.getWest(), bounds.getSouth()]);\n      const northEast = toEpsg3879([bounds.getEast(), bounds.getNorth()]);\n      const ibbox = `${Math.floor(southWest[0])},${Math.floor(\n        southWest[1]\n      )},${Math.floor(northEast[0])},${Math.floor(northEast[1])}`;\n      const layernames = [\n        \"pysakointipaikat_kuormauspaikat\",\n        \"pysakointipaikat_pysakointikielto\",\n        \"pysakointipaikat_sallitut_kiellon_ulkopuolella\",\n      ];\n      const layers = await Promise.all(\n        layernames.map((layername) => fetchGeoJSON(layername, bbox, ibbox))\n      );\n      const features = emptyFeatureCollection.features.concat(\n        ...layers.map((layer) => layer.features)\n      );\n      const filteredFeatures = filterBlacklistedParking(features);\n      const projectedFeatures = filteredFeatures.map((feature) => {\n        if (feature.geometry.type === \"Point\") {\n          return {\n            ...feature,\n            geometry: {\n              ...feature.geometry,\n              coordinates: fromEpsg3879(feature.geometry.coordinates),\n            },\n          };\n        }\n        if (feature.geometry.type === \"Polygon\") {\n          return {\n            ...feature,\n            geometry: {\n              ...feature.geometry,\n              coordinates: feature.geometry.coordinates.map(\n                (ring: Position[]): Position[] =>\n                  ring.map(\n                    (position: Position): Position => fromEpsg3879(position)\n                  )\n              ),\n            },\n          };\n        }\n        return feature; // XXX other geometry types not projected\n      });\n      const parkingData = {\n        type: \"FeatureCollection\",\n        features: projectedFeatures,\n      } as FeatureCollection;\n\n      setState((prevState) => ({\n        ...prevState,\n        parkingData,\n      }));\n    })().catch((error) => {\n      // eslint-disable-next-line no-console\n      console.error(\"Error while fetching parking data:\", error);\n    });\n  }, [map.current, state.viewport]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Fetch new data for the tunnel layer when viewport changes\n  useEffect(() => {\n    (async () => {\n      if (!map.current || !state.viewport.zoom) {\n        return; // Nothing to do yet\n      }\n      if (state.viewport.zoom < 12) return; // minzoom\n      if (!state.showTunnels) return;\n\n      const bounds = map.current.getMap().getBounds();\n      const bbox = `${bounds.getWest()},${bounds.getSouth()},${bounds.getEast()},${bounds.getNorth()}`;\n      const tunnelData = await queryTunnels(bbox);\n      setState((prevState) => ({\n        ...prevState,\n        tunnelData,\n      }));\n    })().catch((error) => {\n      // eslint-disable-next-line no-console\n      console.error(\"Error while fetching tunnel data:\", error);\n    });\n  }, [map.current, state.viewport, state.showTunnels]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Create a \"mask\" layer and update it when viewport changes\n  useEffect(() => {\n    const bounds = map.current?.getMap().getBounds();\n    setState(\n      (prevState): State => ({\n        ...prevState,\n        viewportMaskFeature: turfBboxPolygon([\n          bounds.getWest(),\n          bounds.getSouth(),\n          bounds.getEast(),\n          bounds.getNorth(),\n        ]),\n      })\n    );\n  }, [state.viewport]);\n\n  useEffect(() => {\n    /**\n     * FIXME: urbica/react-map-gl does not expose fitBounds and state does not\n     * include viewport width and height which are required by fitBounds from\n     * @math.gl/web-mercator. This is dirty but seems to work.\n     */\n    if (!map.current) {\n      return; // No map yet, so nothing to do\n    }\n    const { width, height } = getMapSize(map.current.getMap());\n    if (\n      urlMatch &&\n      width != null &&\n      width > 0 &&\n      height != null &&\n      height > 0\n    ) {\n      const origin = parseLatLng(urlMatch.params.from);\n      const destination = parseLatLng(urlMatch.params.to);\n      const viewportOptions = { ...state.viewport, width, height };\n      const viewport = fitBounds(viewportOptions, [origin, destination]);\n      setState(\n        (prevState): State => ({\n          ...prevState,\n          origin,\n          isOriginExplicit: origin != null,\n          destination: destination && latLngToElement(destination),\n          viewport: { ...prevState.viewport, ...viewport },\n        })\n      );\n    }\n  }, [map]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const history = useHistory();\n\n  const snackbarFunctions = useSnackbar();\n  // XXX: useSnackbar does not return functions during unit tests\n  const enqueueSnackbar = snackbarFunctions?.enqueueSnackbar;\n  const closeSnackbar = snackbarFunctions?.closeSnackbar;\n\n  // If we start at front page, open the help modal if it hasn't been seen\n  useEffect(() => {\n    if (history.location.pathname === \"/\" && !welcomeSeenFlag.welcomeSeen) {\n      setState(\n        (prevState): State => ({\n          ...prevState,\n          openHelp: true,\n        })\n      );\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps -- run this effect only once at start\n\n  useEffect(() => {\n    const destination = state.destination && [\n      state.destination.lat,\n      state.destination.lon,\n    ];\n    const path = `/route/${state.origin}/${destination}/`;\n    if (history.location.pathname !== path) {\n      let newLocation = path;\n      // Keep utm_source if any in the query parameters\n      if (/utm_source=/.exec(history.location.search)) {\n        const params = new URLSearchParams(history.location.search);\n        const utmSource = params.get(\"utm_source\");\n        if (utmSource !== null) {\n          const newSearch = new URLSearchParams({ utm_source: utmSource });\n          newLocation = `${path}?${newSearch}`;\n        }\n      }\n      history.replace(newLocation);\n    }\n  }, [history, state.origin, state.destination]);\n\n  // Fetch entrance information whenever destination changes\n  useEffect(() => {\n    (async () => {\n      if (!state.destination) return; // Nothing to do yet\n\n      let result = [] as ElementWithCoordinates[];\n      let { venueOlmapData, venueFeatures } = state; // By default, keep the previous data\n\n      // If state.entrances already has our destination, copy instead of fetching\n      if (\n        state.destination.id !== -1 &&\n        state.entrances?.find(\n          (entrance) => entrance.id === state.destination?.id\n        )\n      ) {\n        result = state.entrances.slice();\n      }\n\n      try {\n        if (\n          state.destination.id === state.venue?.id &&\n          venueOlmapData?.state === \"success\" &&\n          venueOlmapData.response.workplace?.osm_feature ===\n            state.destination.id\n        ) {\n          result = venueFeatures.features.map((feature) =>\n            geoJsonToElement(feature as Feature<Point>)\n          );\n          // FIXME: If state already had the same entrances, no need to re-set\n        } else if (state.destination.id === state.venue?.id) {\n          venueOlmapData = await fetchOlmapData(\n            state.venue.type,\n            state.venue.id,\n            state.locale\n          );\n\n          venueFeatures = emptyFeatureCollection;\n          if (venueOlmapData?.state === \"success\") {\n            const workplaceEntrances =\n              venueOlmapData.response.workplace?.workplace_entrances;\n            const entranceIds: Array<number> | undefined =\n              workplaceEntrances?.map(\n                (workplaceEntrance) =>\n                  workplaceEntrance.entrance_data.osm_feature || 0\n              );\n            result = await queryNodesById(entranceIds || []);\n            if (venueOlmapData.response.workplace?.workplace_entrances) {\n              const osmEntrancesInOrder = [] as Array<ElementWithCoordinates>;\n              workplaceEntrances?.forEach((workplaceEntrance) => {\n                const osmEntrance = result.find(\n                  (node) =>\n                    node.id === workplaceEntrance.entrance_data.osm_feature\n                );\n                if (osmEntrance) {\n                  osmEntrancesInOrder.push(osmEntrance);\n                } else {\n                  osmEntrancesInOrder.push({\n                    lat: Number(workplaceEntrance.image_note.lat),\n                    lon: Number(workplaceEntrance.image_note.lon),\n                    id: workplaceEntrance.image_note.id,\n                    type: \"olmap\",\n                    tags: workplaceEntrance.entrance_data.as_osm_tags,\n                  });\n                }\n              });\n              venueFeatures = venueDataToGeoJSON(\n                venueOlmapData,\n                osmEntrancesInOrder\n              );\n              result = osmEntrancesInOrder;\n            }\n          }\n        }\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        console.error(\"Error while fetching venue entrances:\", error);\n        // Proceed as if there was no entrance data\n      }\n\n      try {\n        if (!result.length) {\n          result = await queryEntrances(state.destination);\n        }\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        console.error(\"Error while fetching building entrances:\", error);\n        // Proceed as if there was no entrance data\n      }\n\n      setState((prevState): State => {\n        if (!state.destination) return prevState; // XXX Typescript needs this\n        if (prevState.destination !== state.destination) {\n          return prevState;\n        }\n        const entrances = result.length ? result : [state.destination];\n\n        return {\n          ...prevState,\n          entrances,\n          venueOlmapData,\n          venueFeatures,\n        };\n      });\n    })().catch((error) => {\n      // eslint-disable-next-line no-console\n      console.error(\"Error while handling entrances:\", error);\n    });\n  }, [state.destination, state.venue]); // eslint-disable-line react-hooks/exhaustive-deps -- state.venueOlmapData does not affect effect\n\n  // Set off routing calculation when inputs change; collect results in state.route\n  useEffect(() => {\n    (async () => {\n      if (state.snackbar) closeSnackbar(state.snackbar);\n\n      if (!state.destination || !state.entrances) {\n        return; // Nothing to do yet\n      }\n      let { origin } = state;\n      let targets = [] as Array<ElementWithCoordinates>;\n\n      // Try to find the destination among the entrances\n      state.entrances.forEach((entrance) => {\n        if (!state.destination) return; // XXX: Typescript needs this\n        if (\n          state.destination.type === entrance.type &&\n          state.destination.id === entrance.id\n        ) {\n          targets = [entrance];\n        }\n      });\n\n      // If the destination entrance wasn't found, route to all entrances\n      if (!targets.length) {\n        targets = state.entrances;\n      }\n\n      // Clear previous routing results by setting an empty result set\n      setState(\n        (prevState): State => ({\n          ...prevState,\n          route: geometryToGeoJSON(),\n        })\n      );\n\n      let venueUnloadingPlaces = [] as Array<OlmapUnloadingPlace>;\n      if (state.destination.id === state.venue?.id) {\n        venueUnloadingPlaces = venueDataToUnloadingPlaces(state.venueOlmapData);\n      }\n      // The explicitly chosen destination entrance of a venue, if any\n      const workplaceEntrance =\n        (state.venueOlmapData?.state === \"success\" &&\n          state.venueOlmapData.response.workplace?.workplace_entrances.find(\n            (aWorkplaceEntrance) =>\n              aWorkplaceEntrance.entrance_data.osm_feature ===\n                state.destination?.id ||\n              aWorkplaceEntrance.image_note.id === state.destination?.id\n          )) ||\n        undefined;\n\n      // Try to find an intermediary point (or multiple ones) on the street near the destination\n      if (workplaceEntrance && workplaceEntrance.unloading_places.length) {\n        // Routing to a venue feature with known unloading places\n        venueUnloadingPlaces = workplaceEntrance.unloading_places;\n      } else if (venueUnloadingPlaces.length) {\n        if (state.unloadingPlace) {\n          const preferredUnloadingPlace = venueUnloadingPlaces.find(\n            (venueUnloadingPlace) =>\n              venueUnloadingPlace.id === state.unloadingPlace?.id\n          );\n          if (preferredUnloadingPlace) {\n            venueUnloadingPlaces = [preferredUnloadingPlace];\n          }\n        }\n      } else if (\n        !state.origin ||\n        distance(state.origin, elementToLatLng(state.destination)) >=\n          maxRoutingDistance\n      ) {\n        let target;\n        let streetName;\n        if (state.destination.tags?.[\"addr:street\"]) {\n          target = state.destination;\n          streetName = state.destination.tags?.[\"addr:street\"];\n        } else {\n          [target] = targets; // Pick a random entrance\n          streetName = target.tags?.[\"addr:street\"];\n        }\n        if (streetName) {\n          const streetGeometry = await queryMatchingStreet(target, streetName);\n          const point = turfNearestPointOnLine(streetGeometry, [\n            target.lon,\n            target.lat,\n          ]).geometry.coordinates;\n          origin = [point[1], point[0]];\n        }\n      }\n\n      // Don't calculate routes if there was no origin and none was found either\n      if (!origin && !venueUnloadingPlaces.length) {\n        return;\n      }\n\n      // If the distance is still more than 200 meters apart\n      // Show an error and proposed actions\n      if (\n        !venueUnloadingPlaces.length &&\n        origin &&\n        origin === state.origin &&\n        distance(origin, elementToLatLng(state.destination)) >=\n          maxRoutingDistance\n      ) {\n        const message = state.isOriginExplicit\n          ? \"Origin is too far for showing routes.\"\n          : \"Routes show when distance is shorter.\";\n        const snackbar = enqueueSnackbar(message, {\n          variant: \"info\",\n          persist: true,\n          anchorOrigin: {\n            vertical: \"bottom\",\n            horizontal: \"center\",\n          },\n          action: (\n            <>\n              {state.isOriginExplicit && (\n                <Button\n                  color=\"inherit\"\n                  onClick={(): void => {\n                    setState(\n                      (prevState): State => ({\n                        ...prevState,\n                        origin: prevState.geolocationPosition || undefined,\n                        isOriginExplicit: false,\n                        viewport: fitMap(prevState.viewport, [\n                          prevState.destination &&\n                            elementToLatLng(prevState.destination),\n                        ]),\n                      })\n                    );\n                  }}\n                >\n                  Undo origin\n                </Button>\n              )}\n              <Button\n                color=\"inherit\"\n                onClick={(): void => {\n                  setState(\n                    (prevState): State => ({\n                      ...prevState,\n                      destination: undefined,\n                      entrances: [],\n                      viewport: fitMap(prevState.viewport, [prevState.origin]),\n                    })\n                  );\n                }}\n              >\n                Undo destination\n              </Button>\n              <Button\n                color=\"inherit\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href={`https://www.google.com/maps/dir/?api=1&origin=${state.origin[0]},${state.origin[1]}&destination=${state.destination.lat},${state.destination.lon}&travelmode=driving`}\n              >\n                Google Maps\n              </Button>\n\n              <IconButton\n                aria-label=\"close\"\n                onClick={(): void => closeSnackbar(snackbar)}\n              >\n                <CloseIcon />\n              </IconButton>\n            </>\n          ),\n        });\n        setState((prevState): State => ({ ...prevState, snackbar }));\n        return; // Don't calculate routes until the inputs change\n      }\n\n      const queries = [] as Array<\n        [ElementWithCoordinates, ElementWithCoordinates, string?]\n      >;\n      if (venueUnloadingPlaces.length) {\n        // If the destination is the whole venue, route to all entrances of venueUnloadingPlaces\n        if (state.destination.id === state.venue?.id) {\n          const unloadingPlaceEntrances = venueDataToUnloadingPlaceEntrances(\n            state.venueOlmapData\n          );\n          venueUnloadingPlaces.forEach((venueOrigin) => {\n            unloadingPlaceEntrances[venueOrigin.id].forEach((target) => {\n              const targetEntrance = state.entrances?.find(\n                (entrance) => entrance.id === target\n              );\n              // Walking route query from the unloading place to the entrance\n              // Skip if the entrance is only in OLMap and missing from OSM\n              if (targetEntrance && targetEntrance.type !== \"olmap\") {\n                queries.push([\n                  olmapNoteToElement(venueOrigin.image_note),\n                  targetEntrance,\n                  \"delivery-walking\",\n                ]);\n              }\n              // Car route query from access points to unloading place\n              venueOrigin.access_points?.forEach((access_point) => {\n                queries.push([\n                  latLngToElement([\n                    Number(access_point.lat),\n                    Number(access_point.lon),\n                  ]),\n                  {\n                    ...olmapNoteToElement(venueOrigin.image_note),\n                    lat: Number(venueOrigin.image_note.lat) + 0.000001,\n                    lon: Number(venueOrigin.image_note.lon) + 0.000001,\n                  },\n                  \"delivery-car\",\n                ]);\n              });\n            });\n          });\n        } else {\n          // The destination is a specific entrance of the venue\n          workplaceEntrance?.unloading_places?.forEach((venueOrigin) => {\n            // Walking route query from the unloading place to the entrance\n            // Skip if the entrance is only in OLMap and missing from OSM\n            if (state.destination && state.destination.type !== \"olmap\") {\n              queries.push([\n                olmapNoteToElement(venueOrigin.image_note),\n                state.destination,\n                \"delivery-walking\",\n              ]);\n            }\n            // Car route query from access points to unloading place\n            venueOrigin.access_points?.forEach((access_point) => {\n              queries.push([\n                latLngToElement([\n                  Number(access_point.lat),\n                  Number(access_point.lon),\n                ]),\n                {\n                  ...olmapNoteToElement(venueOrigin.image_note),\n                  lat: Number(venueOrigin.image_note.lat) + 0.000001,\n                  lon: Number(venueOrigin.image_note.lon) + 0.000001,\n                },\n                \"delivery-car\",\n              ]);\n            });\n          });\n        }\n      } else {\n        targets.forEach((target) => {\n          if (!origin) return; // Needed to convince Typescript\n          queries.push([latLngToElement(origin), target]);\n        });\n      }\n\n      await calculatePlan(queries, (geojson) => {\n        setState((prevState): State => {\n          // don't use the result if the parameters changed meanwhile\n          if (\n            state.origin !== prevState.origin ||\n            state.entrances !== prevState.entrances ||\n            state.destination !== prevState.destination\n          ) {\n            return prevState;\n          }\n          const extendedGeojson = {\n            ...geojson,\n            features: geojson.features.concat(prevState.route.features),\n          };\n          // Check if the route goes through some underground tunnels (not building passages)\n          const tunnels = geojson.features.find((feature) => {\n            const tunnel = feature.properties?.tunnel;\n            const layer = feature.properties?.layer;\n            return tunnel && Number(layer) < 0;\n          });\n          return {\n            ...prevState,\n            route: extendedGeojson,\n            showTunnels: prevState.showTunnels || !!tunnels,\n          };\n        });\n      });\n    })().catch((error) => {\n      // eslint-disable-next-line no-console\n      console.error(\"Error while starting route planning:\", error);\n    });\n  }, [state.origin, state.entrances, state.unloadingPlace]); // eslint-disable-line react-hooks/exhaustive-deps\n  // XXX: state.destination is missing above as we need to wait for state.entrances to change as well\n\n  // When popup opens, try to fetch data for it from OLMap's API\n  useEffect(() => {\n    (async () => {\n      if (!state.popupCoordinates) return;\n      // Clear previous data\n      setState((prevState: State): State => {\n        if (prevState.popupCoordinates !== state.popupCoordinates) {\n          return prevState;\n        }\n        return {\n          ...prevState,\n          olmapData: { state: \"loading\" },\n        };\n      });\n      // Fetch new data\n      const olmapData = await fetchOlmapData(\n        state.popupCoordinates.type,\n        state.popupCoordinates.id,\n        state.locale\n      );\n      setState((prevState: State): State => {\n        if (prevState.popupCoordinates !== state.popupCoordinates) {\n          return prevState;\n        }\n        return {\n          ...prevState,\n          olmapData,\n        };\n      });\n    })().catch((error) => {\n      // eslint-disable-next-line no-console\n      console.error(\"Error while fetching OLMap notes:\", error);\n    });\n  }, [state.popupCoordinates, state.locale]);\n\n  // When we receive OLMap data for a venue and the dialog opens, zoom the map to fit\n  useEffect(() => {\n    if (\n      state.venueOlmapData?.state === \"success\" &&\n      state.venueOlmapData.response.workplace\n    ) {\n      setState((prevState): State => {\n        const destinationLatLng =\n          state.destination && elementToLatLng(state.destination);\n        const routingMarkers =\n          prevState.origin &&\n          destinationLatLng &&\n          distance(prevState.origin, destinationLatLng) < maxRoutingDistance\n            ? [prevState.origin, destinationLatLng]\n            : [destinationLatLng];\n        const entranceMarkers = state.entrances?.map(elementToLatLng) || [];\n        const venueMarker =\n          (state.venue && [elementToLatLng(state.venue)]) || [];\n        const unloadingPlaces = venueDataToUnloadingPlaces(\n          state.venueOlmapData\n        );\n        const unloadingPlaceMarkers = unloadingPlaces.map(\n          (unloadingPlace) =>\n            [\n              Number(unloadingPlace.image_note.lat),\n              Number(unloadingPlace.image_note.lon),\n            ] as LatLng\n        );\n        const accessPointMarkers = [] as Array<LatLng>;\n        unloadingPlaces.forEach((unloadingPlace) =>\n          unloadingPlace.access_points?.forEach((access_point) => {\n            accessPointMarkers.push([\n              Number(access_point.lat),\n              Number(access_point.lon),\n            ]);\n          })\n        );\n        const viewport = fitMap(\n          prevState.viewport,\n          [\n            ...routingMarkers,\n            ...entranceMarkers,\n            ...venueMarker,\n            ...unloadingPlaceMarkers,\n            ...accessPointMarkers,\n          ],\n          0.5\n        );\n        return {\n          ...prevState,\n          viewport,\n        };\n      });\n    }\n  }, [state.venueOlmapData]); // eslint-disable-line react-hooks/exhaustive-deps -- trigger only on new venue data\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const handleMapClick = (event: any): void => {\n    // Inspect the topmost feature under click\n    const feature = map.current\n      ?.getMap()\n      .queryRenderedFeatures(event.point)\n      .find(\n        (candidate: MapboxGeoJSONFeature) => candidate.source !== \"viewport\"\n      );\n    setState((prevState): State => {\n      // Typing needed as the compiler is not smart enough.\n      const noHighlights: FeatureCollection = {\n        type: \"FeatureCollection\",\n        features: [],\n      };\n      const clickCoordinates = latLngToElement([\n        event.lngLat.lat,\n        event.lngLat.lng,\n      ]);\n\n      // If parking restriction was clicked, show details in the popup.\n      if (feature?.source === \"parking\") {\n        const tags = {} as Record<string, string>;\n\n        if (\n          feature.properties[\"hel:luokka_nimi\"] ===\n          \"Pysäköinti sallittu pysäköintikieltoajan ulkopuolella\"\n        ) {\n          tags[\"Pysäköintikielto\"] =\n            feature.properties[\"hel:voimassaolo\"] || \"\";\n        } else {\n          tags[feature.properties[\"hel:tyyppi\"]] = \"\";\n        }\n\n        if (feature.properties[\"hel:paikat_ala\"]) {\n          tags[\"Henkilöautoja\"] = feature.properties[\"hel:paikat_ala\"];\n        }\n\n        tags[\"ID\"] = feature.properties[\"hel:id\"];\n\n        return {\n          ...prevState,\n          popupCoordinates: {\n            type: \"node\",\n            id: -1,\n            lat: event.lngLat.lat,\n            lon: event.lngLat.lng,\n            tags: tags as Tags,\n          },\n          highlights: noHighlights,\n        };\n      }\n      // If an OLMap element was clicked, show details in the popup.\n      if (feature?.properties[\"@id\"]?.startsWith(\"olmap\")) {\n        return {\n          ...prevState,\n          editingNote: feature.properties[\"@id\"].split(\"/\").reverse()[0],\n        };\n      }\n      // If an entrance or a loading place was clicked, show details in the popup.\n      if (\n        feature?.properties.entrance ||\n        feature?.properties[\"parking:condition\"] === \"loading\"\n      ) {\n        const element = geoJsonToElement(feature);\n        return {\n          ...prevState,\n          popupCoordinates: element,\n          highlights: noHighlights,\n        };\n      }\n      // If a barrier or steps were clicked, show details in the popup.\n      if (\n        feature?.properties.barrier ||\n        feature?.properties.highway === \"steps\" ||\n        feature?.properties[\"@obstacle\"]\n      ) {\n        const id = feature.properties[\"@id\"].split(\"/\").reverse()[0];\n        const [lon, lat] =\n          feature.geometry.type === \"Point\"\n            ? feature.geometry.coordinates\n            : turfNearestPointOnLine(feature, event.lngLat.toArray()).geometry\n                .coordinates;\n        return {\n          ...prevState,\n          popupCoordinates: {\n            id,\n            type: feature.properties[\"@type\"],\n            lat,\n            lon,\n            tags: feature.properties,\n          },\n          highlights: noHighlights,\n        };\n      }\n      // If the popup is open, close it.\n      if (prevState.popupCoordinates != null) {\n        return {\n          ...prevState,\n          popupCoordinates: null,\n          highlights: noHighlights,\n        };\n      }\n      // If a building was clicked, highlight it.\n      if (feature?.sourceLayer === \"building\") {\n        return {\n          ...prevState,\n          popupCoordinates: clickCoordinates,\n          highlights: feature.toJSON(),\n        };\n      }\n      // Otherwise open a plain popup.\n      return {\n        ...prevState,\n        popupCoordinates: clickCoordinates,\n        highlights: noHighlights,\n      };\n    });\n  };\n\n  const getOlmapId = (\n    olmapData?: NetworkState<OlmapResponse>\n  ): number | false =>\n    olmapData?.state === \"success\" && olmapData.response.image_notes?.[0]?.id;\n\n  const setEditingNote = (event: React.MouseEvent<HTMLElement>): void => {\n    const noteId = getOlmapId(state.olmapData);\n    if (noteId) {\n      setState(\n        (prevState): State => ({\n          ...prevState,\n          editingNote: noteId,\n        })\n      );\n      event.preventDefault();\n    }\n  };\n\n  const getOlmapUrl = (\n    popupCoordinates: ElementWithCoordinates,\n    olmapData?: NetworkState<OlmapResponse>\n  ): string | null => {\n    if (olmapData?.state === \"loading\") {\n      return null;\n    }\n    const noteId = getOlmapId(olmapData);\n    if (!noteId) {\n      return olmapNewNoteURL(popupCoordinates);\n    }\n    return olmapNoteURL(noteId);\n  };\n\n  /**\n   * Two tasks:\n   * - update geolocation position into state\n   * - change origin if deemed appropriate\n   */\n  const onGeolocate = (position: GeolocationPosition): void =>\n    setState((prevState): State => {\n      if (prevState.isGeolocating) {\n        const isFirstPosition = prevState.geolocationPosition == null;\n        const geolocationPosition: LatLng = [\n          position.coords.latitude,\n          position.coords.longitude,\n        ];\n        const viewport =\n          isFirstPosition &&\n          !prevState.isOriginExplicit &&\n          !(\n            prevState.venue &&\n            prevState.destination &&\n            distance(\n              geolocationPosition,\n              elementToLatLng(prevState.destination)\n            ) > maxRoutingDistance\n          )\n            ? fitMap(prevState.viewport, [\n                geolocationPosition,\n                prevState.destination && elementToLatLng(prevState.destination),\n              ])\n            : prevState.viewport;\n        const updateBase = { ...prevState, geolocationPosition, viewport };\n        if (\n          !prevState.isOriginExplicit &&\n          (prevState.origin == null ||\n            distance(prevState.origin, geolocationPosition) > 20)\n        ) {\n          return { ...updateBase, origin: geolocationPosition };\n        }\n        return updateBase;\n      }\n      return prevState;\n    });\n\n  const selectLocale = useCallback(\n    async (locale: string) => {\n      const venueOlmapData = state.venue?.id\n        ? await fetchOlmapData(state.venue.type, state.venue.id, locale)\n        : undefined;\n      setState((prevState) => ({\n        ...prevState,\n        locale,\n        venueOlmapData,\n      }));\n    },\n    [state.venue]\n  );\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const selectSuggestion = useCallback((suggestion: any) => {\n    // react-autosuggest will focus, we need to blur afterwards\n    setTimeout(() => {\n      geocoder.current.blur();\n    });\n    const coordinates: LatLng = [\n      suggestion.geometry.coordinates[1],\n      suggestion.geometry.coordinates[0],\n    ];\n    const [type, id] = suggestion.properties.source_id.split(\":\");\n    setState((prevState): State => {\n      const pointsToFit =\n        prevState.origin &&\n        distance(prevState.origin, coordinates) < maxRoutingDistance\n          ? [prevState.origin, coordinates]\n          : [coordinates];\n      const viewport = fitMap(prevState.viewport, pointsToFit);\n      const destination = {\n        lat: coordinates[0],\n        lon: coordinates[1],\n        type,\n        id: Number(id),\n        tags: {\n          name: suggestion.properties.name,\n          \"addr:street\": suggestion.properties.street,\n        },\n      };\n      return {\n        ...prevState,\n        origin: prevState.origin,\n        destination,\n        entrances: [],\n        venue: destination,\n        venueDialogOpen: suggestion.properties.layer === \"venue\", // Open the dialog for venues\n        venueDialogCollapsed: false,\n        venueOlmapData: undefined, // Clear old data\n        viewport: { ...prevState.viewport, ...viewport },\n        venueFeatures: emptyFeatureCollection,\n        unloadingPlace: undefined,\n      };\n    });\n  }, []);\n\n  // Handle /search/ deeplinks as if such a geocoding result was selected\n  useEffect(() => {\n    (async () => {\n      const query = urlMatchSearch?.params.query;\n      if (!query) return;\n\n      geocoder.current.update(query);\n\n      const features = (await geocoder.current.autocomplete(query))?.features;\n      if (!features?.length) {\n        // eslint-disable-next-line no-alert\n        alert(\"Search did not produce any results\");\n      } else if (features?.length === 1) {\n        geocoder.current.update(features[0].properties.label);\n        selectSuggestion(features[0]);\n      } else {\n        geocoder.current.focus();\n      }\n    })().catch((error) => {\n      // eslint-disable-next-line no-console\n      console.error(\"Error while geocoding the query from a link:\", error);\n    });\n  }, [urlMatchSearch, selectSuggestion]);\n\n  // Handle /osm/(node|way|relation)/ deeplinks as if such a geocoding result was selected\n  useEffect(() => {\n    (async () => {\n      if (!urlMatchOsm) return;\n      const { type } = urlMatchOsm.params;\n      const id = Number(urlMatchOsm.params.id);\n\n      if ([\"node\", \"way\", \"relation\"].indexOf(type) === -1 || !(id > 0)) {\n        // eslint-disable-next-line no-alert\n        alert(\"Broken link\");\n        return;\n      }\n\n      const elements =\n        type === \"node\"\n          ? await queryNodesById([id])\n          : await queryElementCentersById(type as \"way\" | \"relation\", [id]);\n      if (!elements.length) {\n        // eslint-disable-next-line no-alert\n        alert(\"Linked map feature not found\");\n      } else {\n        const element = elements[0];\n        const tags = element.tags || {};\n        // What if the address tags are not there?\n        const address = `${tags[\"addr:street\"] || \"\"} ${\n          tags[\"addr:housenumber\"] || \"\"\n        } ${tags[\"ref\"] || tags[\"addr:unit\"] || \"\"}`;\n        geocoder.current.update(\n          tags.name && address.replace(/ /g, \"\")\n            ? `${tags.name}, ${address}`\n            : tags.name || address\n        );\n        const coordinates =\n          \"center\" in element\n            ? [element.center.lon, element.center.lat]\n            : [element.lon, element.lat];\n        selectSuggestion({\n          geometry: {\n            coordinates,\n          },\n          properties: {\n            source_id: `${element.type}:${element.id}`,\n            street: tags[\"addr:street\"],\n            name: tags.name,\n            layer: tags.name ? \"venue\" : undefined, // XXX assumes anything with a name is a venue\n          },\n        });\n      }\n    })().catch((error) => {\n      // eslint-disable-next-line no-console\n      console.error(\"Error while resolving the OSM id from a link:\", error);\n    });\n  }, [urlMatchOsm, selectSuggestion]);\n\n  // Handle /olmap/workplace/ deeplinks as if such a geocoding result was selected\n  useEffect(() => {\n    (async () => {\n      if (!urlMatchOlmap) return;\n      const id = Number(urlMatchOlmap.params.id);\n\n      if (!(id > 0)) {\n        // eslint-disable-next-line no-alert\n        alert(\"Broken link\");\n        return;\n      }\n\n      const workplaceResponse = await fetchOlmapData(\"workplace\", id, \"\");\n      if (\n        workplaceResponse?.state !== \"success\" ||\n        !workplaceResponse.response.workplace\n      ) {\n        // eslint-disable-next-line no-alert\n        alert(\"Linked OLMap workplace not found\");\n      } else {\n        const { workplace } = workplaceResponse.response;\n        geocoder.current.update(workplace.as_osm_tags.name);\n        const coordinates = [\n          workplace.image_note.lon,\n          workplace.image_note.lat,\n        ];\n        selectSuggestion({\n          geometry: {\n            coordinates,\n          },\n          properties: {\n            source_id: `workplace:${workplace.id}`,\n            street: workplace.as_osm_tags[\"addr:street\"],\n            name: workplace.as_osm_tags.name,\n            layer: \"venue\",\n          },\n        });\n      }\n    })().catch((error) => {\n      // eslint-disable-next-line no-console\n      console.error(\"Error while resolving the OLMap id from a link:\", error);\n    });\n  }, [urlMatchOlmap, selectSuggestion]);\n\n  return (\n    <div data-testid=\"app\" className=\"App\">\n      <header className=\"App-header\">\n        <h2>Gatesolve</h2>\n      </header>\n      <div className=\"App-shadow\" />\n      <ReactAutosuggestGeocoder\n        ref={geocoder}\n        url=\"https://api.digitransit.fi/geocoding/v1\"\n        sources=\"oa,osm,nlsfi\"\n        highlightFirstSuggestion\n        inputProps={{ placeholder: \"Destination name or address\" }}\n        center={{\n          latitude:\n            state.geolocationPosition?.[0] ||\n            state.origin?.[0] ||\n            state.destination?.lat ||\n            metropolitanAreaCenter[0],\n          longitude:\n            state.geolocationPosition?.[1] ||\n            state.origin?.[1] ||\n            state.destination?.lon ||\n            metropolitanAreaCenter[1],\n        }}\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        onSuggestionSelected={(event: any, { suggestion }: any): any => {\n          selectSuggestion(suggestion);\n        }}\n      />\n      <MapGL\n        ref={map}\n        // This is according to the Get Started materials:\n        // https://uber.github.io/react-map-gl/docs/get-started/get-started/\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        {...state.viewport}\n        style={{ width: \"100%\", height: \"90%\" }}\n        mapStyle=\"https://raw.githubusercontent.com/HSLdevcom/hsl-map-style/master-old/simple-style.json\"\n        dragRotate={false}\n        transformRequest={transformRequest}\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        onViewportChange={(viewport: any): void => {\n          setState((prevState): State => ({ ...prevState, viewport }));\n        }}\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        onHover={(event: any): void => {\n          // Inspect the topmost feature under click\n          const feature = event.features?.[0];\n          // Set cursor shape depending whether we would click an entrance\n          const cursor = feature?.properties.entrance ? \"pointer\" : \"grab\";\n          // FIXME: Better way to set the pointer shape or at least find the element\n          const mapboxOverlaysElement = document.querySelector(\n            \".overlays\"\n          ) as HTMLElement;\n          if (mapboxOverlaysElement) {\n            mapboxOverlaysElement.style.cursor = cursor;\n          }\n        }}\n        onClick={handleMapClick}\n        onContextmenu={handleMapClick}\n      >\n        <GeolocateControl\n          dataTestId=\"geolocate-control\"\n          enableOnMount\n          onEnable={(isInitiatedByUser): void => {\n            setState((prevState) => ({\n              ...prevState,\n              isOriginExplicit:\n                !isInitiatedByUser && prevState.isOriginExplicit,\n              isGeolocating: true,\n            }));\n          }}\n          onDisable={(): void => {\n            setState((prevState) => ({\n              ...prevState,\n              isGeolocating: false,\n              geolocationPosition: null,\n            }));\n          }}\n          onGeolocate={onGeolocate}\n        />\n        <TunnelsControl\n          dataTestId=\"tunnels-control\"\n          enabled={state.showTunnels}\n          setEnabled={(enabled: boolean): void => {\n            setState((prevState) => ({\n              ...prevState,\n              showTunnels: enabled,\n            }));\n          }}\n        />\n        <HelpControl\n          dataTestId=\"help-control\"\n          initiallyOpen={!!state.openHelp}\n          locale={state.locale}\n          onLocaleSelected={selectLocale}\n        />\n\n        {state.geolocationPosition != null && (\n          <Marker\n            offset={[-20, -20]}\n            longitude={state.geolocationPosition[1]}\n            latitude={state.geolocationPosition[0]}\n          >\n            <UserPosition dataTestId=\"user-marker\" />\n          </Marker>\n        )}\n        {Array.from(\n          state.routableTiles.entries(),\n          ([coords, tile]) =>\n            tile && (\n              <Source\n                key={coords}\n                id={`source-${coords}`}\n                type=\"geojson\"\n                data={tile}\n              >\n                {allEntrancesLayers.map((layer) => (\n                  <Layer\n                    // eslint-disable-next-line react/jsx-props-no-spreading\n                    {...layer}\n                    key={`${layer.id}-${coords}`}\n                    id={`${layer.id}-${coords}`}\n                    source={`source-${coords}`}\n                    before=\"housenum_label\"\n                  />\n                ))}\n              </Source>\n            )\n        )}\n        <Source\n          id=\"parking\"\n          type=\"geojson\"\n          data={state.parkingData || emptyFeatureCollection}\n        >\n          {parkingLayers.map((layer) => (\n            <Layer\n              // eslint-disable-next-line react/jsx-props-no-spreading\n              {...layer}\n              key={layer.id}\n              source=\"parking\"\n              before=\"housenum_label\"\n            />\n          ))}\n        </Source>\n        <Source\n          id=\"viewport\"\n          type=\"geojson\"\n          data={state.viewportMaskFeature || emptyFeatureCollection}\n        >\n          {state.showTunnels &&\n            tunnelMaskLayers.map((layer) => (\n              <Layer\n                // eslint-disable-next-line react/jsx-props-no-spreading\n                {...layer}\n                key={layer.id}\n                source=\"viewport\"\n                before=\"road_street_label_fisv\"\n              />\n            ))}\n        </Source>\n        <Source\n          id=\"tunnels\"\n          type=\"geojson\"\n          data={state.tunnelData || emptyFeatureCollection}\n        >\n          {state.showTunnels &&\n            tunnelLayers.map((layer) => (\n              <Layer\n                // eslint-disable-next-line react/jsx-props-no-spreading\n                {...layer}\n                key={layer.id}\n                source=\"tunnels\"\n                before=\"road_street_label_fisv\"\n              />\n            ))}\n        </Source>\n        <Source id=\"highlights\" type=\"geojson\" data={state.highlights}>\n          <Layer\n            // eslint-disable-next-line react/jsx-props-no-spreading\n            {...buildingHighlightLayer}\n            source=\"highlights\"\n            before=\"housenum_label\"\n          />\n        </Source>\n\n        <Source id=\"venue\" type=\"geojson\" data={state.venueFeatures}>\n          {venueLayers.map((layer) => (\n            <Layer\n              // eslint-disable-next-line react/jsx-props-no-spreading\n              {...layer}\n              key={layer.id}\n              source=\"venue\"\n            />\n          ))}\n        </Source>\n\n        <Source id=\"route\" type=\"geojson\" data={state.route}>\n          {routeLayers.map((layer) => (\n            <Layer\n              // eslint-disable-next-line react/jsx-props-no-spreading\n              {...layer}\n              key={layer.id}\n              source=\"route\"\n              before={layer.beforeId || \"venue-symbol\"}\n            />\n          ))}\n        </Source>\n        {state.origin && (\n          <Marker\n            className=\"PinMarker\"\n            draggable\n            offset={[0, -22.5]}\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            onDragEnd={(lngLat: any): void => {\n              setState(\n                (prevState): State => ({\n                  ...prevState,\n                  origin: [lngLat.lat, lngLat.lng],\n                  isOriginExplicit: true,\n                })\n              );\n            }}\n            longitude={state.origin[1]}\n            latitude={state.origin[0]}\n          >\n            <Pin\n              dataTestId=\"origin\"\n              style={{ fill: \"#00afff\", stroke: \"#fff\" }}\n            />\n          </Marker>\n        )}\n        {state.destination && (\n          <Marker\n            className=\"PinMarker\"\n            draggable\n            offset={[0, -22.5]}\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            onDragEnd={(lngLat: any): void => {\n              geocoder.current.clear();\n              setState(\n                (prevState): State => ({\n                  ...prevState,\n                  destination: latLngToElement([lngLat.lat, lngLat.lng]),\n                })\n              );\n            }}\n            longitude={state.destination.lon}\n            latitude={state.destination.lat}\n          >\n            <Pin\n              dataTestId=\"destination\"\n              style={{\n                fill: \"#64be14\",\n                stroke: \"#fff\",\n              }}\n            />\n          </Marker>\n        )}\n        {state.popupCoordinates && (\n          <Popup\n            open={state.popupCoordinates != null}\n            latitude={state.popupCoordinates?.lat || null}\n            longitude={state.popupCoordinates?.lon || null}\n            maxWidth=\"260px\"\n            closeButton={false}\n            closeOnClick={false}\n          >\n            <div\n              style={{\n                display: \"grid\",\n                gridTemplateColumns: \"30px 1fr 30px\",\n              }}\n            >\n              <div />\n              <div\n                style={{\n                  fontSize: \"14px\",\n                  fontWeight: \"bold\",\n                }}\n              >\n                {state.popupCoordinates.tags?.[\"addr:street\"]}{\" \"}\n                {state.popupCoordinates.tags?.[\"addr:housenumber\"]}{\" \"}\n                {state.popupCoordinates.tags?.[\"ref\"] ||\n                  state.popupCoordinates.tags?.[\"addr:unit\"]}\n              </div>\n              <div\n                style={{\n                  textAlign: \"right\",\n                }}\n              >\n                <a\n                  aria-label=\"Comment\"\n                  href={\n                    getOlmapUrl(state.popupCoordinates, state.olmapData) || \"#\"\n                  }\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  style={{ display: \"inline-flex\" }}\n                  onClick={setEditingNote}\n                >\n                  <AddCommentIcon\n                    style={{\n                      color: \"#ff5000\",\n                      backgroundColor: \"#fff\",\n                    }}\n                  />\n                </a>\n              </div>\n            </div>\n            <OLMapImages\n              onImageClick={setEditingNote}\n              olmapData={state.olmapData}\n            />\n            {state.popupCoordinates.tags && (\n              <table\n                style={{\n                  marginTop: \"10px\",\n                  marginBottom: \"10px\",\n                  textAlign: \"left\",\n                }}\n              >\n                <tbody>\n                  {Object.entries(state.popupCoordinates.tags)\n                    .filter(\n                      ([k]) =>\n                        !k.startsWith(\"@\") &&\n                        ![\n                          \"addr:street\",\n                          \"addr:housenumber\",\n                          \"addr:unit\",\n                          \"ref\",\n                        ].includes(k)\n                    )\n                    .map(([k, v]) => (\n                      <tr key={`${k}-${v}`}>\n                        <td\n                          style={{\n                            padding: \"0 5px 0 0\",\n                            textAlign: \"right\",\n                          }}\n                        >\n                          {k}\n                        </td>\n                        <td>{v}</td>\n                      </tr>\n                    ))}\n                </tbody>\n              </table>\n            )}\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Button\n                data-testid=\"origin-button\"\n                variant=\"contained\"\n                size=\"small\"\n                style={{ backgroundColor: \"#00afff\", color: \"#fff\" }}\n                type=\"button\"\n                aria-label=\"Set origin\"\n                onClick={(): void =>\n                  setState((prevState): State => {\n                    // Check this to appease the compiler.\n                    if (prevState.popupCoordinates != null) {\n                      return {\n                        ...prevState,\n                        origin: elementToLatLng(prevState.popupCoordinates),\n                        isOriginExplicit: true,\n                        popupCoordinates: null,\n                      };\n                    }\n                    return {\n                      ...prevState,\n                      isOriginExplicit: true,\n                      popupCoordinates: null,\n                    };\n                  })\n                }\n              >\n                Origin\n              </Button>\n              <span style={{ padding: \"5px\" }} />\n              <Button\n                data-testid=\"destination-button\"\n                variant=\"contained\"\n                size=\"small\"\n                style={{ backgroundColor: \"#64be14\", color: \"#fff\" }}\n                type=\"button\"\n                aria-label=\"Set destination\"\n                onClick={(): void =>\n                  setState((prevState): State => {\n                    // Check this to appease the compiler.\n                    if (prevState.popupCoordinates != null) {\n                      return {\n                        ...prevState,\n                        destination: prevState.popupCoordinates,\n                        popupCoordinates: null,\n                      };\n                    }\n                    return {\n                      ...prevState,\n                      popupCoordinates: null,\n                    };\n                  })\n                }\n              >\n                Destination\n              </Button>\n              <span style={{ padding: \"5px\" }} />\n              <Button\n                data-testid=\"google-maps-button\"\n                variant=\"contained\"\n                size=\"small\"\n                style={{ backgroundColor: \"#db4437\", color: \"#fff\" }}\n                type=\"button\"\n                aria-label=\"Open Google Maps\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href={`https://www.google.com/maps/dir/?api=1&destination=${state?.popupCoordinates.lat},${state?.popupCoordinates.lon}&travelmode=driving`}\n                onClick={(): void =>\n                  setState((prevState): State => {\n                    return {\n                      ...prevState,\n                      popupCoordinates: null,\n                    };\n                  })\n                }\n              >\n                Google\n              </Button>\n            </div>\n          </Popup>\n        )}\n      </MapGL>\n      <OLMapDialog\n        noteId={state.editingNote}\n        onClose={() =>\n          setState((prevState) => ({\n            ...prevState,\n            editingNote: undefined,\n          }))\n        }\n      />\n      <VenueDialog\n        open={state.venueDialogOpen}\n        collapsed={state.venueDialogCollapsed}\n        venue={state.venue}\n        venueOlmapData={state.venueOlmapData}\n        restrictions={state.route}\n        locale={state.locale}\n        onViewDetails={(olmapNote) => {\n          setState((prevState): State => {\n            return {\n              ...prevState,\n              editingNote: olmapNote.id,\n            };\n          });\n        }}\n        onEntranceSelected={(entranceId): void => {\n          setState((prevState): State => {\n            const entranceFeatures = prevState.venueFeatures.features.filter(\n              (feature) =>\n                feature.geometry.type === \"Point\" &&\n                feature.properties?.entrance\n            );\n\n            const entrance = prevState.venueFeatures.features.find((feature) =>\n              feature.properties?.[\"@id\"].endsWith(`/${entranceId}`)\n            );\n            return {\n              ...prevState,\n              unloadingPlace: undefined,\n              destination:\n                (entrance &&\n                  entrance.geometry.type === \"Point\" &&\n                  geoJsonToElement(entrance as Feature<Point>)) ||\n                undefined,\n              entrances: entranceFeatures.map((feature) =>\n                geoJsonToElement(feature as Feature<Point>)\n              ),\n            };\n          });\n        }}\n        onUnloadingPlaceSelected={(unloadingPlace): void => {\n          setState((prevState): State => {\n            const entranceFeatures = prevState.venueFeatures.features.filter(\n              (feature) =>\n                feature.geometry.type === \"Point\" &&\n                feature.properties?.entrance\n            );\n            return {\n              ...prevState,\n              unloadingPlace,\n              destination: prevState.venue,\n              entrances: entranceFeatures.map((feature) =>\n                geoJsonToElement(feature as Feature<Point>)\n              ),\n            };\n          });\n        }}\n        onClose={(): void => {\n          geocoder.current.clear();\n          setState((prevState) => ({\n            ...prevState,\n            // Reset venue\n            venueDialogOpen: false,\n            venueDialogCollapsed: false,\n            venueOlmapData: undefined,\n            venueFeatures: emptyFeatureCollection,\n            venue: undefined,\n            // Reset routing\n            origin: prevState.geolocationPosition || undefined,\n            originIsExplicit: false,\n            destination: undefined,\n            entrances: [],\n            unloadingPlace: undefined,\n            route: geometryToGeoJSON(),\n          }));\n        }}\n        onCollapsingToggled={(): void =>\n          setState((prevState) => ({\n            ...prevState,\n            venueDialogCollapsed: !state.venueDialogCollapsed,\n          }))\n        }\n        onRestrictionSelected={(feature) => {\n          setState((prevState) => ({\n            ...prevState,\n            popupCoordinates: geoJsonToElement(feature),\n          }));\n        }}\n        onLocaleSelected={selectLocale}\n      />\n    </div>\n  );\n};\n\nexport default App;\n"],"sourceRoot":""}