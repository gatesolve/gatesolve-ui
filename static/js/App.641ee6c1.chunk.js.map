{"version":3,"sources":["map-style.ts","components/Pin.tsx","components/UserPosition.tsx","components/GeolocateControl.tsx","planner.ts","overpass.ts","mapbox-utils.ts","App.tsx"],"names":["routeLineLayer","id","type","layout","paint","filter","routeImaginaryLineLayer","routePointLayer","buildingHighlightLayer","allEntrancesLayer","minzoom","allEntrancesSymbolLayer","routePointSymbolLayer","SVG_PATH","Pin","height","style","fill","stroke","dataTestId","data-testid","viewBox","pointerEvents","d","cursor","gradientTransform","offset","stopColor","stopOpacity","UserPosition","width","strokeWidth","position","cx","cy","r","GeolocateControl","onGeolocate","onGeolocateError","positionOptions","enableHighAccuracy","timeout","onEnable","onDisable","enableOnMount","useState","window","navigator","geolocation","isGeolocationSupported","permissions","isPermissionsSupported","permissionState","setPermissionState","watchID","setWatchId","hasBeenUsed","setHasBeenUsed","startWatching","isInitiatedByUser","watchPosition","stopWatching","clearWatch","showWarningOfDeniedGeolocation","console","log","useEffect","query","name","then","permissionStatus","state","onchange","this","catch","error","isClickingAllowed","isGeolocationOn","element","ariaLabel","buttonClassName","className","aria-label","aria-pressed","onContextMenu","event","preventDefault","onClick","assert","undefined","aria-hidden","extractGeometry","path","coordinates","obstacles","obstacleWays","Map","imaginaryWays","legs","getSteps","forEach","step","index","startLocation","stopLocation","node","context","through","definedTags","has","set","get","push","longitude","latitude","replace","freeformTags","Array","from","values","geometryToGeoJSON","origin","targets","entrances","routeGeometries","features","geometry","properties","color","target","lon","lat","entrance","ref","tags","opacity","imaginary","callback","a","Planner","planner","setProfileID","process","to","take","on","completePath","geoJSON","getMapSize","mapboxgl","getContainer","clientWidth","clientHeight","latLngToDestination","latLng","destinationToLatLng","destination","initialState","route","highlights","viewport","zoom","bearing","pitch","isOriginExplicit","isGeolocating","geolocationPosition","popupCoordinates","metropolitanAreaCenter","transformRequest","originalURL","url","distance","turfDistance","units","parseLatLng","text","parts","split","length","map","Number","isNaN","fitBounds","viewportOptions","latLngs","WebMercatorViewport","inputs","x","minLng","Math","min","maxLng","max","minLat","maxLat","padding","top","bottom","left","right","maxZoom","App","useRef","geocoder","current","getMap","iconId","startsWith","size","svgData","pinAsSVG","imageId","ratio","devicePixelRatio","canvas","document","createElement","ctx","getContext","img","Image","svgDataUrl","encodeURIComponent","onload","Error","drawImage","addImage","getImageData","pixelRatio","src","addImageSVG","urlMatch","useRouteMatch","setState","fitMap","params","extendedViewport","prevState","history","useHistory","snackbarFunctions","useSnackbar","enqueueSnackbar","closeSnackbar","location","pathname","URL","searchParams","append","fetch","toString","response","json","body","elements","queryEntrances","result","snackbar","message","variant","persist","anchorOrigin","vertical","horizontal","action","Button","rel","href","IconButton","Close","calculatePlan","geojson","extendedGeojson","concat","handleMapClick","feature","queryRenderedFeatures","point","sourceLayer","toJSON","lngLat","lng","sources","highlightFirstSuggestion","inputProps","placeholder","center","onSuggestionSelected","suggestion","source_id","pointsToFit","mapStyle","onViewportChange","onHover","mapboxOverlaysElement","querySelector","onContextmenu","isFirstPosition","coords","updateBase","tiles","maxzoom","source-layer","source","data","draggable","onDragEnd","clear","open","closeButton","closeOnClick","textAlign","Object","entries","k","find","censored","v","key","backgroundColor"],"mappings":"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","file":"static/js/App.641ee6c1.chunk.js","sourcesContent":["import type { LayerProps } from \"react-map-gl\";\n\nexport const routeLineLayer: LayerProps = {\n  id: \"route-line\",\n  type: \"line\",\n  layout: {\n    \"line-cap\": \"round\",\n    \"line-join\": \"round\",\n  },\n  paint: {\n    \"line-opacity\": [\"coalesce\", [\"get\", \"opacity\"], 0.8],\n    \"line-width\": 2,\n    \"line-color\": [\"get\", \"color\"],\n  },\n  filter: [\"!\", [\"coalesce\", [\"get\", \"imaginary\"], false]],\n};\n\nexport const routeImaginaryLineLayer: LayerProps = {\n  id: \"route-imaginary-line\",\n  type: \"line\",\n  layout: {\n    \"line-cap\": \"round\",\n    \"line-join\": \"round\",\n  },\n  paint: {\n    \"line-opacity\": [\"coalesce\", [\"get\", \"opacity\"], 0.5],\n    \"line-width\": 5,\n    \"line-color\": [\"get\", \"color\"],\n    \"line-dasharray\": [0, 2],\n  },\n  filter: [\"coalesce\", [\"get\", \"imaginary\"], false],\n};\n\nexport const routePointLayer: LayerProps = {\n  id: \"route-point\",\n  type: \"circle\",\n  paint: {\n    \"circle-opacity\": [\"coalesce\", [\"get\", \"opacity\"], 1],\n    \"circle-radius\": 5,\n    \"circle-color\": [\"get\", \"color\"],\n  },\n  filter: [\"==\", \"Point\", [\"geometry-type\"]],\n};\n\nexport const buildingHighlightLayer: LayerProps = {\n  id: \"building-highlight\",\n  type: \"fill\",\n  paint: {\n    \"fill-opacity\": 0.3,\n    \"fill-color\": \"#99ff99\",\n  },\n};\n\nexport const allEntrancesLayer: LayerProps = {\n  id: \"entrance-point\",\n  type: \"circle\",\n  minzoom: 12,\n  paint: {\n    \"circle-radius\": [\n      \"interpolate\",\n      [\"linear\"],\n      [\"zoom\"],\n      12, // At zoom 12 or less,\n      1, // circle radius is 1.\n      14, // At zoom 14,\n      3, // circle radius is 3.\n      15, // At zoom 15 or more,\n      5, // circle radius is 5.\n    ],\n    \"circle-color\": \"#64be14\",\n  },\n  filter: [\"has\", \"entrance\"],\n};\n\nexport const allEntrancesSymbolLayer: LayerProps = {\n  id: \"entrance-symbol\",\n  type: \"symbol\",\n  minzoom: 16,\n  paint: {\n    \"text-halo-color\": \"#fff\",\n    \"text-color\": \"#64be14\",\n    \"text-halo-width\": 3,\n  },\n  layout: {\n    \"text-field\": [\"coalesce\", [\"get\", \"ref\"], [\"get\", \"addr:unit\"]],\n    \"text-anchor\": \"center\",\n    \"text-font\": [\"Klokantech Noto Sans Regular\"],\n    \"text-size\": 24,\n    \"text-offset\": [0, -0.8],\n    \"text-allow-overlap\": true,\n  },\n  filter: [\"has\", \"entrance\"],\n};\n\nexport const routePointSymbolLayer: LayerProps = {\n  id: \"route-point-symbol\",\n  type: \"symbol\",\n  paint: {\n    \"text-color\": \"#000\",\n    \"text-halo-color\": \"#fff\",\n    \"text-halo-width\": 3,\n  },\n  layout: {\n    \"text-field\": [\"get\", \"ref\"],\n    \"text-anchor\": \"center\",\n    \"text-font\": [\"Klokantech Noto Sans Regular\"],\n    \"text-size\": 24,\n    \"text-offset\": [0, -0.05],\n  },\n  filter: [\"==\", \"Point\", [\"geometry-type\"]],\n};\n","import React from \"react\";\n\nexport interface PinProps {\n  height?: string;\n  style?: React.CSSProperties;\n  dataTestId?: string;\n}\n\nconst SVG_VIEWBOX = \"-1 -1 17 17\";\nconst SVG_PATH =\n  \"M7.5 0C5.068 0 2.23 1.486 2.23 5.27c0 2.568 4.054 8.244 5.27 9.73c1.081-1.486 5.27-7.027 5.27-9.73C12.77 1.487 9.932 0 7.5 0z\";\n\nexport const pinAsSVG = (size: number, style: string): string => `\n<svg xmlns=\"http://www.w3.org/2000/svg\"\n  width=\"${size}px\"\n  height=\"${size}px\"\n  style=\"${style}\"\n  viewBox=\"${SVG_VIEWBOX}\"\n>\n  <path d=\"${SVG_PATH}\" />\n</svg>`;\n\nconst Pin: React.FC<PinProps> = ({\n  height = \"50\",\n  style = { fill: \"#444\", stroke: \"none\" },\n  dataTestId,\n}) => {\n  return (\n    <svg\n      data-testid={dataTestId}\n      height={height}\n      style={style}\n      viewBox={SVG_VIEWBOX}\n      pointerEvents=\"none\"\n    >\n      <path\n        fill={`url(#gradient-${style.fill})`}\n        d={SVG_PATH}\n        pointerEvents=\"visiblepainted\"\n        cursor=\"pointer\"\n      />\n      <defs>\n        <linearGradient\n          id={`gradient-${style.fill}`}\n          gradientTransform=\"rotate(90)\"\n        >\n          <stop offset=\"00%\" stopColor=\"#FFFFFF\" stopOpacity=\"0\" />\n          <stop offset=\"100%\" stopColor={style.fill} stopOpacity=\"1\" />\n        </linearGradient>\n      </defs>\n    </svg>\n  );\n};\n\nexport default Pin;\n","import React from \"react\";\n\nexport interface UserPositionProps {\n  dataTestId?: string;\n  width?: string;\n  height?: string;\n  stroke?: string;\n  strokeWidth?: string;\n}\n\nconst UserPosition: React.FC<UserPositionProps> = ({\n  dataTestId,\n  width = \"40\",\n  height = \"40\",\n  stroke = \"#00afff\",\n  strokeWidth = \"16\",\n}) => (\n  <svg\n    data-testid={dataTestId}\n    width={width}\n    height={height}\n    stroke={stroke}\n    strokeWidth={strokeWidth}\n    viewBox=\"-100 -100 200 200\"\n    fill=\"transparent\"\n    style={{ position: \"absolute\" }}\n  >\n    <circle cx=\"0\" cy=\"0\" r=\"24\" />\n    <circle cx=\"0\" cy=\"0\" r=\"46\" />\n    <circle cx=\"0\" cy=\"0\" r=\"68\" />\n  </svg>\n);\n\nexport default UserPosition;\n","import React, { useState, useEffect } from \"react\";\nimport type { MouseEventHandler } from \"react\";\n\nexport interface GeolocateControlProps {\n  dataTestId?: string;\n  onGeolocate: PositionCallback;\n  onGeolocateError?: PositionErrorCallback;\n  positionOptions?: PositionOptions;\n  onEnable?: (isInitiatedByUser: boolean) => void;\n  onDisable?: () => void;\n  enableOnMount?: boolean;\n}\n\nconst GeolocateControl: React.FC<GeolocateControlProps> = ({\n  dataTestId,\n  onGeolocate,\n  onGeolocateError,\n  positionOptions = { enableHighAccuracy: true, timeout: 6000 },\n  onEnable,\n  onDisable,\n  enableOnMount = true,\n}) => {\n  const [isGeolocationSupported] = useState(\n    window.navigator.geolocation != null\n  );\n  const [isPermissionsSupported] = useState(\n    window.navigator.permissions != null\n  );\n  const [permissionState, setPermissionState] = useState(\n    null as PermissionState | null\n  );\n  const [watchID, setWatchId] = useState(null as number | null);\n  const [hasBeenUsed, setHasBeenUsed] = useState(false);\n\n  const checkGeolocationPermission = (): void => {\n    if (isPermissionsSupported) {\n      window.navigator.permissions\n        .query({ name: \"geolocation\" })\n        .then((permissionStatus) => {\n          setPermissionState(permissionStatus.state);\n          function setPermissionStateOnChange(this: PermissionStatus): void {\n            setPermissionState(this.state);\n          }\n          // eslint-disable-next-line no-param-reassign\n          permissionStatus.onchange = setPermissionStateOnChange;\n        })\n        .catch((error) => {\n          // FIXME: Warn properly\n          // eslint-disable-next-line no-console\n          console.error(\"Permissions API exists but querying it fails:\", error);\n        });\n    }\n  };\n\n  const startWatching = (isInitiatedByUser: boolean): void => {\n    if (isGeolocationSupported && watchID == null) {\n      setWatchId(\n        window.navigator.geolocation.watchPosition(\n          onGeolocate,\n          onGeolocateError,\n          positionOptions\n        )\n      );\n      setHasBeenUsed(true);\n      if (onEnable != null) {\n        onEnable(isInitiatedByUser);\n      }\n    }\n  };\n\n  const stopWatching = (): void => {\n    if (isGeolocationSupported && watchID != null) {\n      /**\n       * Based on reading the Geolocation API spec (\n       * https://www.w3.org/TR/2016/REC-geolocation-API-20161108/#geolocation_interface\n       * ) and trying out in practice on Chromium, one can call clearWatch\n       * regardless of permissions.\n       */\n      window.navigator.geolocation.clearWatch(watchID);\n      setWatchId(null);\n      if (onDisable != null) {\n        onDisable();\n      }\n    }\n  };\n\n  const showWarningOfDeniedGeolocation = (): void => {\n    // FIXME: Inform the user that geolocation is denied.\n    // eslint-disable-next-line no-console\n    console.log(\"Geolocation is denied. Inform the user.\");\n  };\n\n  // Inform the user once if geolocation is not supported.\n  useEffect(() => {\n    if (!isGeolocationSupported) {\n      // FIXME: Warn the user\n      // eslint-disable-next-line no-console\n      console.log(\"Geolocation is not supported. Inform the user.\");\n    }\n  }, [isGeolocationSupported]);\n\n  // Figure out the permissionState.\n  useEffect(() => {\n    if (\n      isGeolocationSupported &&\n      isPermissionsSupported &&\n      permissionState == null\n    ) {\n      checkGeolocationPermission();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Warn the user about denied permission.\n  useEffect(() => {\n    if (permissionState === \"denied\") {\n      showWarningOfDeniedGeolocation();\n      stopWatching();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [permissionState]);\n\n  /**\n   * If Permissions API is supported, only allow clicking once the\n   * PermissionState is known.\n   */\n  const isClickingAllowed = !isPermissionsSupported || permissionState != null;\n  const isGeolocationOn = watchID != null;\n\n  // Start watching on mount if asked.\n  useEffect(() => {\n    if (\n      enableOnMount &&\n      !hasBeenUsed &&\n      isGeolocationSupported &&\n      !isGeolocationOn &&\n      (!isPermissionsSupported ||\n        (permissionState != null && permissionState !== \"denied\"))\n    ) {\n      startWatching(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    enableOnMount,\n    hasBeenUsed,\n    isGeolocationSupported,\n    isGeolocationOn,\n    isPermissionsSupported,\n    permissionState,\n  ]);\n\n  const onClick: MouseEventHandler = (event) => {\n    /**\n     * Assume that Geolocation API exists.\n     *\n     * Assume either permissionState is known or the Permissios API is not\n     * supported.\n     */\n    // FIXME: Maybe find a way so this does not need to be remembered.\n    // eslint-disable-next-line no-console\n    console.assert(isGeolocationSupported);\n    // FIXME: Maybe find a way so this does not need to be remembered.\n    // FIXME: Remove these debug asserts\n    // eslint-disable-next-line no-console\n    console.assert(isClickingAllowed);\n    event.preventDefault();\n\n    if (!isGeolocationOn) {\n      if (isPermissionsSupported && permissionState === \"denied\") {\n        // Warn the user again if they press the button.\n        showWarningOfDeniedGeolocation();\n      } else {\n        startWatching(true);\n      }\n    } else {\n      stopWatching();\n    }\n  };\n\n  let element = null;\n  if (isGeolocationSupported) {\n    const ariaLabel = isGeolocationOn\n      ? \"Stop using my location\"\n      : \"Find my location\";\n    const buttonClassName = isGeolocationOn\n      ? \"mapboxgl-ctrl-icon mapboxgl-ctrl-geolocate mapboxgl-ctrl-geolocate-active\"\n      : \"mapboxgl-ctrl-icon mapboxgl-ctrl-geolocate\";\n    element = (\n      <div className=\"mapboxgl-ctrl mapboxgl-ctrl-group mapboxgl-ctrl-bottom-left\">\n        <button\n          type=\"button\"\n          className={buttonClassName}\n          data-testid={dataTestId}\n          aria-label={ariaLabel}\n          aria-pressed={isGeolocationOn}\n          onContextMenu={(event): void => event.preventDefault()}\n          onClick={isClickingAllowed ? onClick : undefined}\n        >\n          <span className=\"mapboxgl-ctrl-icon\" aria-hidden=\"true\" />\n        </button>\n      </div>\n    );\n  }\n  return element;\n};\n\nexport default GeolocateControl;\n","// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  Feature,\n  FeatureCollection,\n  Geometry,\n  GeoJsonProperties,\n} from \"geojson\";\n\n// \"./planner-config\" (and PlannerJS) is imported dynamically by calculatePlan\n\nimport { ElementWithCoordinates } from \"./overpass\";\n\ninterface RouteGeometries {\n  coordinates: Array<[number, number]>;\n  obstacles: Array<[number, number]>;\n  obstacleWays: Array<Array<[number, number]>>;\n  imaginaryWays: Array<Array<[number, number]>>;\n}\n\nfunction extractGeometry(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  path: any\n): RouteGeometries {\n  const coordinates = [] as Array<[number, number]>;\n  const obstacles = [] as Array<[number, number]>;\n  const obstacleWays = new Map();\n  const imaginaryWays = [] as Array<Array<[number, number]>>;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  path.legs[0].getSteps().forEach((step: any, index: number) => {\n    /* XXX: Would be nice to get a null step.through from PlannerJS here.\n       Heuristic below: PlannerJS connects the origin and destination to\n       the nearest OSM ways through a node which does not have an id,\n       so the steps whose geometry is not based on an OSM way have\n       nodes without ids at both ends. Additionally, the second step is a\n       false positive if origin and destination connect to same OSM edge.\n     */\n    if (!step.startLocation.id && !step.stopLocation.id && index !== 1) {\n      imaginaryWays.push([\n        [\n          step.startLocation.longitude as number,\n          step.startLocation.latitude as number,\n        ],\n        [\n          step.stopLocation.longitude as number,\n          step.stopLocation.latitude as number,\n        ],\n      ]);\n      return; // guessed segment\n    }\n    const node = step.stopLocation;\n    if (\n      path.context[step.through]?.definedTags[\n        \"https://w3id.org/openstreetmap/terms#highway\"\n      ] === \"https://w3id.org/openstreetmap/terms#Steps\"\n    ) {\n      if (!obstacleWays.has(step.through)) {\n        obstacleWays.set(step.through, []);\n      }\n      obstacleWays\n        .get(step.through)\n        .push(\n          [\n            step.startLocation.longitude as number,\n            step.startLocation.latitude as number,\n          ],\n          [\n            step.stopLocation.longitude as number,\n            step.stopLocation.latitude as number,\n          ]\n        );\n    }\n    if (node.definedTags?.[\"https://w3id.org/openstreetmap/terms#barrier\"]) {\n      // eslint-disable-next-line no-console\n      console.log(\n        step.through,\n        node.definedTags[\n          \"https://w3id.org/openstreetmap/terms#barrier\"\n        ].replace(/^.*#/, \"\"),\n        node.id,\n        node.definedTags,\n        node.freeformTags\n      );\n      obstacles.push([node.longitude as number, node.latitude as number]);\n    }\n    coordinates.push([\n      step.startLocation.longitude as number,\n      step.startLocation.latitude as number,\n    ]);\n    coordinates.push([\n      step.stopLocation.longitude as number,\n      step.stopLocation.latitude as number,\n    ]);\n  });\n  return {\n    coordinates,\n    obstacles,\n    obstacleWays: Array.from(obstacleWays.values()),\n    imaginaryWays,\n  };\n}\n\nexport function geometryToGeoJSON(\n  origin?: [number, number],\n  targets?: Array<ElementWithCoordinates>,\n  entrances?: Array<ElementWithCoordinates>,\n  routeGeometries?: RouteGeometries\n): FeatureCollection {\n  const features = [] as Array<Feature<Geometry, GeoJsonProperties>>;\n  if (origin) {\n    features.push({\n      type: \"Feature\",\n      geometry: {\n        type: \"Point\",\n        coordinates: [origin[1], origin[0]],\n      },\n      properties: {\n        color: \"#00afff\",\n      },\n    });\n  }\n  if (targets) {\n    targets.forEach((target) => {\n      features.push({\n        type: \"Feature\",\n        geometry: {\n          type: \"Point\",\n          coordinates: [target.lon, target.lat],\n        },\n        properties: {\n          color: \"#64be14\",\n        },\n      });\n    });\n  }\n  if (entrances) {\n    entrances.forEach((entrance) => {\n      features.push({\n        type: \"Feature\",\n        geometry: {\n          type: \"Point\",\n          coordinates: [entrance.lon, entrance.lat],\n        },\n        properties: {\n          color: \"#00ffff\",\n          ref: entrance.tags?.[\"ref\"] || entrance.tags?.[\"addr:unit\"],\n          opacity: 0,\n        },\n      });\n    });\n  }\n  if (routeGeometries?.coordinates) {\n    features.push({\n      type: \"Feature\",\n      geometry: {\n        type: \"LineString\",\n        coordinates: routeGeometries.coordinates,\n      },\n      properties: {\n        color: \"#000\",\n      },\n    });\n  }\n  if (routeGeometries?.obstacleWays) {\n    features.push({\n      type: \"Feature\",\n      geometry: {\n        type: \"MultiLineString\",\n        coordinates: routeGeometries.obstacleWays,\n      },\n      properties: {\n        color: \"#dc0451\",\n        opacity: 1,\n      },\n    });\n  }\n  if (routeGeometries?.imaginaryWays) {\n    features.push({\n      type: \"Feature\",\n      geometry: {\n        type: \"MultiLineString\",\n        coordinates: routeGeometries.imaginaryWays,\n      },\n      properties: {\n        color: \"#000\",\n        imaginary: true,\n      },\n    });\n  }\n  if (routeGeometries?.obstacles) {\n    features.push({\n      type: \"Feature\",\n      geometry: {\n        type: \"MultiPoint\",\n        coordinates: routeGeometries.obstacles,\n      },\n      properties: {\n        color: \"#dc0451\",\n        ref: \"!\",\n      },\n    });\n  }\n  return {\n    type: \"FeatureCollection\",\n    features,\n  };\n}\n\nexport default async function calculatePlan(\n  origin: [number, number],\n  targets: Array<ElementWithCoordinates>,\n  callback: (f: FeatureCollection) => void\n): Promise<void> {\n  const { Planner } = await import(\n    /* webpackChunkName: \"planner-config\" */\n    /* webpackPrefetch: true */\n    \"./planner-config\"\n  );\n  targets.forEach((target) => {\n    const planner = new Planner();\n    // XXX setProfileID requires URL to start with scheme, so guess\n    const protocol = process.env.NODE_ENV === \"production\" ? \"https\" : \"http\";\n    planner\n      .setProfileID(`${protocol}://${process.env.PUBLIC_URL}/delivery.json`)\n      .query({\n        from: { latitude: origin[0], longitude: origin[1] },\n        to: { latitude: target.lat, longitude: target.lon },\n      })\n      .take(1)\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      .on(\"data\", async (path: any) => {\n        const completePath = await planner.completePath(path);\n        // eslint-disable-next-line no-console\n        console.log(\"Plan\", completePath, \"from\", origin, \"to\", target);\n        const routeGeometries = extractGeometry(completePath);\n        const geoJSON = geometryToGeoJSON(\n          origin,\n          [target],\n          undefined,\n          routeGeometries\n        );\n        callback(geoJSON);\n      });\n  });\n}\n","export interface OverpassResponse {\n  version: number;\n  generator: string;\n  osm3s: Osm3S;\n  elements: Element[];\n}\n\nexport interface Osm3S {\n  timestamp_osm_base: Date;\n  copyright: string;\n}\n\nexport type Element =\n  | ElementWithCoordinates\n  | (ElementCore & Partial<Coordinates>);\n\nexport type ElementWithCoordinates = ElementCore & Coordinates;\n\ninterface ElementCore {\n  type: string;\n  id: number;\n  tags?: Tags;\n}\n\nexport interface Coordinates {\n  lat: number;\n  lon: number;\n}\n\nexport interface Tags {\n  entrance?: string;\n  operator?: string;\n  ref?: string;\n  \"addr:unit\"?: string;\n  \"addr:housenumber\"?: string;\n  \"addr:street\"?: string;\n}\n\nconst buildEntranceQuery = (lat: number, lon: number): string => `\n  [out:json][timeout:25];\n  (\n    relation(around:10, ${lat}, ${lon})[building];\n    way(r);\n    way(around:10, ${lat}, ${lon})[building];\n  )->.b;\n  // gather results\n  (\n    node(w.b)[entrance];\n  );\n  // print results\n  out body;\n  >;\n  out skel qt;\n`;\n\nexport const queryEntrances = (\n  target: ElementWithCoordinates\n): Promise<ElementWithCoordinates[]> => {\n  const url = new URL(\"https://overpass.rwqr.org/api/interpreter\");\n  url.searchParams.append(\"data\", buildEntranceQuery(target.lat, target.lon));\n  return fetch(url.toString()).then((response) =>\n    response.json().then((body: OverpassResponse) => {\n      const targets = body.elements.filter(\n        (element) =>\n          element.type === \"node\" &&\n          \"lat\" in element &&\n          element.lat != null &&\n          \"lon\" in element &&\n          element.lon != null &&\n          element.tags &&\n          element.tags.entrance\n      );\n      // FIXME: How to make the compiler deduce this by itself from above?\n      // For example, see https://github.com/Microsoft/TypeScript/issues/16069\n      return targets as ElementWithCoordinates[];\n    })\n  );\n};\n","import { Map } from \"mapbox-gl\";\n\n// eslint-disable-next-line import/prefer-default-export\nexport const addImageSVG = (\n  mapboxgl: Map,\n  imageId: string,\n  svgData: string,\n  size: number\n): void => {\n  const ratio = window.devicePixelRatio;\n\n  const canvas = document.createElement(\"canvas\");\n  canvas.width = ratio * size;\n  canvas.height = ratio * size;\n\n  const ctx = canvas.getContext(\"2d\");\n  const img = new Image(size, size);\n\n  const svgDataUrl = `data:image/svg+xml,${encodeURIComponent(svgData)}`;\n\n  img.onload = (): void => {\n    if (!ctx) {\n      throw Error(\"canvas.getContext failed\");\n    }\n\n    ctx.drawImage(img, 0, 0, ratio * size, ratio * size);\n    mapboxgl.addImage(\n      imageId,\n      ctx.getImageData(0, 0, ratio * size, ratio * size),\n      { pixelRatio: ratio }\n    );\n  };\n\n  img.src = svgDataUrl;\n};\n\nexport const getMapSize = (\n  mapboxgl: Map\n): { width: number; height: number } => ({\n  width: mapboxgl?.getContainer()?.clientWidth,\n  height: mapboxgl?.getContainer()?.clientHeight,\n});\n","import React, { useState, useEffect, useRef, ReactText } from \"react\";\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport type { match } from \"react-router-dom\";\nimport { Button, IconButton } from \"@material-ui/core\";\nimport { Close as CloseIcon } from \"@material-ui/icons\";\nimport { useSnackbar } from \"notistack\";\nimport MapGL, { Popup, Source, Layer, Marker } from \"@urbica/react-map-gl\";\nimport { WebMercatorViewport } from \"viewport-mercator-project\";\nimport type { WebMercatorViewportOptions } from \"viewport-mercator-project\";\nimport { distance as turfDistance } from \"@turf/turf\";\nimport { MapboxGeoJSONFeature } from \"mapbox-gl\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { FeatureCollection } from \"geojson\";\nimport { ReactAutosuggestGeocoder } from \"react-autosuggest-geocoder\";\n\nimport {\n  routePointLayer,\n  routePointSymbolLayer,\n  routeLineLayer,\n  routeImaginaryLineLayer,\n  allEntrancesLayer,\n  allEntrancesSymbolLayer,\n  buildingHighlightLayer,\n} from \"./map-style\";\nimport Pin, { pinAsSVG } from \"./components/Pin\";\nimport UserPosition from \"./components/UserPosition\";\nimport GeolocateControl from \"./components/GeolocateControl\";\nimport calculatePlan, { geometryToGeoJSON } from \"./planner\";\nimport { queryEntrances, ElementWithCoordinates } from \"./overpass\";\nimport { addImageSVG, getMapSize } from \"./mapbox-utils\";\nimport \"./App.css\";\nimport \"./components/PinMarker.css\";\n\nconst maxRoutingDistance = 200; // in meters\n\ntype LatLng = [number, number];\n\ninterface State {\n  viewport: WebMercatorViewportOptions;\n  isOriginExplicit: boolean;\n  origin?: LatLng;\n  destination?: ElementWithCoordinates;\n  entrances?: Array<ElementWithCoordinates>;\n  route: FeatureCollection;\n  highlights?: MapboxGeoJSONFeature | FeatureCollection;\n  isGeolocating: boolean;\n  geolocationPosition: LatLng | null;\n  popupCoordinates: ElementWithCoordinates | null;\n  snackbar?: ReactText;\n}\n\nconst latLngToDestination = (latLng: LatLng): ElementWithCoordinates => ({\n  id: -1,\n  type: \"node\",\n  lat: latLng[0],\n  lon: latLng[1],\n});\n\nconst destinationToLatLng = (destination: ElementWithCoordinates): LatLng => [\n  destination.lat,\n  destination.lon,\n];\n\nconst initialState: State = {\n  entrances: [],\n  route: geometryToGeoJSON(),\n  highlights: {\n    type: \"FeatureCollection\",\n    features: [],\n  },\n  viewport: {\n    latitude: 60.17,\n    longitude: 24.941,\n    zoom: 15,\n    bearing: 0,\n    pitch: 0,\n  },\n  isOriginExplicit: false,\n  isGeolocating: false,\n  geolocationPosition: null,\n  popupCoordinates: null,\n};\n\nconst metropolitanAreaCenter = [60.17066815612902, 24.941510260105133];\n\nconst transformRequest = (originalURL: string): { url: string } => {\n  const url = originalURL.replace(\n    \"https://static.hsldev.com/mapfonts/Klokantech Noto Sans\",\n    \"https://fonts.openmaptiles.org/Klokantech Noto Sans\"\n  );\n  return { url };\n};\n\nconst distance = (from: LatLng, to: LatLng): number =>\n  turfDistance([from[1], from[0]], [to[1], to[0]], { units: \"metres\" });\n\nconst parseLatLng = (text: string | undefined): LatLng | undefined => {\n  if (text) {\n    const parts = text.split(\",\");\n    if (parts.length === 2 && parts[0].length && parts[1].length) {\n      const [lat, lon] = parts.map(Number);\n      if (!Number.isNaN(lat) && lon > -90 && lon < 90) {\n        return [lat, lon];\n      }\n    }\n  }\n  return undefined;\n};\n\nconst fitBounds = (\n  viewportOptions: WebMercatorViewportOptions,\n  latLngs: Array<LatLng | undefined>\n): WebMercatorViewportOptions => {\n  const viewport = new WebMercatorViewport(viewportOptions);\n  const inputs = latLngs.filter((x) => x) as Array<LatLng>;\n  if (!inputs.length) return viewportOptions; // Nothing to do\n  const minLng = Math.min(...inputs.map((x) => x[1]));\n  const maxLng = Math.max(...inputs.map((x) => x[1]));\n  const minLat = Math.min(...inputs.map((x) => x[0]));\n  const maxLat = Math.max(...inputs.map((x) => x[0]));\n  const padding = 20;\n  const markerSize = 50;\n  const occludedTop = 40;\n  const circleRadius = 5;\n  return viewport.fitBounds(\n    [\n      [minLng, minLat],\n      [maxLng, maxLat],\n    ],\n    {\n      padding: {\n        top: padding + occludedTop + markerSize,\n        bottom: padding + circleRadius,\n        left: padding + markerSize / 2,\n        right: padding + markerSize / 2,\n      },\n      maxZoom: 17,\n    } as any // eslint-disable-line @typescript-eslint/no-explicit-any\n    // XXX above: @types/viewport-mercator-project is missing maxZoom\n  );\n};\n\nconst App: React.FC = () => {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const map = useRef<any>(null);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const geocoder = useRef<any>(null);\n\n  // Install a callback to dynamically create pin icons that our map styles use\n  useEffect(() => {\n    if (!map.current) {\n      return; // No map yet, so nothing to do\n    }\n    const mapboxgl = map.current.getMap();\n    // FIXME: Unclear why this passed type checking before.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    mapboxgl?.on(\"styleimagemissing\", ({ id: iconId }: any) => {\n      if (!iconId?.startsWith(\"icon-pin-\")) {\n        return; // We only know how to generate pin icons\n      }\n      const [, , size, fill, stroke] = iconId.split(\"-\"); // e.g. icon-pin-48-green-#fff\n      const svgData = pinAsSVG(size, `fill: ${fill}; stroke: ${stroke}`);\n      addImageSVG(mapboxgl, iconId, svgData, size);\n    });\n  }, [map]);\n\n  const urlMatch = useRouteMatch({\n    path: \"/route/:from?/:to?\",\n  }) as match<{ from: string; to: string }>;\n\n  const [state, setState] = useState(initialState);\n\n  const fitMap = (\n    viewportOptions: WebMercatorViewportOptions,\n    latLngs: Array<LatLng | undefined>\n  ): WebMercatorViewportOptions => {\n    return fitBounds(\n      { ...viewportOptions, ...getMapSize(map.current?.getMap()) },\n      latLngs\n    );\n  };\n\n  useEffect(() => {\n    /**\n     * FIXME: urbica/react-map-gl does not expose fitBounds and its viewport\n     * does not include width and height which are required by fitBounds from\n     * viewport-mercator-project. This is dirty but seems to work.\n     */\n    if (!map.current) {\n      return; // No map yet, so nothing to do\n    }\n    const { width, height } = getMapSize(map.current.getMap());\n    if (\n      urlMatch &&\n      width != null &&\n      width > 0 &&\n      height != null &&\n      height > 0\n    ) {\n      const origin = parseLatLng(urlMatch.params.from);\n      const destination = parseLatLng(urlMatch.params.to);\n      const extendedViewport = { ...state.viewport, width, height };\n      const viewport = fitBounds(extendedViewport, [origin, destination]);\n      setState(\n        (prevState): State => ({\n          ...prevState,\n          origin,\n          isOriginExplicit: origin != null,\n          destination: destination && latLngToDestination(destination),\n          viewport: { ...prevState.viewport, ...viewport },\n        })\n      );\n    }\n  }, [map]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const history = useHistory();\n\n  const snackbarFunctions = useSnackbar();\n  // XXX: useSnackbar does not return functions during unit tests\n  const enqueueSnackbar = snackbarFunctions?.enqueueSnackbar;\n  const closeSnackbar = snackbarFunctions?.closeSnackbar;\n\n  useEffect(() => {\n    const destination = state.destination && [\n      state.destination.lat,\n      state.destination.lon,\n    ];\n    const path = `/route/${state.origin}/${destination}/`;\n    if (history.location.pathname !== path) {\n      history.replace(path);\n    }\n  }, [history, state.origin, state.destination]);\n\n  useEffect(() => {\n    if (!state.destination) return; // Nothing to do yet\n    queryEntrances(state.destination).then((result) => {\n      setState(\n        (prevState): State => {\n          if (!state.destination) return prevState; // XXX Typescript needs this\n          if (prevState.destination !== state.destination) {\n            return prevState;\n          }\n          const entrances = result.length ? result : [state.destination];\n\n          return {\n            ...prevState,\n            entrances,\n          };\n        }\n      );\n    });\n  }, [state.destination]);\n\n  // Set off routing calculation when inputs change; collect results in state.route\n  useEffect(() => {\n    if (state.snackbar) closeSnackbar(state.snackbar);\n\n    if (!state.origin || !state.destination || !state.entrances) {\n      return; // Nothing to do yet\n    }\n    let targets = [] as Array<ElementWithCoordinates>;\n\n    // Try to find the destination among the entrances\n    state.entrances.forEach((entrance) => {\n      if (!state.destination) return; // XXX: Typescript needs this\n      if (\n        state.destination.type === entrance.type &&\n        state.destination.id === entrance.id\n      ) {\n        targets = [entrance];\n      }\n    });\n\n    // If the destination entrance wasn't found, route to all entrances\n    if (!targets.length) {\n      targets = state.entrances;\n    }\n\n    // Clear previous routing results by setting an empty result set\n    setState(\n      (prevState): State => ({\n        ...prevState,\n        route: geometryToGeoJSON(),\n      })\n    );\n\n    // Don't calculate routes between points more than 200 meters apart\n    if (\n      distance(state.origin, destinationToLatLng(state.destination)) >\n      maxRoutingDistance\n    ) {\n      const message = state.isOriginExplicit\n        ? \"Distance too long!\"\n        : \"Routing starts when distance is shorter\";\n      const snackbar = enqueueSnackbar(message, {\n        variant: \"warning\",\n        persist: true,\n        anchorOrigin: {\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        },\n        action: (\n          <>\n            {state.isOriginExplicit && (\n              <Button\n                onClick={(): void => {\n                  setState(\n                    (prevState): State => ({\n                      ...prevState,\n                      origin: prevState.geolocationPosition || undefined,\n                      isOriginExplicit: false,\n                      viewport: fitMap(prevState.viewport, [\n                        prevState.destination &&\n                          destinationToLatLng(prevState.destination),\n                      ]),\n                    })\n                  );\n                }}\n              >\n                Discard origin\n              </Button>\n            )}\n            <Button\n              onClick={(): void => {\n                setState(\n                  (prevState): State => ({\n                    ...prevState,\n                    destination: undefined,\n                    viewport: fitMap(prevState.viewport, [prevState.origin]),\n                  })\n                );\n              }}\n            >\n              Discard destination\n            </Button>\n            <Button\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              href={`https://www.google.com/maps/dir/?api=1&origin=${state.origin[0]},${state.origin[1]}&destination=${state.destination.lat},${state.destination.lon}`}\n            >\n              Google Maps\n            </Button>\n\n            <IconButton\n              aria-label=\"close\"\n              onClick={(): void => closeSnackbar(snackbar)}\n            >\n              <CloseIcon />\n            </IconButton>\n          </>\n        ),\n      });\n      setState((prevState): State => ({ ...prevState, snackbar }));\n      return;\n    }\n\n    calculatePlan(state.origin, targets, (geojson) => {\n      setState(\n        (prevState): State => {\n          // don't use the result if the parameters changed meanwhile\n          if (\n            state.origin !== prevState.origin ||\n            state.entrances !== prevState.entrances ||\n            state.destination !== prevState.destination\n          ) {\n            return prevState;\n          }\n          const extendedGeojson = {\n            ...geojson,\n            features: geojson.features.concat(prevState.route.features),\n          };\n          return {\n            ...prevState,\n            route: extendedGeojson,\n          };\n        }\n      );\n    });\n  }, [state.origin, state.entrances]); // eslint-disable-line react-hooks/exhaustive-deps\n  // XXX: state.destination is missing above as we need to wait for state.entrances to change as well\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const handleMapClick = (event: any): void => {\n    // Inspect the topmost feature under click\n    const feature = map.current?.getMap().queryRenderedFeatures(event.point)[0];\n    setState(\n      (prevState): State => {\n        if (feature?.properties.entrance) {\n          // If an entrance was clicked\n          const element = {\n            id: feature.properties[\"@id\"],\n            type: feature.properties[\"@type\"],\n            lat: feature.geometry.coordinates[1],\n            lon: feature.geometry.coordinates[0],\n            tags: feature.properties,\n          };\n          if (\n            prevState.origin &&\n            distance(prevState.origin, [\n              feature.geometry.coordinates[1],\n              feature.geometry.coordinates[0],\n            ]) < maxRoutingDistance\n          ) {\n            // If the entrance is close enough for routing, set it as destination\n            return {\n              ...prevState,\n              destination: element,\n              popupCoordinates: element,\n              highlights: {\n                type: \"FeatureCollection\",\n                features: [],\n              },\n            };\n          }\n          // Otherwise, just open the popup\n          return {\n            ...prevState,\n            popupCoordinates: element,\n          };\n        }\n        if (feature?.sourceLayer === \"building\") {\n          // If a building was clicked, highlight it and set as destination\n          return {\n            ...prevState,\n            highlights: feature.toJSON(),\n            destination: latLngToDestination([\n              event.lngLat.lat,\n              event.lngLat.lng,\n            ]),\n          };\n        }\n        // As a fallback, toggle popup.\n        if (prevState.popupCoordinates) {\n          return {\n            ...prevState,\n            popupCoordinates: null,\n          };\n        }\n        return {\n          ...prevState,\n          popupCoordinates: latLngToDestination([\n            event.lngLat.lat,\n            event.lngLat.lng,\n          ]),\n          highlights: {\n            type: \"FeatureCollection\",\n            features: [],\n          },\n        };\n      }\n    );\n  };\n\n  /**\n   * Two tasks:\n   * - update geolocation position into state\n   * - change origin if deemed appropriate\n   */\n  const onGeolocate = (position: Position): void =>\n    setState(\n      (prevState): State => {\n        if (prevState.isGeolocating) {\n          const isFirstPosition = prevState.geolocationPosition == null;\n          const geolocationPosition: LatLng = [\n            position.coords.latitude,\n            position.coords.longitude,\n          ];\n          const viewport =\n            isFirstPosition && !prevState.isOriginExplicit\n              ? fitMap(prevState.viewport, [\n                  geolocationPosition,\n                  prevState.destination &&\n                    destinationToLatLng(prevState.destination),\n                ])\n              : prevState.viewport;\n          const updateBase = { ...prevState, geolocationPosition, viewport };\n          if (\n            !prevState.isOriginExplicit &&\n            (prevState.origin == null ||\n              distance(prevState.origin, geolocationPosition) > 20)\n          ) {\n            return { ...updateBase, origin: geolocationPosition };\n          }\n          return updateBase;\n        }\n        return prevState;\n      }\n    );\n\n  return (\n    <div data-testid=\"app\" className=\"App\">\n      <header className=\"App-header\">\n        <h2>Gatesolve</h2>\n      </header>\n      <div className=\"App-shadow\" />\n      <ReactAutosuggestGeocoder\n        ref={geocoder}\n        url=\"https://api.digitransit.fi/geocoding/v1\"\n        sources=\"oa,osm,nlsfi\"\n        highlightFirstSuggestion\n        inputProps={{ placeholder: \"Destination name or address\" }}\n        center={{\n          latitude:\n            state.geolocationPosition?.[0] ||\n            state.origin?.[0] ||\n            state.destination?.lat ||\n            metropolitanAreaCenter[0],\n          longitude:\n            state.geolocationPosition?.[1] ||\n            state.origin?.[1] ||\n            state.destination?.lon ||\n            metropolitanAreaCenter[1],\n        }}\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        onSuggestionSelected={(event: any, { suggestion }: any): any => {\n          const destination: LatLng = [\n            suggestion.geometry.coordinates[1],\n            suggestion.geometry.coordinates[0],\n          ];\n          const [type, id] = suggestion.properties.source_id.split(\":\");\n          setState(\n            (prevState): State => {\n              const pointsToFit =\n                prevState.origin &&\n                distance(prevState.origin, destination) < maxRoutingDistance\n                  ? [prevState.origin, destination]\n                  : [destination];\n              const viewport = fitMap(prevState.viewport, pointsToFit);\n              return {\n                ...prevState,\n                origin: prevState.origin,\n                destination: {\n                  lat: destination[0],\n                  lon: destination[1],\n                  type,\n                  id: Number(id),\n                },\n                entrances: [],\n                viewport: { ...prevState.viewport, ...viewport },\n              };\n            }\n          );\n        }}\n      />\n      <MapGL\n        ref={map}\n        // This is according to the Get Started materials:\n        // https://uber.github.io/react-map-gl/docs/get-started/get-started/\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        {...state.viewport}\n        style={{ width: \"100%\", height: \"90%\" }}\n        mapStyle=\"https://raw.githubusercontent.com/HSLdevcom/hsl-map-style/master/simple-style.json\"\n        transformRequest={transformRequest}\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        onViewportChange={(viewport: any): void => {\n          setState((prevState): State => ({ ...prevState, viewport }));\n        }}\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        onHover={(event: any): void => {\n          // Inspect the topmost feature under click\n          const feature = event.features?.[0];\n          // Set cursor shape depending whether we would click an entrance\n          const cursor = feature?.properties.entrance ? \"pointer\" : \"grab\";\n          // FIXME: Better way to set the pointer shape or at least find the element\n          const mapboxOverlaysElement = document.querySelector(\n            \".overlays\"\n          ) as HTMLElement;\n          if (mapboxOverlaysElement) {\n            mapboxOverlaysElement.style.cursor = cursor;\n          }\n        }}\n        onClick={handleMapClick}\n        onContextmenu={handleMapClick}\n      >\n        <GeolocateControl\n          dataTestId=\"geolocate-control\"\n          enableOnMount\n          onEnable={(isInitiatedByUser): void => {\n            setState((prevState) => ({\n              ...prevState,\n              isOriginExplicit:\n                !isInitiatedByUser && prevState.isOriginExplicit,\n              isGeolocating: true,\n            }));\n          }}\n          onDisable={(): void => {\n            setState((prevState) => ({\n              ...prevState,\n              isGeolocating: false,\n              geolocationPosition: null,\n            }));\n          }}\n          onGeolocate={onGeolocate}\n        />\n        {state.geolocationPosition != null && (\n          <Marker\n            offset={[-20, -20]}\n            longitude={state.geolocationPosition[1]}\n            latitude={state.geolocationPosition[0]}\n          >\n            <UserPosition dataTestId=\"user-marker\" />\n          </Marker>\n        )}\n        <Source\n          id=\"osm-qa-tiles\"\n          type=\"vector\"\n          tiles={[\"https://tile.olmap.org/osm-qa-tiles/{z}/{x}/{y}.pbf\"]}\n          minzoom={12}\n          maxzoom={12}\n        >\n          <Layer\n            source-layer=\"osm\"\n            // eslint-disable-next-line react/jsx-props-no-spreading\n            {...allEntrancesLayer}\n            source=\"osm-qa-tiles\"\n          />\n          <Layer\n            source-layer=\"osm\"\n            // eslint-disable-next-line react/jsx-props-no-spreading\n            {...allEntrancesSymbolLayer}\n            source=\"osm-qa-tiles\"\n          />\n        </Source>\n        <Source id=\"highlights\" type=\"geojson\" data={state.highlights}>\n          <Layer\n            // eslint-disable-next-line react/jsx-props-no-spreading\n            {...buildingHighlightLayer}\n            source=\"highlights\"\n          />\n        </Source>\n\n        <Source id=\"route\" type=\"geojson\" data={state.route}>\n          <Layer\n            // eslint-disable-next-line react/jsx-props-no-spreading\n            {...routeLineLayer}\n            source=\"route\"\n          />\n          <Layer\n            // eslint-disable-next-line react/jsx-props-no-spreading\n            {...routeImaginaryLineLayer}\n            source=\"route\"\n          />\n\n          <Layer\n            // eslint-disable-next-line react/jsx-props-no-spreading\n            {...routePointLayer}\n            source=\"route\"\n          />\n          <Layer\n            // eslint-disable-next-line react/jsx-props-no-spreading\n            {...routePointSymbolLayer}\n            source=\"route\"\n          />\n        </Source>\n        {state.origin && (\n          <Marker\n            className=\"PinMarker\"\n            draggable\n            offset={[0, -22.5]}\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            onDragEnd={(lngLat: any): void => {\n              setState(\n                (prevState): State => ({\n                  ...prevState,\n                  origin: [lngLat.lat, lngLat.lng],\n                  isOriginExplicit: true,\n                })\n              );\n            }}\n            longitude={state.origin[1]}\n            latitude={state.origin[0]}\n          >\n            <Pin\n              dataTestId=\"origin\"\n              style={{ fill: \"#00afff\", stroke: \"#fff\" }}\n            />\n          </Marker>\n        )}\n        {state.destination && (\n          <Marker\n            className=\"PinMarker\"\n            draggable\n            offset={[0, -22.5]}\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            onDragEnd={(lngLat: any): void => {\n              geocoder.current.clear();\n              setState(\n                (prevState): State => ({\n                  ...prevState,\n                  destination: latLngToDestination([lngLat.lat, lngLat.lng]),\n                })\n              );\n            }}\n            longitude={state.destination.lon}\n            latitude={state.destination.lat}\n          >\n            <Pin\n              dataTestId=\"destination\"\n              style={{\n                fill: \"#64be14\",\n                stroke: \"#fff\",\n              }}\n            />\n          </Marker>\n        )}\n        <Popup\n          open={state.popupCoordinates != null}\n          latitude={state.popupCoordinates?.lat || null}\n          longitude={state.popupCoordinates?.lon || null}\n          closeButton={false}\n          closeOnClick={false}\n        >\n          {state.popupCoordinates && (\n            <>\n              <div>\n                <p>\n                  <h3>\n                    {state.popupCoordinates.tags?.[\"addr:street\"]}{\" \"}\n                    {state.popupCoordinates.tags?.[\"addr:housenumber\"]}{\" \"}\n                    {state.popupCoordinates.tags?.[\"ref\"] ||\n                      state.popupCoordinates.tags?.[\"addr:unit\"]}\n                  </h3>\n                </p>\n                <p>\n                  {state.popupCoordinates.tags && (\n                    <table\n                      style={{\n                        textAlign: \"left\",\n                      }}\n                    >\n                      {Object.entries(state.popupCoordinates.tags)\n                        .filter(\n                          ([k]) =>\n                            !k.startsWith(\"@\") &&\n                            ![\n                              \"addr:street\",\n                              \"addr:housenumber\",\n                              \"addr:unit\",\n                              \"ref\",\n                            ].find((censored) => k === censored)\n                        )\n                        .map(([k, v]) => (\n                          <tr key={`${k}-${v}`}>\n                            <td\n                              style={{\n                                padding: \"0 5px 0 0\",\n                              }}\n                            >\n                              {k}\n                            </td>\n                            <td>{v}</td>\n                          </tr>\n                        ))}\n                    </table>\n                  )}\n                </p>\n              </div>\n              <Button\n                data-testid=\"origin-button\"\n                variant=\"contained\"\n                size=\"small\"\n                style={{ backgroundColor: \"#00afff\", color: \"#fff\" }}\n                type=\"button\"\n                aria-label=\"Set origin\"\n                onClick={(): void =>\n                  setState(\n                    (prevState): State => {\n                      // Check this to appease the compiler.\n                      if (prevState.popupCoordinates != null) {\n                        return {\n                          ...prevState,\n                          origin: destinationToLatLng(\n                            prevState.popupCoordinates\n                          ),\n                          isOriginExplicit: true,\n                          popupCoordinates: null,\n                        };\n                      }\n                      return {\n                        ...prevState,\n                        isOriginExplicit: true,\n                        popupCoordinates: null,\n                      };\n                    }\n                  )\n                }\n              >\n                Origin\n              </Button>\n              <span style={{ padding: \"5px\" }} />\n              <Button\n                data-testid=\"destination-button\"\n                variant=\"contained\"\n                size=\"small\"\n                style={{ backgroundColor: \"#64be14\", color: \"#fff\" }}\n                type=\"button\"\n                aria-label=\"Set destination\"\n                onClick={(): void =>\n                  setState(\n                    (prevState): State => {\n                      // Check this to appease the compiler.\n                      if (prevState.popupCoordinates != null) {\n                        return {\n                          ...prevState,\n                          destination: prevState.popupCoordinates,\n                          popupCoordinates: null,\n                        };\n                      }\n                      return {\n                        ...prevState,\n                        popupCoordinates: null,\n                      };\n                    }\n                  )\n                }\n              >\n                Destination\n              </Button>\n            </>\n          )}\n        </Popup>\n      </MapGL>\n    </div>\n  );\n};\n\nexport default App;\n"],"sourceRoot":""}